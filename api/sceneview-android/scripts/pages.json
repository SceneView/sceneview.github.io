[{"name":"ADD_MISSING_FILES","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.ADD_MISSING_FILES","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-a-d-d_-m-i-s-s-i-n-g_-f-i-l-e-s/index.html","searchKeys":["ADD_MISSING_FILES","ADD_MISSING_FILES","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.ADD_MISSING_FILES"]},{"name":"BOTTOM","description":"com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.BOTTOM","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-vertical-alignment/-b-o-t-t-o-m/index.html","searchKeys":["BOTTOM","BOTTOM","com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.BOTTOM"]},{"name":"CENTER","description":"com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.CENTER","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-horizontal-alignment/-c-e-n-t-e-r/index.html","searchKeys":["CENTER","CENTER","com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.CENTER"]},{"name":"CENTER","description":"com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.CENTER","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-vertical-alignment/-c-e-n-t-e-r/index.html","searchKeys":["CENTER","CENTER","com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.CENTER"]},{"name":"CLAMP_TO_EDGE","description":"com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.CLAMP_TO_EDGE","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-wrap-mode/-c-l-a-m-p_-t-o_-e-d-g-e/index.html","searchKeys":["CLAMP_TO_EDGE","CLAMP_TO_EDGE","com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.CLAMP_TO_EDGE"]},{"name":"COLOR_MAP","description":"com.google.ar.sceneform.rendering.Texture.Usage.COLOR_MAP","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-usage/-c-o-l-o-r_-m-a-p/index.html","searchKeys":["COLOR_MAP","COLOR_MAP","com.google.ar.sceneform.rendering.Texture.Usage.COLOR_MAP"]},{"name":"CREATE_LOADER","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.CREATE_LOADER","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-c-r-e-a-t-e_-l-o-a-d-e-r/index.html","searchKeys":["CREATE_LOADER","CREATE_LOADER","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.CREATE_LOADER"]},{"name":"CREATE_RENDERABLE","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.CREATE_RENDERABLE","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-c-r-e-a-t-e_-r-e-n-d-e-r-a-b-l-e/index.html","searchKeys":["CREATE_RENDERABLE","CREATE_RENDERABLE","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.CREATE_RENDERABLE"]},{"name":"DATA","description":"com.google.ar.sceneform.rendering.Texture.Usage.DATA","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-usage/-d-a-t-a/index.html","searchKeys":["DATA","DATA","com.google.ar.sceneform.rendering.Texture.Usage.DATA"]},{"name":"DOWNLOAD_MODEL","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.DOWNLOAD_MODEL","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-d-o-w-n-l-o-a-d_-m-o-d-e-l/index.html","searchKeys":["DOWNLOAD_MODEL","DOWNLOAD_MODEL","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.DOWNLOAD_MODEL"]},{"name":"FETCH_MATERIALS","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.FETCH_MATERIALS","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-f-e-t-c-h_-m-a-t-e-r-i-a-l-s/index.html","searchKeys":["FETCH_MATERIALS","FETCH_MATERIALS","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.FETCH_MATERIALS"]},{"name":"FINISHED_READING_FILES","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.FINISHED_READING_FILES","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-f-i-n-i-s-h-e-d_-r-e-a-d-i-n-g_-f-i-l-e-s/index.html","searchKeys":["FINISHED_READING_FILES","FINISHED_READING_FILES","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.FINISHED_READING_FILES"]},{"name":"LEFT","description":"com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.LEFT","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-horizontal-alignment/-l-e-f-t/index.html","searchKeys":["LEFT","LEFT","com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.LEFT"]},{"name":"LINEAR","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.LINEAR","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-mag-filter/-l-i-n-e-a-r/index.html","searchKeys":["LINEAR","LINEAR","com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.LINEAR"]},{"name":"LINEAR","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.LINEAR","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/-l-i-n-e-a-r/index.html","searchKeys":["LINEAR","LINEAR","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.LINEAR"]},{"name":"LINEAR_MIPMAP_LINEAR","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.LINEAR_MIPMAP_LINEAR","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/-l-i-n-e-a-r_-m-i-p-m-a-p_-l-i-n-e-a-r/index.html","searchKeys":["LINEAR_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.LINEAR_MIPMAP_LINEAR"]},{"name":"LINEAR_MIPMAP_NEAREST","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.LINEAR_MIPMAP_NEAREST","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/-l-i-n-e-a-r_-m-i-p-m-a-p_-n-e-a-r-e-s-t/index.html","searchKeys":["LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.LINEAR_MIPMAP_NEAREST"]},{"name":"LOAD_STAGE_NONE","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.LOAD_STAGE_NONE","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/-l-o-a-d_-s-t-a-g-e_-n-o-n-e/index.html","searchKeys":["LOAD_STAGE_NONE","LOAD_STAGE_NONE","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.LOAD_STAGE_NONE"]},{"name":"MIRRORED_REPEAT","description":"com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.MIRRORED_REPEAT","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-wrap-mode/-m-i-r-r-o-r-e-d_-r-e-p-e-a-t/index.html","searchKeys":["MIRRORED_REPEAT","MIRRORED_REPEAT","com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.MIRRORED_REPEAT"]},{"name":"NEAREST","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.NEAREST","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-mag-filter/-n-e-a-r-e-s-t/index.html","searchKeys":["NEAREST","NEAREST","com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.NEAREST"]},{"name":"NEAREST","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.NEAREST","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/-n-e-a-r-e-s-t/index.html","searchKeys":["NEAREST","NEAREST","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.NEAREST"]},{"name":"NEAREST_MIPMAP_LINEAR","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.NEAREST_MIPMAP_LINEAR","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/-n-e-a-r-e-s-t_-m-i-p-m-a-p_-l-i-n-e-a-r/index.html","searchKeys":["NEAREST_MIPMAP_LINEAR","NEAREST_MIPMAP_LINEAR","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.NEAREST_MIPMAP_LINEAR"]},{"name":"NEAREST_MIPMAP_NEAREST","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.NEAREST_MIPMAP_NEAREST","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/-n-e-a-r-e-s-t_-m-i-p-m-a-p_-n-e-a-r-e-s-t/index.html","searchKeys":["NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_NEAREST","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.NEAREST_MIPMAP_NEAREST"]},{"name":"NORMAL_MAP","description":"com.google.ar.sceneform.rendering.Texture.Usage.NORMAL_MAP","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-usage/-n-o-r-m-a-l_-m-a-p/index.html","searchKeys":["NORMAL_MAP","NORMAL_MAP","com.google.ar.sceneform.rendering.Texture.Usage.NORMAL_MAP"]},{"name":"REPEAT","description":"com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.REPEAT","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-wrap-mode/-r-e-p-e-a-t/index.html","searchKeys":["REPEAT","REPEAT","com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.REPEAT"]},{"name":"RIGHT","description":"com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.RIGHT","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-horizontal-alignment/-r-i-g-h-t/index.html","searchKeys":["RIGHT","RIGHT","com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.RIGHT"]},{"name":"TOP","description":"com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.TOP","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-vertical-alignment/-t-o-p/index.html","searchKeys":["TOP","TOP","com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.TOP"]},{"name":"abstract class Builder<T : Renderable?, B : Renderable.Builder<T, B>?>","description":"com.google.ar.sceneform.rendering.Renderable.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/index.html","searchKeys":["Builder","abstract class Builder<T : Renderable?, B : Renderable.Builder<T, B>?>","com.google.ar.sceneform.rendering.Renderable.Builder"]},{"name":"abstract class ByteBufferFactory","description":"com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-byte-buffer-factory/index.html","searchKeys":["ByteBufferFactory","abstract class ByteBufferFactory","com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory"]},{"name":"abstract class CollisionShape","description":"io.github.sceneview.collision.CollisionShape","location":"sceneview/io.github.sceneview.collision/-collision-shape/index.html","searchKeys":["CollisionShape","abstract class CollisionShape","io.github.sceneview.collision.CollisionShape"]},{"name":"abstract class Renderable","description":"com.google.ar.sceneform.rendering.Renderable","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/index.html","searchKeys":["Renderable","abstract class Renderable","com.google.ar.sceneform.rendering.Renderable"]},{"name":"abstract class Utf8","description":"com.google.flatbuffers.Utf8","location":"sceneview/com.google.flatbuffers/-utf8/index.html","searchKeys":["Utf8","abstract class Utf8","com.google.flatbuffers.Utf8"]},{"name":"abstract fun applyAnimationChange(animation: ModelAnimation): Boolean","description":"io.github.sceneview.animation.AnimatableModel.applyAnimationChange","location":"sceneview/io.github.sceneview.animation/-animatable-model/apply-animation-change.html","searchKeys":["applyAnimationChange","abstract fun applyAnimationChange(animation: ModelAnimation): Boolean","io.github.sceneview.animation.AnimatableModel.applyAnimationChange"]},{"name":"abstract fun decodeUtf8(buffer: ByteBuffer, offset: Int, length: Int): String","description":"com.google.flatbuffers.Utf8.decodeUtf8","location":"sceneview/com.google.flatbuffers/-utf8/decode-utf8.html","searchKeys":["decodeUtf8","abstract fun decodeUtf8(buffer: ByteBuffer, offset: Int, length: Int): String","com.google.flatbuffers.Utf8.decodeUtf8"]},{"name":"abstract fun destroyAllResources()","description":"com.google.ar.sceneform.resources.ResourceHolder.destroyAllResources","location":"sceneview/com.google.ar.sceneform.resources/-resource-holder/destroy-all-resources.html","searchKeys":["destroyAllResources","abstract fun destroyAllResources()","com.google.ar.sceneform.resources.ResourceHolder.destroyAllResources"]},{"name":"abstract fun encodeUtf8(in: CharSequence, out: ByteBuffer)","description":"com.google.flatbuffers.Utf8.encodeUtf8","location":"sceneview/com.google.flatbuffers/-utf8/encode-utf8.html","searchKeys":["encodeUtf8","abstract fun encodeUtf8(in: CharSequence, out: ByteBuffer)","com.google.flatbuffers.Utf8.encodeUtf8"]},{"name":"abstract fun encodedLength(sequence: CharSequence): Int","description":"com.google.flatbuffers.Utf8.encodedLength","location":"sceneview/com.google.flatbuffers/-utf8/encoded-length.html","searchKeys":["encodedLength","abstract fun encodedLength(sequence: CharSequence): Int","com.google.flatbuffers.Utf8.encodedLength"]},{"name":"abstract fun getAnimation(animationIndex: Int): ModelAnimation","description":"io.github.sceneview.animation.AnimatableModel.getAnimation","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation.html","searchKeys":["getAnimation","abstract fun getAnimation(animationIndex: Int): ModelAnimation","io.github.sceneview.animation.AnimatableModel.getAnimation"]},{"name":"abstract fun getAnimationCount(): Int","description":"io.github.sceneview.animation.AnimatableModel.getAnimationCount","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation-count.html","searchKeys":["getAnimationCount","abstract fun getAnimationCount(): Int","io.github.sceneview.animation.AnimatableModel.getAnimationCount"]},{"name":"abstract fun getSize(view: View): Vector3","description":"com.google.ar.sceneform.rendering.ViewSizer.getSize","location":"sceneview/com.google.ar.sceneform.rendering/-view-sizer/get-size.html","searchKeys":["getSize","abstract fun getSize(view: View): Vector3","com.google.ar.sceneform.rendering.ViewSizer.getSize"]},{"name":"abstract fun getTransformationMatrix(): Matrix","description":"io.github.sceneview.collision.TransformProvider.getTransformationMatrix","location":"sceneview/io.github.sceneview.collision/-transform-provider/get-transformation-matrix.html","searchKeys":["getTransformationMatrix","abstract fun getTransformationMatrix(): Matrix","io.github.sceneview.collision.TransformProvider.getTransformationMatrix"]},{"name":"abstract fun isModifiedSinceLastRender(): Boolean","description":"com.google.ar.sceneform.rendering.RenderableInstance.SkinningModifier.isModifiedSinceLastRender","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/-skinning-modifier/is-modified-since-last-render.html","searchKeys":["isModifiedSinceLastRender","abstract fun isModifiedSinceLastRender(): Boolean","com.google.ar.sceneform.rendering.RenderableInstance.SkinningModifier.isModifiedSinceLastRender"]},{"name":"abstract fun makeCopy(): CollisionShape","description":"io.github.sceneview.collision.CollisionShape.makeCopy","location":"sceneview/io.github.sceneview.collision/-collision-shape/make-copy.html","searchKeys":["makeCopy","abstract fun makeCopy(): CollisionShape","io.github.sceneview.collision.CollisionShape.makeCopy"]},{"name":"abstract fun makeCopy(): Renderable","description":"com.google.ar.sceneform.rendering.Renderable.makeCopy","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/make-copy.html","searchKeys":["makeCopy","abstract fun makeCopy(): Renderable","com.google.ar.sceneform.rendering.Renderable.makeCopy"]},{"name":"abstract fun modifyMaterialBoneTransformsBuffer(originalBuffer: FloatBuffer): FloatBuffer","description":"com.google.ar.sceneform.rendering.RenderableInstance.SkinningModifier.modifyMaterialBoneTransformsBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/-skinning-modifier/modify-material-bone-transforms-buffer.html","searchKeys":["modifyMaterialBoneTransformsBuffer","abstract fun modifyMaterialBoneTransformsBuffer(originalBuffer: FloatBuffer): FloatBuffer","com.google.ar.sceneform.rendering.RenderableInstance.SkinningModifier.modifyMaterialBoneTransformsBuffer"]},{"name":"abstract fun newByteBuffer(capacity: Int): ByteBuffer","description":"com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory.newByteBuffer","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-byte-buffer-factory/new-byte-buffer.html","searchKeys":["newByteBuffer","abstract fun newByteBuffer(capacity: Int): ByteBuffer","com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory.newByteBuffer"]},{"name":"abstract fun onContextClick(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onContextClick","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-context-click.html","searchKeys":["onContextClick","abstract fun onContextClick(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onContextClick"]},{"name":"abstract fun onDoubleTap(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onDoubleTap","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-double-tap.html","searchKeys":["onDoubleTap","abstract fun onDoubleTap(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onDoubleTap"]},{"name":"abstract fun onDoubleTapEvent(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onDoubleTapEvent","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-double-tap-event.html","searchKeys":["onDoubleTapEvent","abstract fun onDoubleTapEvent(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onDoubleTapEvent"]},{"name":"abstract fun onDown(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onDown","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-down.html","searchKeys":["onDown","abstract fun onDown(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onDown"]},{"name":"abstract fun onFinishedFetchingMaterials()","description":"com.google.ar.sceneform.rendering.LoadGltfListener.onFinishedFetchingMaterials","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/on-finished-fetching-materials.html","searchKeys":["onFinishedFetchingMaterials","abstract fun onFinishedFetchingMaterials()","com.google.ar.sceneform.rendering.LoadGltfListener.onFinishedFetchingMaterials"]},{"name":"abstract fun onFinishedLoadingModel(durationMs: Long)","description":"com.google.ar.sceneform.rendering.LoadGltfListener.onFinishedLoadingModel","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/on-finished-loading-model.html","searchKeys":["onFinishedLoadingModel","abstract fun onFinishedLoadingModel(durationMs: Long)","com.google.ar.sceneform.rendering.LoadGltfListener.onFinishedLoadingModel"]},{"name":"abstract fun onFinishedReadingFiles(durationMs: Long)","description":"com.google.ar.sceneform.rendering.LoadGltfListener.onFinishedReadingFiles","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/on-finished-reading-files.html","searchKeys":["onFinishedReadingFiles","abstract fun onFinishedReadingFiles(durationMs: Long)","com.google.ar.sceneform.rendering.LoadGltfListener.onFinishedReadingFiles"]},{"name":"abstract fun onFling(e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onFling","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-fling.html","searchKeys":["onFling","abstract fun onFling(e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onFling"]},{"name":"abstract fun onGrabBegin(x: Int, y: Int, strafe: Boolean)","description":"io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onGrabBegin","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-on-camera-gesture-listener/on-grab-begin.html","searchKeys":["onGrabBegin","abstract fun onGrabBegin(x: Int, y: Int, strafe: Boolean)","io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onGrabBegin"]},{"name":"abstract fun onGrabEnd()","description":"io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onGrabEnd","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-on-camera-gesture-listener/on-grab-end.html","searchKeys":["onGrabEnd","abstract fun onGrabEnd()","io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onGrabEnd"]},{"name":"abstract fun onGrabUpdate(x: Int, y: Int)","description":"io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onGrabUpdate","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-on-camera-gesture-listener/on-grab-update.html","searchKeys":["onGrabUpdate","abstract fun onGrabUpdate(x: Int, y: Int)","io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onGrabUpdate"]},{"name":"abstract fun onLongPress(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onLongPress","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-long-press.html","searchKeys":["onLongPress","abstract fun onLongPress(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onLongPress"]},{"name":"abstract fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener.onMove","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-on-move-listener/on-move.html","searchKeys":["onMove","abstract fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener.onMove"]},{"name":"abstract fun onMove(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onMove","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-move.html","searchKeys":["onMove","abstract fun onMove(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onMove"]},{"name":"abstract fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener.onMoveBegin","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-on-move-listener/on-move-begin.html","searchKeys":["onMoveBegin","abstract fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener.onMoveBegin"]},{"name":"abstract fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onMoveBegin","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-move-begin.html","searchKeys":["onMoveBegin","abstract fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onMoveBegin"]},{"name":"abstract fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","description":"io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener.onMoveEnd","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-on-move-listener/on-move-end.html","searchKeys":["onMoveEnd","abstract fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener.onMoveEnd"]},{"name":"abstract fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onMoveEnd","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-move-end.html","searchKeys":["onMoveEnd","abstract fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onMoveEnd"]},{"name":"abstract fun onReadingFilesFailed(exception: Exception)","description":"com.google.ar.sceneform.rendering.LoadGltfListener.onReadingFilesFailed","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/on-reading-files-failed.html","searchKeys":["onReadingFilesFailed","abstract fun onReadingFilesFailed(exception: Exception)","com.google.ar.sceneform.rendering.LoadGltfListener.onReadingFilesFailed"]},{"name":"abstract fun onRotate(detector: RotateGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener.onRotate","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-on-rotate-listener/on-rotate.html","searchKeys":["onRotate","abstract fun onRotate(detector: RotateGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener.onRotate"]},{"name":"abstract fun onRotate(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onRotate","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-rotate.html","searchKeys":["onRotate","abstract fun onRotate(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onRotate"]},{"name":"abstract fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener.onRotateBegin","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-on-rotate-listener/on-rotate-begin.html","searchKeys":["onRotateBegin","abstract fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener.onRotateBegin"]},{"name":"abstract fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onRotateBegin","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-rotate-begin.html","searchKeys":["onRotateBegin","abstract fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onRotateBegin"]},{"name":"abstract fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent)","description":"io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener.onRotateEnd","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-on-rotate-listener/on-rotate-end.html","searchKeys":["onRotateEnd","abstract fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent)","io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener.onRotateEnd"]},{"name":"abstract fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onRotateEnd","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-rotate-end.html","searchKeys":["onRotateEnd","abstract fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onRotateEnd"]},{"name":"abstract fun onScale(detector: ScaleGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener.onScale","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-on-scale-listener/on-scale.html","searchKeys":["onScale","abstract fun onScale(detector: ScaleGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener.onScale"]},{"name":"abstract fun onScale(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScale","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-scale.html","searchKeys":["onScale","abstract fun onScale(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScale"]},{"name":"abstract fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener.onScaleBegin","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-on-scale-listener/on-scale-begin.html","searchKeys":["onScaleBegin","abstract fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener.onScaleBegin"]},{"name":"abstract fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScaleBegin","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-scale-begin.html","searchKeys":["onScaleBegin","abstract fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScaleBegin"]},{"name":"abstract fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent)","description":"io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener.onScaleEnd","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-on-scale-listener/on-scale-end.html","searchKeys":["onScaleEnd","abstract fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent)","io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener.onScaleEnd"]},{"name":"abstract fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScaleEnd","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-scale-end.html","searchKeys":["onScaleEnd","abstract fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScaleEnd"]},{"name":"abstract fun onScroll(e1: MotionEvent?, e2: MotionEvent, node: Node?, distance: Float2)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScroll","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-scroll.html","searchKeys":["onScroll","abstract fun onScroll(e1: MotionEvent?, e2: MotionEvent, node: Node?, distance: Float2)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onScroll"]},{"name":"abstract fun onScroll(x: Int, y: Int, scrollDelta: Float)","description":"io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onScroll","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-on-camera-gesture-listener/on-scroll.html","searchKeys":["onScroll","abstract fun onScroll(x: Int, y: Int, scrollDelta: Float)","io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener.onScroll"]},{"name":"abstract fun onShowPress(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onShowPress","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-show-press.html","searchKeys":["onShowPress","abstract fun onShowPress(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onShowPress"]},{"name":"abstract fun onSingleTapConfirmed(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onSingleTapConfirmed","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-single-tap-confirmed.html","searchKeys":["onSingleTapConfirmed","abstract fun onSingleTapConfirmed(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onSingleTapConfirmed"]},{"name":"abstract fun onSingleTapUp(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener.onSingleTapUp","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/on-single-tap-up.html","searchKeys":["onSingleTapUp","abstract fun onSingleTapUp(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.OnGestureListener.onSingleTapUp"]},{"name":"abstract fun onViewSizeChanged(width: Int, height: Int)","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.OnViewSizeChangedListener.onViewSizeChanged","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/-on-view-size-changed-listener/on-view-size-changed.html","searchKeys":["onViewSizeChanged","abstract fun onViewSizeChanged(width: Int, height: Int)","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.OnViewSizeChangedListener.onViewSizeChanged"]},{"name":"abstract fun rayIntersection(ray: Ray, result: RayHit): Boolean","description":"io.github.sceneview.collision.CollisionShape.rayIntersection","location":"sceneview/io.github.sceneview.collision/-collision-shape/ray-intersection.html","searchKeys":["rayIntersection","abstract fun rayIntersection(ray: Ray, result: RayHit): Boolean","io.github.sceneview.collision.CollisionShape.rayIntersection"]},{"name":"abstract fun reclaimReleasedResources(): Long","description":"com.google.ar.sceneform.resources.ResourceHolder.reclaimReleasedResources","location":"sceneview/com.google.ar.sceneform.resources/-resource-holder/reclaim-released-resources.html","searchKeys":["reclaimReleasedResources","abstract fun reclaimReleasedResources(): Long","com.google.ar.sceneform.resources.ResourceHolder.reclaimReleasedResources"]},{"name":"abstract fun reportBytesDownloaded(bytes: Long)","description":"com.google.ar.sceneform.rendering.LoadGltfListener.reportBytesDownloaded","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/report-bytes-downloaded.html","searchKeys":["reportBytesDownloaded","abstract fun reportBytesDownloaded(bytes: Long)","com.google.ar.sceneform.rendering.LoadGltfListener.reportBytesDownloaded"]},{"name":"abstract fun setLoadingStage(stage: LoadGltfListener.GltfLoadStage)","description":"com.google.ar.sceneform.rendering.LoadGltfListener.setLoadingStage","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/set-loading-stage.html","searchKeys":["setLoadingStage","abstract fun setLoadingStage(stage: LoadGltfListener.GltfLoadStage)","com.google.ar.sceneform.rendering.LoadGltfListener.setLoadingStage"]},{"name":"abstract fun setModelSize(modelSizeMeters: Float)","description":"com.google.ar.sceneform.rendering.LoadGltfListener.setModelSize","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/set-model-size.html","searchKeys":["setModelSize","abstract fun setModelSize(modelSizeMeters: Float)","com.google.ar.sceneform.rendering.LoadGltfListener.setModelSize"]},{"name":"abstract fun shapeIntersection(shape: CollisionShape): Boolean","description":"io.github.sceneview.collision.CollisionShape.shapeIntersection","location":"sceneview/io.github.sceneview.collision/-collision-shape/shape-intersection.html","searchKeys":["shapeIntersection","abstract fun shapeIntersection(shape: CollisionShape): Boolean","io.github.sceneview.collision.CollisionShape.shapeIntersection"]},{"name":"abstract val engine: Engine","description":"io.github.sceneview.components.Component.engine","location":"sceneview/io.github.sceneview.components/-component/engine.html","searchKeys":["engine","abstract val engine: Engine","io.github.sceneview.components.Component.engine"]},{"name":"abstract val entity: Entity","description":"io.github.sceneview.components.Component.entity","location":"sceneview/io.github.sceneview.components/-component/entity.html","searchKeys":["entity","abstract val entity: Entity","io.github.sceneview.components.Component.entity"]},{"name":"abstract val entity: Entity","description":"io.github.sceneview.node.ModelNode.ChildNode.entity","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/entity.html","searchKeys":["entity","abstract val entity: Entity","io.github.sceneview.node.ModelNode.ChildNode.entity"]},{"name":"abstract val modelInstance: ModelInstance","description":"io.github.sceneview.node.ModelNode.ChildNode.modelInstance","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/model-instance.html","searchKeys":["modelInstance","abstract val modelInstance: ModelInstance","io.github.sceneview.node.ModelNode.ChildNode.modelInstance"]},{"name":"class AabbDef : Struct","description":"com.google.ar.sceneform.lullmodel.AabbDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/index.html","searchKeys":["AabbDef","class AabbDef : Struct","com.google.ar.sceneform.lullmodel.AabbDef"]},{"name":"class ArcDef : Struct","description":"com.google.ar.sceneform.lullmodel.ArcDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/index.html","searchKeys":["ArcDef","class ArcDef : Struct","com.google.ar.sceneform.lullmodel.ArcDef"]},{"name":"class AxisSystem","description":"com.google.ar.sceneform.lullmodel.AxisSystem","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/index.html","searchKeys":["AxisSystem","class AxisSystem","com.google.ar.sceneform.lullmodel.AxisSystem"]},{"name":"class BlendShape : Table","description":"com.google.ar.sceneform.lullmodel.BlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/index.html","searchKeys":["BlendShape","class BlendShape : Table","com.google.ar.sceneform.lullmodel.BlendShape"]},{"name":"class Builder","description":"com.google.ar.sceneform.rendering.Material.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/index.html","searchKeys":["Builder","class Builder","com.google.ar.sceneform.rendering.Material.Builder"]},{"name":"class Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-builder/index.html","searchKeys":["Builder","class Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Builder"]},{"name":"class Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/-builder/index.html","searchKeys":["Builder","class Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder"]},{"name":"class Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/index.html","searchKeys":["Builder","class Builder","com.google.ar.sceneform.rendering.Texture.Builder"]},{"name":"class Builder","description":"com.google.ar.sceneform.rendering.Vertex.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/index.html","searchKeys":["Builder","class Builder","com.google.ar.sceneform.rendering.Vertex.Builder"]},{"name":"class Builder : Geometry.Builder","description":"io.github.sceneview.geometries.Cube.Builder","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/index.html","searchKeys":["Builder","class Builder : Geometry.Builder","io.github.sceneview.geometries.Cube.Builder"]},{"name":"class Builder : Geometry.Builder","description":"io.github.sceneview.geometries.Cylinder.Builder","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/index.html","searchKeys":["Builder","class Builder : Geometry.Builder","io.github.sceneview.geometries.Cylinder.Builder"]},{"name":"class Builder : Geometry.Builder","description":"io.github.sceneview.geometries.Plane.Builder","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/index.html","searchKeys":["Builder","class Builder : Geometry.Builder","io.github.sceneview.geometries.Plane.Builder"]},{"name":"class Builder : Geometry.Builder","description":"io.github.sceneview.geometries.Polygon.Builder","location":"sceneview/io.github.sceneview.geometries/-polygon/-builder/index.html","searchKeys":["Builder","class Builder : Geometry.Builder","io.github.sceneview.geometries.Polygon.Builder"]},{"name":"class Builder : Geometry.Builder","description":"io.github.sceneview.geometries.Sphere.Builder","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/index.html","searchKeys":["Builder","class Builder : Geometry.Builder","io.github.sceneview.geometries.Sphere.Builder"]},{"name":"class Builder : Renderable.Builder<T, B> ","description":"com.google.ar.sceneform.rendering.ModelRenderable.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-model-renderable/-builder/index.html","searchKeys":["Builder","class Builder : Renderable.Builder<T, B> ","com.google.ar.sceneform.rendering.ModelRenderable.Builder"]},{"name":"class Builder : Renderable.Builder<T, B> ","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/index.html","searchKeys":["Builder","class Builder : Renderable.Builder<T, B> ","com.google.ar.sceneform.rendering.ViewRenderable.Builder"]},{"name":"class Builder : Skybox.Builder","description":"io.github.sceneview.SceneView.DefaultSkybox.Builder","location":"sceneview/io.github.sceneview/-scene-view/-default-skybox/-builder/index.html","searchKeys":["Builder","class Builder : Skybox.Builder","io.github.sceneview.SceneView.DefaultSkybox.Builder"]},{"name":"class Builder : Texture.Builder","description":"io.github.sceneview.texture.ImageTexture.Builder","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/index.html","searchKeys":["Builder","class Builder : Texture.Builder","io.github.sceneview.texture.ImageTexture.Builder"]},{"name":"class Builder : Texture.Builder","description":"io.github.sceneview.texture.VideoTexture.Builder","location":"sceneview/io.github.sceneview.texture/-video-texture/-builder/index.html","searchKeys":["Builder","class Builder : Texture.Builder","io.github.sceneview.texture.VideoTexture.Builder"]},{"name":"class CameraNode : CameraNode, ModelNode.ChildNode","description":"io.github.sceneview.node.ModelNode.CameraNode","location":"sceneview/io.github.sceneview.node/-model-node/-camera-node/index.html","searchKeys":["CameraNode","class CameraNode : CameraNode, ModelNode.ChildNode","io.github.sceneview.node.ModelNode.CameraNode"]},{"name":"class CollisionSystem(var view: View)","description":"io.github.sceneview.collision.CollisionSystem","location":"sceneview/io.github.sceneview.collision/-collision-system/index.html","searchKeys":["CollisionSystem","class CollisionSystem(var view: View)","io.github.sceneview.collision.CollisionSystem"]},{"name":"class Color : Struct","description":"com.google.ar.sceneform.lullmodel.Color","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/index.html","searchKeys":["Color","class Color : Struct","com.google.ar.sceneform.lullmodel.Color"]},{"name":"class Cube : Geometry","description":"io.github.sceneview.geometries.Cube","location":"sceneview/io.github.sceneview.geometries/-cube/index.html","searchKeys":["Cube","class Cube : Geometry","io.github.sceneview.geometries.Cube"]},{"name":"class Cylinder(engine: Engine, val primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, val vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, val indexBuffer: IndexBuffer, var primitivesOffsets: List<IntRange>, var boundingBox: Box, radius: Float, height: Float, center: Position, sideCount: Int) : Geometry","description":"io.github.sceneview.geometries.Cylinder","location":"sceneview/io.github.sceneview.geometries/-cylinder/index.html","searchKeys":["Cylinder","class Cylinder(engine: Engine, val primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, val vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, val indexBuffer: IndexBuffer, var primitivesOffsets: List<IntRange>, var boundingBox: Box, radius: Float, height: Float, center: Position, sideCount: Int) : Geometry","io.github.sceneview.geometries.Cylinder"]},{"name":"class DataBool : Table","description":"com.google.ar.sceneform.lullmodel.DataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/index.html","searchKeys":["DataBool","class DataBool : Table","com.google.ar.sceneform.lullmodel.DataBool"]},{"name":"class DataBytes : Table","description":"com.google.ar.sceneform.lullmodel.DataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/index.html","searchKeys":["DataBytes","class DataBytes : Table","com.google.ar.sceneform.lullmodel.DataBytes"]},{"name":"class DataFloat : Table","description":"com.google.ar.sceneform.lullmodel.DataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/index.html","searchKeys":["DataFloat","class DataFloat : Table","com.google.ar.sceneform.lullmodel.DataFloat"]},{"name":"class DataHashValue : Table","description":"com.google.ar.sceneform.lullmodel.DataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/index.html","searchKeys":["DataHashValue","class DataHashValue : Table","com.google.ar.sceneform.lullmodel.DataHashValue"]},{"name":"class DataInt : Table","description":"com.google.ar.sceneform.lullmodel.DataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/index.html","searchKeys":["DataInt","class DataInt : Table","com.google.ar.sceneform.lullmodel.DataInt"]},{"name":"class DataQuat : Table","description":"com.google.ar.sceneform.lullmodel.DataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/index.html","searchKeys":["DataQuat","class DataQuat : Table","com.google.ar.sceneform.lullmodel.DataQuat"]},{"name":"class DataString : Table","description":"com.google.ar.sceneform.lullmodel.DataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/index.html","searchKeys":["DataString","class DataString : Table","com.google.ar.sceneform.lullmodel.DataString"]},{"name":"class DataVec2 : Table","description":"com.google.ar.sceneform.lullmodel.DataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/index.html","searchKeys":["DataVec2","class DataVec2 : Table","com.google.ar.sceneform.lullmodel.DataVec2"]},{"name":"class DataVec3 : Table","description":"com.google.ar.sceneform.lullmodel.DataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/index.html","searchKeys":["DataVec3","class DataVec3 : Table","com.google.ar.sceneform.lullmodel.DataVec3"]},{"name":"class DataVec4 : Table","description":"com.google.ar.sceneform.lullmodel.DataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/index.html","searchKeys":["DataVec4","class DataVec4 : Table","com.google.ar.sceneform.lullmodel.DataVec4"]},{"name":"class DefaultCameraNode(val engine: Engine) : CameraNode","description":"io.github.sceneview.SceneView.DefaultCameraNode","location":"sceneview/io.github.sceneview/-scene-view/-default-camera-node/index.html","searchKeys":["DefaultCameraNode","class DefaultCameraNode(val engine: Engine) : CameraNode","io.github.sceneview.SceneView.DefaultCameraNode"]},{"name":"class DefaultLightNode(val engine: Engine) : LightNode","description":"io.github.sceneview.SceneView.DefaultLightNode","location":"sceneview/io.github.sceneview/-scene-view/-default-light-node/index.html","searchKeys":["DefaultLightNode","class DefaultLightNode(val engine: Engine) : LightNode","io.github.sceneview.SceneView.DefaultLightNode"]},{"name":"class DefaultSkybox","description":"io.github.sceneview.SceneView.DefaultSkybox","location":"sceneview/io.github.sceneview/-scene-view/-default-skybox/index.html","searchKeys":["DefaultSkybox","class DefaultSkybox","io.github.sceneview.SceneView.DefaultSkybox"]},{"name":"class DeviceType","description":"com.google.ar.sceneform.lullmodel.DeviceType","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/index.html","searchKeys":["DeviceType","class DeviceType","com.google.ar.sceneform.lullmodel.DeviceType"]},{"name":"class HeapByteBufferFactory : FlatBufferBuilder.ByteBufferFactory","description":"com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-heap-byte-buffer-factory/index.html","searchKeys":["HeapByteBufferFactory","class HeapByteBufferFactory : FlatBufferBuilder.ByteBufferFactory","com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory"]},{"name":"class HitResult(node: Node? = null) : RayHit","description":"io.github.sceneview.collision.HitResult","location":"sceneview/io.github.sceneview.collision/-hit-result/index.html","searchKeys":["HitResult","class HitResult(node: Node? = null) : RayHit","io.github.sceneview.collision.HitResult"]},{"name":"class IBLPrefilter(engine: Engine)","description":"io.github.sceneview.environment.IBLPrefilter","location":"sceneview/io.github.sceneview.environment/-i-b-l-prefilter/index.html","searchKeys":["IBLPrefilter","class IBLPrefilter(engine: Engine)","io.github.sceneview.environment.IBLPrefilter"]},{"name":"class ImageTexture","description":"io.github.sceneview.texture.ImageTexture","location":"sceneview/io.github.sceneview.texture/-image-texture/index.html","searchKeys":["ImageTexture","class ImageTexture","io.github.sceneview.texture.ImageTexture"]},{"name":"class KTXEnvironment(val engine: Engine, val indirectLight: IndirectLight?, val skybox: Skybox? = null, val sphericalHarmonics: FloatArray? = null) : Environment","description":"io.github.sceneview.environment.KTXEnvironment","location":"sceneview/io.github.sceneview.environment/-k-t-x-environment/index.html","searchKeys":["KTXEnvironment","class KTXEnvironment(val engine: Engine, val indirectLight: IndirectLight?, val skybox: Skybox? = null, val sphericalHarmonics: FloatArray? = null) : Environment","io.github.sceneview.environment.KTXEnvironment"]},{"name":"class KeyVariantPairDef : Table","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/index.html","searchKeys":["KeyVariantPairDef","class KeyVariantPairDef : Table","com.google.ar.sceneform.lullmodel.KeyVariantPairDef"]},{"name":"class LayoutFillOrder","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/index.html","searchKeys":["LayoutFillOrder","class LayoutFillOrder","com.google.ar.sceneform.lullmodel.LayoutFillOrder"]},{"name":"class LayoutHorizontalAlignment","description":"com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-horizontal-alignment/index.html","searchKeys":["LayoutHorizontalAlignment","class LayoutHorizontalAlignment","com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment"]},{"name":"class LayoutVerticalAlignment","description":"com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-vertical-alignment/index.html","searchKeys":["LayoutVerticalAlignment","class LayoutVerticalAlignment","com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment"]},{"name":"class LightNode : LightNode, ModelNode.ChildNode","description":"io.github.sceneview.node.ModelNode.LightNode","location":"sceneview/io.github.sceneview.node/-model-node/-light-node/index.html","searchKeys":["LightNode","class LightNode : LightNode, ModelNode.ChildNode","io.github.sceneview.node.ModelNode.LightNode"]},{"name":"class Mat4x3 : Struct","description":"com.google.ar.sceneform.lullmodel.Mat4x3","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/index.html","searchKeys":["Mat4x3","class Mat4x3 : Struct","com.google.ar.sceneform.lullmodel.Mat4x3"]},{"name":"class MaterialDef : Table","description":"com.google.ar.sceneform.lullmodel.MaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/index.html","searchKeys":["MaterialDef","class MaterialDef : Table","com.google.ar.sceneform.lullmodel.MaterialDef"]},{"name":"class MaterialLoader(val engine: Engine, val context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","description":"io.github.sceneview.loaders.MaterialLoader","location":"sceneview/io.github.sceneview.loaders/-material-loader/index.html","searchKeys":["MaterialLoader","class MaterialLoader(val engine: Engine, val context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","io.github.sceneview.loaders.MaterialLoader"]},{"name":"class MaterialTextureDef : Table","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/index.html","searchKeys":["MaterialTextureDef","class MaterialTextureDef : Table","com.google.ar.sceneform.lullmodel.MaterialTextureDef"]},{"name":"class MaterialTextureUsage","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/index.html","searchKeys":["MaterialTextureUsage","class MaterialTextureUsage","com.google.ar.sceneform.lullmodel.MaterialTextureUsage"]},{"name":"class ModelDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/index.html","searchKeys":["ModelDef","class ModelDef : Table","com.google.ar.sceneform.lullmodel.ModelDef"]},{"name":"class ModelIndexRange : Struct","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/index.html","searchKeys":["ModelIndexRange","class ModelIndexRange : Struct","com.google.ar.sceneform.lullmodel.ModelIndexRange"]},{"name":"class ModelInstanceDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/index.html","searchKeys":["ModelInstanceDef","class ModelInstanceDef : Table","com.google.ar.sceneform.lullmodel.ModelInstanceDef"]},{"name":"class ModelLoader(val engine: Engine, context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","description":"io.github.sceneview.loaders.ModelLoader","location":"sceneview/io.github.sceneview.loaders/-model-loader/index.html","searchKeys":["ModelLoader","class ModelLoader(val engine: Engine, context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","io.github.sceneview.loaders.ModelLoader"]},{"name":"class ModelPipelineCollidableDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/index.html","searchKeys":["ModelPipelineCollidableDef","class ModelPipelineCollidableDef : Table","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef"]},{"name":"class ModelPipelineDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/index.html","searchKeys":["ModelPipelineDef","class ModelPipelineDef : Table","com.google.ar.sceneform.lullmodel.ModelPipelineDef"]},{"name":"class ModelPipelineImportDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/index.html","searchKeys":["ModelPipelineImportDef","class ModelPipelineImportDef : Table","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef"]},{"name":"class ModelPipelineMaterialDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/index.html","searchKeys":["ModelPipelineMaterialDef","class ModelPipelineMaterialDef : Table","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef"]},{"name":"class ModelPipelineRenderableDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/index.html","searchKeys":["ModelPipelineRenderableDef","class ModelPipelineRenderableDef : Table","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef"]},{"name":"class ModelPipelineSkeletonDef : Table","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/index.html","searchKeys":["ModelPipelineSkeletonDef","class ModelPipelineSkeletonDef : Table","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef"]},{"name":"class OptionalBool","description":"com.google.ar.sceneform.lullmodel.OptionalBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-optional-bool/index.html","searchKeys":["OptionalBool","class OptionalBool","com.google.ar.sceneform.lullmodel.OptionalBool"]},{"name":"class Plane : Geometry","description":"io.github.sceneview.geometries.Plane","location":"sceneview/io.github.sceneview.geometries/-plane/index.html","searchKeys":["Plane","class Plane : Geometry","io.github.sceneview.geometries.Plane"]},{"name":"class Polygon : Geometry","description":"io.github.sceneview.geometries.Polygon","location":"sceneview/io.github.sceneview.geometries/-polygon/index.html","searchKeys":["Polygon","class Polygon : Geometry","io.github.sceneview.geometries.Polygon"]},{"name":"class Quat : Struct","description":"com.google.ar.sceneform.lullmodel.Quat","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/index.html","searchKeys":["Quat","class Quat : Struct","com.google.ar.sceneform.lullmodel.Quat"]},{"name":"class Rect : Struct","description":"com.google.ar.sceneform.lullmodel.Rect","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/index.html","searchKeys":["Rect","class Rect : Struct","com.google.ar.sceneform.lullmodel.Rect"]},{"name":"class Recti : Struct","description":"com.google.ar.sceneform.lullmodel.Recti","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/index.html","searchKeys":["Recti","class Recti : Struct","com.google.ar.sceneform.lullmodel.Recti"]},{"name":"class RenderableNode : RenderableNode, ModelNode.ChildNode","description":"io.github.sceneview.node.ModelNode.RenderableNode","location":"sceneview/io.github.sceneview.node/-model-node/-renderable-node/index.html","searchKeys":["RenderableNode","class RenderableNode : RenderableNode, ModelNode.ChildNode","io.github.sceneview.node.ModelNode.RenderableNode"]},{"name":"class SceneformBufferUtils","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/index.html","searchKeys":["SceneformBufferUtils","class SceneformBufferUtils","com.google.ar.sceneform.utilities.SceneformBufferUtils"]},{"name":"class SceneformBundle","description":"com.google.ar.sceneform.rendering.SceneformBundle","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/index.html","searchKeys":["SceneformBundle","class SceneformBundle","com.google.ar.sceneform.rendering.SceneformBundle"]},{"name":"class ShapeFactory","description":"com.google.ar.sceneform.rendering.ShapeFactory","location":"sceneview/com.google.ar.sceneform.rendering/-shape-factory/index.html","searchKeys":["ShapeFactory","class ShapeFactory","com.google.ar.sceneform.rendering.ShapeFactory"]},{"name":"class SimpleOnCameraGestureListener : CameraGestureDetector.OnCameraGestureListener","description":"io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-simple-on-camera-gesture-listener/index.html","searchKeys":["SimpleOnCameraGestureListener","class SimpleOnCameraGestureListener : CameraGestureDetector.OnCameraGestureListener","io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener"]},{"name":"class SimpleOnGestureListener : GestureDetector.OnGestureListener","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/index.html","searchKeys":["SimpleOnGestureListener","class SimpleOnGestureListener : GestureDetector.OnGestureListener","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener"]},{"name":"class SkeletonDef : Table","description":"com.google.ar.sceneform.lullmodel.SkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/index.html","searchKeys":["SkeletonDef","class SkeletonDef : Table","com.google.ar.sceneform.lullmodel.SkeletonDef"]},{"name":"class Sphere(engine: Engine, val primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, val vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, val indexBuffer: IndexBuffer, var primitivesOffsets: List<IntRange>, var boundingBox: Box, radius: Float, center: Position, stacks: Int, slices: Int) : Geometry","description":"io.github.sceneview.geometries.Sphere","location":"sceneview/io.github.sceneview.geometries/-sphere/index.html","searchKeys":["Sphere","class Sphere(engine: Engine, val primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, val vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, val indexBuffer: IndexBuffer, var primitivesOffsets: List<IntRange>, var boundingBox: Box, radius: Float, center: Position, stacks: Int, slices: Int) : Geometry","io.github.sceneview.geometries.Sphere"]},{"name":"class SubmeshAabb : Table","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/index.html","searchKeys":["SubmeshAabb","class SubmeshAabb : Table","com.google.ar.sceneform.lullmodel.SubmeshAabb"]},{"name":"class SurfaceMirrorer","description":"io.github.sceneview.utils.SurfaceMirrorer","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/index.html","searchKeys":["SurfaceMirrorer","class SurfaceMirrorer","io.github.sceneview.utils.SurfaceMirrorer"]},{"name":"class TextureDef : Table","description":"com.google.ar.sceneform.lullmodel.TextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/index.html","searchKeys":["TextureDef","class TextureDef : Table","com.google.ar.sceneform.lullmodel.TextureDef"]},{"name":"class TextureFiltering","description":"com.google.ar.sceneform.lullmodel.TextureFiltering","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/index.html","searchKeys":["TextureFiltering","class TextureFiltering","com.google.ar.sceneform.lullmodel.TextureFiltering"]},{"name":"class TextureSampler2D : TextureSampler","description":"io.github.sceneview.texture.TextureSampler2D","location":"sceneview/io.github.sceneview.texture/-texture-sampler2-d/index.html","searchKeys":["TextureSampler2D","class TextureSampler2D : TextureSampler","io.github.sceneview.texture.TextureSampler2D"]},{"name":"class TextureSamplerExternal : TextureSampler","description":"io.github.sceneview.texture.TextureSamplerExternal","location":"sceneview/io.github.sceneview.texture/-texture-sampler-external/index.html","searchKeys":["TextureSamplerExternal","class TextureSamplerExternal : TextureSampler","io.github.sceneview.texture.TextureSamplerExternal"]},{"name":"class TextureTargetType","description":"com.google.ar.sceneform.lullmodel.TextureTargetType","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-target-type/index.html","searchKeys":["TextureTargetType","class TextureTargetType","com.google.ar.sceneform.lullmodel.TextureTargetType"]},{"name":"class TextureWrap","description":"com.google.ar.sceneform.lullmodel.TextureWrap","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/index.html","searchKeys":["TextureWrap","class TextureWrap","com.google.ar.sceneform.lullmodel.TextureWrap"]},{"name":"class Utf8Safe : Utf8","description":"com.google.flatbuffers.Utf8Safe","location":"sceneview/com.google.flatbuffers/-utf8-safe/index.html","searchKeys":["Utf8Safe","class Utf8Safe : Utf8","com.google.flatbuffers.Utf8Safe"]},{"name":"class UvCoordinate","description":"com.google.ar.sceneform.rendering.Vertex.UvCoordinate","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-uv-coordinate/index.html","searchKeys":["UvCoordinate","class UvCoordinate","com.google.ar.sceneform.rendering.Vertex.UvCoordinate"]},{"name":"class VariantArrayDef : Table","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/index.html","searchKeys":["VariantArrayDef","class VariantArrayDef : Table","com.google.ar.sceneform.lullmodel.VariantArrayDef"]},{"name":"class VariantArrayDefImpl : Table","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/index.html","searchKeys":["VariantArrayDefImpl","class VariantArrayDefImpl : Table","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl"]},{"name":"class VariantDef","description":"com.google.ar.sceneform.lullmodel.VariantDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/index.html","searchKeys":["VariantDef","class VariantDef","com.google.ar.sceneform.lullmodel.VariantDef"]},{"name":"class VariantMapDef : Table","description":"com.google.ar.sceneform.lullmodel.VariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/index.html","searchKeys":["VariantMapDef","class VariantMapDef : Table","com.google.ar.sceneform.lullmodel.VariantMapDef"]},{"name":"class Vec2 : Struct","description":"com.google.ar.sceneform.lullmodel.Vec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/index.html","searchKeys":["Vec2","class Vec2 : Struct","com.google.ar.sceneform.lullmodel.Vec2"]},{"name":"class Vec2i : Struct","description":"com.google.ar.sceneform.lullmodel.Vec2i","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/index.html","searchKeys":["Vec2i","class Vec2i : Struct","com.google.ar.sceneform.lullmodel.Vec2i"]},{"name":"class Vec3 : Struct","description":"com.google.ar.sceneform.lullmodel.Vec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/index.html","searchKeys":["Vec3","class Vec3 : Struct","com.google.ar.sceneform.lullmodel.Vec3"]},{"name":"class Vec4 : Struct","description":"com.google.ar.sceneform.lullmodel.Vec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/index.html","searchKeys":["Vec4","class Vec4 : Struct","com.google.ar.sceneform.lullmodel.Vec4"]},{"name":"class VertexAttribute : Struct","description":"com.google.ar.sceneform.lullmodel.VertexAttribute","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/index.html","searchKeys":["VertexAttribute","class VertexAttribute : Struct","com.google.ar.sceneform.lullmodel.VertexAttribute"]},{"name":"class VertexAttributeType","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/index.html","searchKeys":["VertexAttributeType","class VertexAttributeType","com.google.ar.sceneform.lullmodel.VertexAttributeType"]},{"name":"class VertexAttributeUsage","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/index.html","searchKeys":["VertexAttributeUsage","class VertexAttributeUsage","com.google.ar.sceneform.lullmodel.VertexAttributeUsage"]},{"name":"class VideoMaterial","description":"io.github.sceneview.material.VideoMaterial","location":"sceneview/io.github.sceneview.material/-video-material/index.html","searchKeys":["VideoMaterial","class VideoMaterial","io.github.sceneview.material.VideoMaterial"]},{"name":"class VideoTexture","description":"io.github.sceneview.texture.VideoTexture","location":"sceneview/io.github.sceneview.texture/-video-texture/index.html","searchKeys":["VideoTexture","class VideoTexture","io.github.sceneview.texture.VideoTexture"]},{"name":"const val DEFAULT_MAIN_LIGHT_COLOR_INTENSITY: Float","description":"io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_COLOR_INTENSITY","location":"sceneview/io.github.sceneview/-scene-view/-companion/-d-e-f-a-u-l-t_-m-a-i-n_-l-i-g-h-t_-c-o-l-o-r_-i-n-t-e-n-s-i-t-y.html","searchKeys":["DEFAULT_MAIN_LIGHT_COLOR_INTENSITY","const val DEFAULT_MAIN_LIGHT_COLOR_INTENSITY: Float","io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_COLOR_INTENSITY"]},{"name":"const val DEFAULT_MAIN_LIGHT_COLOR_TEMPERATURE: Float","description":"io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_COLOR_TEMPERATURE","location":"sceneview/io.github.sceneview/-scene-view/-companion/-d-e-f-a-u-l-t_-m-a-i-n_-l-i-g-h-t_-c-o-l-o-r_-t-e-m-p-e-r-a-t-u-r-e.html","searchKeys":["DEFAULT_MAIN_LIGHT_COLOR_TEMPERATURE","const val DEFAULT_MAIN_LIGHT_COLOR_TEMPERATURE: Float","io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_COLOR_TEMPERATURE"]},{"name":"const val PRIORITY_DEFAULT: Int = 4","description":"io.github.sceneview.components.PRIORITY_DEFAULT","location":"sceneview/io.github.sceneview.components/-p-r-i-o-r-i-t-y_-d-e-f-a-u-l-t.html","searchKeys":["PRIORITY_DEFAULT","const val PRIORITY_DEFAULT: Int = 4","io.github.sceneview.components.PRIORITY_DEFAULT"]},{"name":"const val PRIORITY_FIRST: Int = 0","description":"io.github.sceneview.components.PRIORITY_FIRST","location":"sceneview/io.github.sceneview.components/-p-r-i-o-r-i-t-y_-f-i-r-s-t.html","searchKeys":["PRIORITY_FIRST","const val PRIORITY_FIRST: Int = 0","io.github.sceneview.components.PRIORITY_FIRST"]},{"name":"const val PRIORITY_LAST: Int = 7","description":"io.github.sceneview.components.PRIORITY_LAST","location":"sceneview/io.github.sceneview.components/-p-r-i-o-r-i-t-y_-l-a-s-t.html","searchKeys":["PRIORITY_LAST","const val PRIORITY_LAST: Int = 7","io.github.sceneview.components.PRIORITY_LAST"]},{"name":"const val defaultCreateSkybox: Boolean = true","description":"io.github.sceneview.environment.defaultCreateSkybox","location":"sceneview/io.github.sceneview.environment/default-create-skybox.html","searchKeys":["defaultCreateSkybox","const val defaultCreateSkybox: Boolean = true","io.github.sceneview.environment.defaultCreateSkybox"]},{"name":"const val defaultIndirectLightIntensity: Float","description":"io.github.sceneview.environment.defaultIndirectLightIntensity","location":"sceneview/io.github.sceneview.environment/default-indirect-light-intensity.html","searchKeys":["defaultIndirectLightIntensity","const val defaultIndirectLightIntensity: Float","io.github.sceneview.environment.defaultIndirectLightIntensity"]},{"name":"const val defaultSpecularFilter: Boolean = true","description":"io.github.sceneview.environment.defaultSpecularFilter","location":"sceneview/io.github.sceneview.environment/default-specular-filter.html","searchKeys":["defaultSpecularFilter","const val defaultSpecularFilter: Boolean = true","io.github.sceneview.environment.defaultSpecularFilter"]},{"name":"const val kMaterialDefaultMetallic: Float = 0.0f","description":"io.github.sceneview.material.kMaterialDefaultMetallic","location":"sceneview/io.github.sceneview.material/k-material-default-metallic.html","searchKeys":["kMaterialDefaultMetallic","const val kMaterialDefaultMetallic: Float = 0.0f","io.github.sceneview.material.kMaterialDefaultMetallic"]},{"name":"const val kMaterialDefaultReflectance: Float = 0.5f","description":"io.github.sceneview.material.kMaterialDefaultReflectance","location":"sceneview/io.github.sceneview.material/k-material-default-reflectance.html","searchKeys":["kMaterialDefaultReflectance","const val kMaterialDefaultReflectance: Float = 0.5f","io.github.sceneview.material.kMaterialDefaultReflectance"]},{"name":"const val kMaterialDefaultRoughness: Float = 0.4f","description":"io.github.sceneview.material.kMaterialDefaultRoughness","location":"sceneview/io.github.sceneview.material/k-material-default-roughness.html","searchKeys":["kMaterialDefaultRoughness","const val kMaterialDefaultRoughness: Float = 0.4f","io.github.sceneview.material.kMaterialDefaultRoughness"]},{"name":"constructor()","description":"com.google.ar.sceneform.Sceneform.Sceneform","location":"sceneview/com.google.ar.sceneform/-sceneform/-sceneform.html","searchKeys":["Sceneform","constructor()","com.google.ar.sceneform.Sceneform.Sceneform"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.AabbDef.AabbDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/-aabb-def.html","searchKeys":["AabbDef","constructor()","com.google.ar.sceneform.lullmodel.AabbDef.AabbDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ArcDef.ArcDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/-arc-def.html","searchKeys":["ArcDef","constructor()","com.google.ar.sceneform.lullmodel.ArcDef.ArcDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.BlendShape.BlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/-blend-shape.html","searchKeys":["BlendShape","constructor()","com.google.ar.sceneform.lullmodel.BlendShape.BlendShape"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Color.Color","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/-color.html","searchKeys":["Color","constructor()","com.google.ar.sceneform.lullmodel.Color.Color"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataBool.DataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/-data-bool.html","searchKeys":["DataBool","constructor()","com.google.ar.sceneform.lullmodel.DataBool.DataBool"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataBytes.DataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/-data-bytes.html","searchKeys":["DataBytes","constructor()","com.google.ar.sceneform.lullmodel.DataBytes.DataBytes"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataFloat.DataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/-data-float.html","searchKeys":["DataFloat","constructor()","com.google.ar.sceneform.lullmodel.DataFloat.DataFloat"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataHashValue.DataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/-data-hash-value.html","searchKeys":["DataHashValue","constructor()","com.google.ar.sceneform.lullmodel.DataHashValue.DataHashValue"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataInt.DataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/-data-int.html","searchKeys":["DataInt","constructor()","com.google.ar.sceneform.lullmodel.DataInt.DataInt"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataQuat.DataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/-data-quat.html","searchKeys":["DataQuat","constructor()","com.google.ar.sceneform.lullmodel.DataQuat.DataQuat"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataString.DataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/-data-string.html","searchKeys":["DataString","constructor()","com.google.ar.sceneform.lullmodel.DataString.DataString"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataVec2.DataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/-data-vec2.html","searchKeys":["DataVec2","constructor()","com.google.ar.sceneform.lullmodel.DataVec2.DataVec2"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataVec3.DataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/-data-vec3.html","searchKeys":["DataVec3","constructor()","com.google.ar.sceneform.lullmodel.DataVec3.DataVec3"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.DataVec4.DataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/-data-vec4.html","searchKeys":["DataVec4","constructor()","com.google.ar.sceneform.lullmodel.DataVec4.DataVec4"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.KeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/-key-variant-pair-def.html","searchKeys":["KeyVariantPairDef","constructor()","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.KeyVariantPairDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Mat4x3.Mat4x3","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/-mat4x3.html","searchKeys":["Mat4x3","constructor()","com.google.ar.sceneform.lullmodel.Mat4x3.Mat4x3"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.MaterialDef.MaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/-material-def.html","searchKeys":["MaterialDef","constructor()","com.google.ar.sceneform.lullmodel.MaterialDef.MaterialDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.MaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/-material-texture-def.html","searchKeys":["MaterialTextureDef","constructor()","com.google.ar.sceneform.lullmodel.MaterialTextureDef.MaterialTextureDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelDef.ModelDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/-model-def.html","searchKeys":["ModelDef","constructor()","com.google.ar.sceneform.lullmodel.ModelDef.ModelDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange.ModelIndexRange","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/-model-index-range.html","searchKeys":["ModelIndexRange","constructor()","com.google.ar.sceneform.lullmodel.ModelIndexRange.ModelIndexRange"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.ModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/-model-instance-def.html","searchKeys":["ModelInstanceDef","constructor()","com.google.ar.sceneform.lullmodel.ModelInstanceDef.ModelInstanceDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.ModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/-model-pipeline-collidable-def.html","searchKeys":["ModelPipelineCollidableDef","constructor()","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.ModelPipelineCollidableDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.ModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/-model-pipeline-def.html","searchKeys":["ModelPipelineDef","constructor()","com.google.ar.sceneform.lullmodel.ModelPipelineDef.ModelPipelineDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.ModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/-model-pipeline-import-def.html","searchKeys":["ModelPipelineImportDef","constructor()","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.ModelPipelineImportDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.ModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/-model-pipeline-material-def.html","searchKeys":["ModelPipelineMaterialDef","constructor()","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.ModelPipelineMaterialDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.ModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/-model-pipeline-renderable-def.html","searchKeys":["ModelPipelineRenderableDef","constructor()","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.ModelPipelineRenderableDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.ModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/-model-pipeline-skeleton-def.html","searchKeys":["ModelPipelineSkeletonDef","constructor()","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.ModelPipelineSkeletonDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Quat.Quat","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/-quat.html","searchKeys":["Quat","constructor()","com.google.ar.sceneform.lullmodel.Quat.Quat"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Rect.Rect","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/-rect.html","searchKeys":["Rect","constructor()","com.google.ar.sceneform.lullmodel.Rect.Rect"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Recti.Recti","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/-recti.html","searchKeys":["Recti","constructor()","com.google.ar.sceneform.lullmodel.Recti.Recti"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.SkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/-skeleton-def.html","searchKeys":["SkeletonDef","constructor()","com.google.ar.sceneform.lullmodel.SkeletonDef.SkeletonDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.SubmeshAabb","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/-submesh-aabb.html","searchKeys":["SubmeshAabb","constructor()","com.google.ar.sceneform.lullmodel.SubmeshAabb.SubmeshAabb"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.TextureDef.TextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/-texture-def.html","searchKeys":["TextureDef","constructor()","com.google.ar.sceneform.lullmodel.TextureDef.TextureDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.VariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/-variant-array-def.html","searchKeys":["VariantArrayDef","constructor()","com.google.ar.sceneform.lullmodel.VariantArrayDef.VariantArrayDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.VariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/-variant-array-def-impl.html","searchKeys":["VariantArrayDefImpl","constructor()","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.VariantArrayDefImpl"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.VariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/-variant-map-def.html","searchKeys":["VariantMapDef","constructor()","com.google.ar.sceneform.lullmodel.VariantMapDef.VariantMapDef"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Vec2.Vec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/-vec2.html","searchKeys":["Vec2","constructor()","com.google.ar.sceneform.lullmodel.Vec2.Vec2"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Vec2i.Vec2i","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/-vec2i.html","searchKeys":["Vec2i","constructor()","com.google.ar.sceneform.lullmodel.Vec2i.Vec2i"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Vec3.Vec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/-vec3.html","searchKeys":["Vec3","constructor()","com.google.ar.sceneform.lullmodel.Vec3.Vec3"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.Vec4.Vec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/-vec4.html","searchKeys":["Vec4","constructor()","com.google.ar.sceneform.lullmodel.Vec4.Vec4"]},{"name":"constructor()","description":"com.google.ar.sceneform.lullmodel.VertexAttribute.VertexAttribute","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/-vertex-attribute.html","searchKeys":["VertexAttribute","constructor()","com.google.ar.sceneform.lullmodel.VertexAttribute.VertexAttribute"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.Color.Color","location":"sceneview/com.google.ar.sceneform.rendering/-color/-color.html","searchKeys":["Color","constructor()","com.google.ar.sceneform.rendering.Color.Color"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.LullModel.LullModel","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/-lull-model.html","searchKeys":["LullModel","constructor()","com.google.ar.sceneform.rendering.LullModel.LullModel"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.ModelRenderable.Builder.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-model-renderable/-builder/-builder.html","searchKeys":["Builder","constructor()","com.google.ar.sceneform.rendering.ModelRenderable.Builder.Builder"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.PlaneFactory.PlaneFactory","location":"sceneview/com.google.ar.sceneform.rendering/-plane-factory/-plane-factory.html","searchKeys":["PlaneFactory","constructor()","com.google.ar.sceneform.rendering.PlaneFactory.PlaneFactory"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Builder.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-builder/-builder.html","searchKeys":["Builder","constructor()","com.google.ar.sceneform.rendering.RenderableDefinition.Builder.Builder"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/-builder/-builder.html","searchKeys":["Builder","constructor()","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.Builder"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.RenderableInternalFilamentAssetData","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/-renderable-internal-filament-asset-data.html","searchKeys":["RenderableInternalFilamentAssetData","constructor()","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.RenderableInternalFilamentAssetData"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.SceneformBundle.SceneformBundle","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/-sceneform-bundle.html","searchKeys":["SceneformBundle","constructor()","com.google.ar.sceneform.rendering.SceneformBundle.SceneformBundle"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.ShapeFactory.ShapeFactory","location":"sceneview/com.google.ar.sceneform.rendering/-shape-factory/-shape-factory.html","searchKeys":["ShapeFactory","constructor()","com.google.ar.sceneform.rendering.ShapeFactory.ShapeFactory"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/-builder.html","searchKeys":["Builder","constructor()","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.Builder"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.Vertex.Builder.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/-builder.html","searchKeys":["Builder","constructor()","com.google.ar.sceneform.rendering.Vertex.Builder.Builder"]},{"name":"constructor()","description":"com.google.ar.sceneform.rendering.ViewRenderableHelpers.ViewRenderableHelpers","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable-helpers/-view-renderable-helpers.html","searchKeys":["ViewRenderableHelpers","constructor()","com.google.ar.sceneform.rendering.ViewRenderableHelpers.ViewRenderableHelpers"]},{"name":"constructor()","description":"com.google.ar.sceneform.resources.ResourceRegistry.ResourceRegistry","location":"sceneview/com.google.ar.sceneform.resources/-resource-registry/-resource-registry.html","searchKeys":["ResourceRegistry","constructor()","com.google.ar.sceneform.resources.ResourceRegistry.ResourceRegistry"]},{"name":"constructor()","description":"com.google.ar.sceneform.utilities.AndroidPreconditions.AndroidPreconditions","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/-android-preconditions.html","searchKeys":["AndroidPreconditions","constructor()","com.google.ar.sceneform.utilities.AndroidPreconditions.AndroidPreconditions"]},{"name":"constructor()","description":"com.google.ar.sceneform.utilities.BufferHelper.BufferHelper","location":"sceneview/com.google.ar.sceneform.utilities/-buffer-helper/-buffer-helper.html","searchKeys":["BufferHelper","constructor()","com.google.ar.sceneform.utilities.BufferHelper.BufferHelper"]},{"name":"constructor()","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/-moving-average-milliseconds-tracker.html","searchKeys":["MovingAverageMillisecondsTracker","constructor()","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker"]},{"name":"constructor()","description":"com.google.ar.sceneform.utilities.TimeAccumulator.TimeAccumulator","location":"sceneview/com.google.ar.sceneform.utilities/-time-accumulator/-time-accumulator.html","searchKeys":["TimeAccumulator","constructor()","com.google.ar.sceneform.utilities.TimeAccumulator.TimeAccumulator"]},{"name":"constructor()","description":"com.google.flatbuffers.Constants.Constants","location":"sceneview/com.google.flatbuffers/-constants/-constants.html","searchKeys":["Constants","constructor()","com.google.flatbuffers.Constants.Constants"]},{"name":"constructor()","description":"com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory.ByteBufferFactory","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-byte-buffer-factory/-byte-buffer-factory.html","searchKeys":["ByteBufferFactory","constructor()","com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory.ByteBufferFactory"]},{"name":"constructor()","description":"com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor()","com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor()","description":"com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory.HeapByteBufferFactory","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-heap-byte-buffer-factory/-heap-byte-buffer-factory.html","searchKeys":["HeapByteBufferFactory","constructor()","com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory.HeapByteBufferFactory"]},{"name":"constructor()","description":"com.google.flatbuffers.Struct.Struct","location":"sceneview/com.google.flatbuffers/-struct/-struct.html","searchKeys":["Struct","constructor()","com.google.flatbuffers.Struct.Struct"]},{"name":"constructor()","description":"com.google.flatbuffers.Table.Table","location":"sceneview/com.google.flatbuffers/-table/-table.html","searchKeys":["Table","constructor()","com.google.flatbuffers.Table.Table"]},{"name":"constructor()","description":"com.google.flatbuffers.Utf8.Utf8","location":"sceneview/com.google.flatbuffers/-utf8/-utf8.html","searchKeys":["Utf8","constructor()","com.google.flatbuffers.Utf8.Utf8"]},{"name":"constructor()","description":"com.google.flatbuffers.Utf8Safe.Utf8Safe","location":"sceneview/com.google.flatbuffers/-utf8-safe/-utf8-safe.html","searchKeys":["Utf8Safe","constructor()","com.google.flatbuffers.Utf8Safe.Utf8Safe"]},{"name":"constructor()","description":"io.github.sceneview.SceneView.CameraGestureListener.CameraGestureListener","location":"sceneview/io.github.sceneview/-scene-view/-camera-gesture-listener/-camera-gesture-listener.html","searchKeys":["CameraGestureListener","constructor()","io.github.sceneview.SceneView.CameraGestureListener.CameraGestureListener"]},{"name":"constructor()","description":"io.github.sceneview.SceneView.DefaultSkybox.Builder.Builder","location":"sceneview/io.github.sceneview/-scene-view/-default-skybox/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.SceneView.DefaultSkybox.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.SceneView.DefaultSkybox.DefaultSkybox","location":"sceneview/io.github.sceneview/-scene-view/-default-skybox/-default-skybox.html","searchKeys":["DefaultSkybox","constructor()","io.github.sceneview.SceneView.DefaultSkybox.DefaultSkybox"]},{"name":"constructor()","description":"io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.PropertyValuesHolder","location":"sceneview/io.github.sceneview.animation/-model-animation/-property-values-holder/-property-values-holder.html","searchKeys":["PropertyValuesHolder","constructor()","io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.PropertyValuesHolder"]},{"name":"constructor()","description":"io.github.sceneview.animation.ModelAnimator.ModelAnimator","location":"sceneview/io.github.sceneview.animation/-model-animator/-model-animator.html","searchKeys":["ModelAnimator","constructor()","io.github.sceneview.animation.ModelAnimator.ModelAnimator"]},{"name":"constructor()","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.PropertyValuesHolder","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/-property-values-holder.html","searchKeys":["PropertyValuesHolder","constructor()","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.PropertyValuesHolder"]},{"name":"constructor()","description":"io.github.sceneview.collision.Box.Box","location":"sceneview/io.github.sceneview.collision/-box/-box.html","searchKeys":["Box","constructor()","io.github.sceneview.collision.Box.Box"]},{"name":"constructor()","description":"io.github.sceneview.collision.ChangeId.ChangeId","location":"sceneview/io.github.sceneview.collision/-change-id/-change-id.html","searchKeys":["ChangeId","constructor()","io.github.sceneview.collision.ChangeId.ChangeId"]},{"name":"constructor()","description":"io.github.sceneview.collision.MathHelper.MathHelper","location":"sceneview/io.github.sceneview.collision/-math-helper/-math-helper.html","searchKeys":["MathHelper","constructor()","io.github.sceneview.collision.MathHelper.MathHelper"]},{"name":"constructor()","description":"io.github.sceneview.collision.Matrix.Matrix","location":"sceneview/io.github.sceneview.collision/-matrix/-matrix.html","searchKeys":["Matrix","constructor()","io.github.sceneview.collision.Matrix.Matrix"]},{"name":"constructor()","description":"io.github.sceneview.collision.Preconditions.Preconditions","location":"sceneview/io.github.sceneview.collision/-preconditions/-preconditions.html","searchKeys":["Preconditions","constructor()","io.github.sceneview.collision.Preconditions.Preconditions"]},{"name":"constructor()","description":"io.github.sceneview.collision.Quaternion.Quaternion","location":"sceneview/io.github.sceneview.collision/-quaternion/-quaternion.html","searchKeys":["Quaternion","constructor()","io.github.sceneview.collision.Quaternion.Quaternion"]},{"name":"constructor()","description":"io.github.sceneview.collision.QuaternionEvaluator.QuaternionEvaluator","location":"sceneview/io.github.sceneview.collision/-quaternion-evaluator/-quaternion-evaluator.html","searchKeys":["QuaternionEvaluator","constructor()","io.github.sceneview.collision.QuaternionEvaluator.QuaternionEvaluator"]},{"name":"constructor()","description":"io.github.sceneview.collision.Ray.Ray","location":"sceneview/io.github.sceneview.collision/-ray/-ray.html","searchKeys":["Ray","constructor()","io.github.sceneview.collision.Ray.Ray"]},{"name":"constructor()","description":"io.github.sceneview.collision.RayHit.RayHit","location":"sceneview/io.github.sceneview.collision/-ray-hit/-ray-hit.html","searchKeys":["RayHit","constructor()","io.github.sceneview.collision.RayHit.RayHit"]},{"name":"constructor()","description":"io.github.sceneview.collision.Sphere.Sphere","location":"sceneview/io.github.sceneview.collision/-sphere/-sphere.html","searchKeys":["Sphere","constructor()","io.github.sceneview.collision.Sphere.Sphere"]},{"name":"constructor()","description":"io.github.sceneview.collision.Vector3.Vector3","location":"sceneview/io.github.sceneview.collision/-vector3/-vector3.html","searchKeys":["Vector3","constructor()","io.github.sceneview.collision.Vector3.Vector3"]},{"name":"constructor()","description":"io.github.sceneview.collision.Vector3Evaluator.Vector3Evaluator","location":"sceneview/io.github.sceneview.collision/-vector3-evaluator/-vector3-evaluator.html","searchKeys":["Vector3Evaluator","constructor()","io.github.sceneview.collision.Vector3Evaluator.Vector3Evaluator"]},{"name":"constructor()","description":"io.github.sceneview.geometries.Cube.Builder.Builder","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.geometries.Cube.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.geometries.Cylinder.Builder.Builder","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.geometries.Cylinder.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.geometries.Plane.Builder.Builder","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.geometries.Plane.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.geometries.Polygon.Builder.Builder","location":"sceneview/io.github.sceneview.geometries/-polygon/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.geometries.Polygon.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.geometries.Sphere.Builder.Builder","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.geometries.Sphere.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.SimpleOnCameraGestureListener","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-simple-on-camera-gesture-listener/-simple-on-camera-gesture-listener.html","searchKeys":["SimpleOnCameraGestureListener","constructor()","io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.SimpleOnCameraGestureListener"]},{"name":"constructor()","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.SimpleOnGestureListener","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/-simple-on-gesture-listener.html","searchKeys":["SimpleOnGestureListener","constructor()","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.SimpleOnGestureListener"]},{"name":"constructor()","description":"io.github.sceneview.node.SimpleOnNodeGestureListener.SimpleOnNodeGestureListener","location":"sceneview/io.github.sceneview.node/-simple-on-node-gesture-listener/-simple-on-node-gesture-listener.html","searchKeys":["SimpleOnNodeGestureListener","constructor()","io.github.sceneview.node.SimpleOnNodeGestureListener.SimpleOnNodeGestureListener"]},{"name":"constructor()","description":"io.github.sceneview.texture.ImageTexture.Builder.Builder","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.texture.ImageTexture.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.texture.ImageTexture.ImageTexture","location":"sceneview/io.github.sceneview.texture/-image-texture/-image-texture.html","searchKeys":["ImageTexture","constructor()","io.github.sceneview.texture.ImageTexture.ImageTexture"]},{"name":"constructor()","description":"io.github.sceneview.texture.TextureSampler2D.TextureSampler2D","location":"sceneview/io.github.sceneview.texture/-texture-sampler2-d/-texture-sampler2-d.html","searchKeys":["TextureSampler2D","constructor()","io.github.sceneview.texture.TextureSampler2D.TextureSampler2D"]},{"name":"constructor()","description":"io.github.sceneview.texture.TextureSamplerExternal.TextureSamplerExternal","location":"sceneview/io.github.sceneview.texture/-texture-sampler-external/-texture-sampler-external.html","searchKeys":["TextureSamplerExternal","constructor()","io.github.sceneview.texture.TextureSamplerExternal.TextureSamplerExternal"]},{"name":"constructor()","description":"io.github.sceneview.texture.VideoTexture.Builder.Builder","location":"sceneview/io.github.sceneview.texture/-video-texture/-builder/-builder.html","searchKeys":["Builder","constructor()","io.github.sceneview.texture.VideoTexture.Builder.Builder"]},{"name":"constructor()","description":"io.github.sceneview.texture.VideoTexture.VideoTexture","location":"sceneview/io.github.sceneview.texture/-video-texture/-video-texture.html","searchKeys":["VideoTexture","constructor()","io.github.sceneview.texture.VideoTexture.VideoTexture"]},{"name":"constructor()","description":"io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirrorer","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/-surface-mirrorer.html","searchKeys":["SurfaceMirrorer","constructor()","io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirrorer"]},{"name":"constructor(argb: Int)","description":"com.google.ar.sceneform.rendering.Color.Color","location":"sceneview/com.google.ar.sceneform.rendering/-color/-color.html","searchKeys":["Color","constructor(argb: Int)","com.google.ar.sceneform.rendering.Color.Color"]},{"name":"constructor(axis: Vector3, angle: Float)","description":"io.github.sceneview.collision.Quaternion.Quaternion","location":"sceneview/io.github.sceneview.collision/-quaternion/-quaternion.html","searchKeys":["Quaternion","constructor(axis: Vector3, angle: Float)","io.github.sceneview.collision.Quaternion.Quaternion"]},{"name":"constructor(center: Vector3, normal: Vector3)","description":"io.github.sceneview.collision.Plane.Plane","location":"sceneview/io.github.sceneview.collision/-plane/-plane.html","searchKeys":["Plane","constructor(center: Vector3, normal: Vector3)","io.github.sceneview.collision.Plane.Plane"]},{"name":"constructor(clock: MovingAverageMillisecondsTracker.Clock)","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/-moving-average-milliseconds-tracker.html","searchKeys":["MovingAverageMillisecondsTracker","constructor(clock: MovingAverageMillisecondsTracker.Clock)","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker"]},{"name":"constructor(clock: MovingAverageMillisecondsTracker.Clock, weight: Double)","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/-moving-average-milliseconds-tracker.html","searchKeys":["MovingAverageMillisecondsTracker","constructor(clock: MovingAverageMillisecondsTracker.Clock, weight: Double)","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker"]},{"name":"constructor(color: Color)","description":"com.google.ar.sceneform.rendering.Color.Color","location":"sceneview/com.google.ar.sceneform.rendering/-color/-color.html","searchKeys":["Color","constructor(color: Color)","com.google.ar.sceneform.rendering.Color.Color"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: CameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null)","description":"io.github.sceneview.SceneView.SceneView","location":"sceneview/io.github.sceneview/-scene-view/-scene-view.html","searchKeys":["SceneView","constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: CameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null)","io.github.sceneview.SceneView.SceneView"]},{"name":"constructor(context: Context, collisionSystem: CollisionSystem)","description":"io.github.sceneview.gesture.HitTestGestureDetector.HitTestGestureDetector","location":"sceneview/io.github.sceneview.gesture/-hit-test-gesture-detector/-hit-test-gesture-detector.html","searchKeys":["HitTestGestureDetector","constructor(context: Context, collisionSystem: CollisionSystem)","io.github.sceneview.gesture.HitTestGestureDetector.HitTestGestureDetector"]},{"name":"constructor(context: Context, listener: MoveGestureDetector.OnMoveListener)","description":"io.github.sceneview.gesture.MoveGestureDetector.MoveGestureDetector","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-move-gesture-detector.html","searchKeys":["MoveGestureDetector","constructor(context: Context, listener: MoveGestureDetector.OnMoveListener)","io.github.sceneview.gesture.MoveGestureDetector.MoveGestureDetector"]},{"name":"constructor(context: Context, listener: RotateGestureDetector.OnRotateListener)","description":"io.github.sceneview.gesture.RotateGestureDetector.RotateGestureDetector","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-rotate-gesture-detector.html","searchKeys":["RotateGestureDetector","constructor(context: Context, listener: RotateGestureDetector.OnRotateListener)","io.github.sceneview.gesture.RotateGestureDetector.RotateGestureDetector"]},{"name":"constructor(context: Context, listener: ScaleGestureDetector.OnScaleListener)","description":"io.github.sceneview.gesture.ScaleGestureDetector.ScaleGestureDetector","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-scale-gesture-detector.html","searchKeys":["ScaleGestureDetector","constructor(context: Context, listener: ScaleGestureDetector.OnScaleListener)","io.github.sceneview.gesture.ScaleGestureDetector.ScaleGestureDetector"]},{"name":"constructor(context: Context, nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit)","description":"io.github.sceneview.gesture.GestureDetector.GestureDetector","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-gesture-detector.html","searchKeys":["GestureDetector","constructor(context: Context, nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit)","io.github.sceneview.gesture.GestureDetector.GestureDetector"]},{"name":"constructor(context: Context, ownerView: View)","description":"com.google.ar.sceneform.rendering.ViewAttachmentManager.ViewAttachmentManager","location":"sceneview/com.google.ar.sceneform.rendering/-view-attachment-manager/-view-attachment-manager.html","searchKeys":["ViewAttachmentManager","constructor(context: Context, ownerView: View)","com.google.ar.sceneform.rendering.ViewAttachmentManager.ViewAttachmentManager"]},{"name":"constructor(context: Context, selectedNode: Node?)","description":"io.github.sceneview.gesture.SelectedNodeGestureDetector.SelectedNodeGestureDetector","location":"sceneview/io.github.sceneview.gesture/-selected-node-gesture-detector/-selected-node-gesture-detector.html","searchKeys":["SelectedNodeGestureDetector","constructor(context: Context, selectedNode: Node?)","io.github.sceneview.gesture.SelectedNodeGestureDetector.SelectedNodeGestureDetector"]},{"name":"constructor(context: Context, view: View, nodes: () -> List<Node>)","description":"io.github.sceneview.gesture.PickGestureDetector.PickGestureDetector","location":"sceneview/io.github.sceneview.gesture/-pick-gesture-detector/-pick-gesture-detector.html","searchKeys":["PickGestureDetector","constructor(context: Context, view: View, nodes: () -> List<Node>)","io.github.sceneview.gesture.PickGestureDetector.PickGestureDetector"]},{"name":"constructor(data: Array<Float>)","description":"io.github.sceneview.collision.Matrix.Matrix","location":"sceneview/io.github.sceneview.collision/-matrix/-matrix.html","searchKeys":["Matrix","constructor(data: Array<Float>)","io.github.sceneview.collision.Matrix.Matrix"]},{"name":"constructor(dpPerMeters: Int)","description":"com.google.ar.sceneform.rendering.DpToMetersViewSizer.DpToMetersViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-dp-to-meters-view-sizer/-dp-to-meters-view-sizer.html","searchKeys":["DpToMetersViewSizer","constructor(dpPerMeters: Int)","com.google.ar.sceneform.rendering.DpToMetersViewSizer.DpToMetersViewSizer"]},{"name":"constructor(engine: Engine)","description":"com.google.ar.sceneform.rendering.ExternalTexture.ExternalTexture","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/-external-texture.html","searchKeys":["ExternalTexture","constructor(engine: Engine)","com.google.ar.sceneform.rendering.ExternalTexture.ExternalTexture"]},{"name":"constructor(engine: Engine)","description":"io.github.sceneview.SceneView.DefaultCameraNode.DefaultCameraNode","location":"sceneview/io.github.sceneview/-scene-view/-default-camera-node/-default-camera-node.html","searchKeys":["DefaultCameraNode","constructor(engine: Engine)","io.github.sceneview.SceneView.DefaultCameraNode.DefaultCameraNode"]},{"name":"constructor(engine: Engine)","description":"io.github.sceneview.SceneView.DefaultLightNode.DefaultLightNode","location":"sceneview/io.github.sceneview/-scene-view/-default-light-node/-default-light-node.html","searchKeys":["DefaultLightNode","constructor(engine: Engine)","io.github.sceneview.SceneView.DefaultLightNode.DefaultLightNode"]},{"name":"constructor(engine: Engine)","description":"io.github.sceneview.environment.IBLPrefilter.IBLPrefilter","location":"sceneview/io.github.sceneview.environment/-i-b-l-prefilter/-i-b-l-prefilter.html","searchKeys":["IBLPrefilter","constructor(engine: Engine)","io.github.sceneview.environment.IBLPrefilter.IBLPrefilter"]},{"name":"constructor(engine: Engine, assetLoader: AssetLoader, resourceLoader: ResourceLoader, transformProvider: TransformProvider, renderable: Renderable)","description":"com.google.ar.sceneform.rendering.RenderableInstance.RenderableInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/-renderable-instance.html","searchKeys":["RenderableInstance","constructor(engine: Engine, assetLoader: AssetLoader, resourceLoader: ResourceLoader, transformProvider: TransformProvider, renderable: Renderable)","com.google.ar.sceneform.rendering.RenderableInstance.RenderableInstance"]},{"name":"constructor(engine: Engine, context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","description":"io.github.sceneview.loaders.MaterialLoader.MaterialLoader","location":"sceneview/io.github.sceneview.loaders/-material-loader/-material-loader.html","searchKeys":["MaterialLoader","constructor(engine: Engine, context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","io.github.sceneview.loaders.MaterialLoader.MaterialLoader"]},{"name":"constructor(engine: Engine, context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","description":"io.github.sceneview.loaders.ModelLoader.ModelLoader","location":"sceneview/io.github.sceneview.loaders/-model-loader/-model-loader.html","searchKeys":["ModelLoader","constructor(engine: Engine, context: Context, coroutineScope: CoroutineScope = CoroutineScope(Dispatchers.IO))","io.github.sceneview.loaders.ModelLoader.ModelLoader"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), builder: LightManager.Builder)","description":"io.github.sceneview.node.LightNode.LightNode","location":"sceneview/io.github.sceneview.node/-light-node/-light-node.html","searchKeys":["LightNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), builder: LightManager.Builder)","io.github.sceneview.node.LightNode.LightNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null)","description":"io.github.sceneview.node.Node.Node","location":"sceneview/io.github.sceneview.node/-node/-node.html","searchKeys":["Node","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null)","io.github.sceneview.node.Node.Node"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null)","description":"io.github.sceneview.node.RenderableNode.RenderableNode","location":"sceneview/io.github.sceneview.node/-renderable-node/-renderable-node.html","searchKeys":["RenderableNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null)","io.github.sceneview.node.RenderableNode.RenderableNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, camera: Camera.() -> Unit = {})","description":"io.github.sceneview.node.CameraNode.CameraNode","location":"sceneview/io.github.sceneview.node/-camera-node/-camera-node.html","searchKeys":["CameraNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, camera: Camera.() -> Unit = {})","io.github.sceneview.node.CameraNode.CameraNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Cube, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.CubeNode.CubeNode","location":"sceneview/io.github.sceneview.node/-cube-node/-cube-node.html","searchKeys":["CubeNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Cube, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.CubeNode.CubeNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Cylinder, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.CylinderNode.CylinderNode","location":"sceneview/io.github.sceneview.node/-cylinder-node/-cylinder-node.html","searchKeys":["CylinderNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Cylinder, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.CylinderNode.CylinderNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Geometry, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.GeometryNode.GeometryNode","location":"sceneview/io.github.sceneview.node/-geometry-node/-geometry-node.html","searchKeys":["GeometryNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Geometry, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.GeometryNode.GeometryNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Geometry, materialInstances: List<MaterialInstance?>, primitivesOffsets: List<IntRange> = geometry.primitivesOffsets, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.GeometryNode.GeometryNode","location":"sceneview/io.github.sceneview.node/-geometry-node/-geometry-node.html","searchKeys":["GeometryNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Geometry, materialInstances: List<MaterialInstance?>, primitivesOffsets: List<IntRange> = geometry.primitivesOffsets, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.GeometryNode.GeometryNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Plane, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.PlaneNode.PlaneNode","location":"sceneview/io.github.sceneview.node/-plane-node/-plane-node.html","searchKeys":["PlaneNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Plane, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.PlaneNode.PlaneNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Polygon, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.PolygonNode.PolygonNode","location":"sceneview/io.github.sceneview.node/-polygon-node/-polygon-node.html","searchKeys":["PolygonNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Polygon, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.PolygonNode.PolygonNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Sphere, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.SphereNode.SphereNode","location":"sceneview/io.github.sceneview.node/-sphere-node/-sphere-node.html","searchKeys":["SphereNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, geometry: Sphere, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.SphereNode.SphereNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, path: List<Position>, normal: Direction? = Polygon.DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = Polygon.DEFAULT_UV_COORDINATE, color: Color? = null, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.PolygonNode.PolygonNode","location":"sceneview/io.github.sceneview.node/-polygon-node/-polygon-node.html","searchKeys":["PolygonNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, path: List<Position>, normal: Direction? = Polygon.DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = Polygon.DEFAULT_UV_COORDINATE, color: Color? = null, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.PolygonNode.PolygonNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, path: List<Position>, normal: Direction? = Polygon.DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = Polygon.DEFAULT_UV_COORDINATE, color: Color? = null, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.PolygonNode.PolygonNode","location":"sceneview/io.github.sceneview.node/-polygon-node/-polygon-node.html","searchKeys":["PolygonNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, path: List<Position>, normal: Direction? = Polygon.DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = Polygon.DEFAULT_UV_COORDINATE, color: Color? = null, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.PolygonNode.PolygonNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, primitiveCount: Int, boundingBox: Box, materialInstances: List<MaterialInstance?> = listOf(), builder: RenderableManager.Builder.() -> Unit)","description":"io.github.sceneview.node.RenderableNode.RenderableNode","location":"sceneview/io.github.sceneview.node/-renderable-node/-renderable-node.html","searchKeys":["RenderableNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, primitiveCount: Int, boundingBox: Box, materialInstances: List<MaterialInstance?> = listOf(), builder: RenderableManager.Builder.() -> Unit)","io.github.sceneview.node.RenderableNode.RenderableNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Cylinder.DEFAULT_RADIUS, height: Float = Cylinder.DEFAULT_HEIGHT, center: Position = Cylinder.DEFAULT_CENTER, sideCount: Int = Cylinder.DEFAULT_SIDE_COUNT, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.CylinderNode.CylinderNode","location":"sceneview/io.github.sceneview.node/-cylinder-node/-cylinder-node.html","searchKeys":["CylinderNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Cylinder.DEFAULT_RADIUS, height: Float = Cylinder.DEFAULT_HEIGHT, center: Position = Cylinder.DEFAULT_CENTER, sideCount: Int = Cylinder.DEFAULT_SIDE_COUNT, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.CylinderNode.CylinderNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Cylinder.DEFAULT_RADIUS, height: Float = Cylinder.DEFAULT_HEIGHT, center: Position = Cylinder.DEFAULT_CENTER, sideCount: Int = Cylinder.DEFAULT_SIDE_COUNT, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.CylinderNode.CylinderNode","location":"sceneview/io.github.sceneview.node/-cylinder-node/-cylinder-node.html","searchKeys":["CylinderNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Cylinder.DEFAULT_RADIUS, height: Float = Cylinder.DEFAULT_HEIGHT, center: Position = Cylinder.DEFAULT_CENTER, sideCount: Int = Cylinder.DEFAULT_SIDE_COUNT, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.CylinderNode.CylinderNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Sphere.DEFAULT_RADIUS, center: Position = Sphere.DEFAULT_CENTER, stacks: Int = Sphere.DEFAULT_STACKS, slices: Int = Sphere.DEFAULT_SLICES, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.SphereNode.SphereNode","location":"sceneview/io.github.sceneview.node/-sphere-node/-sphere-node.html","searchKeys":["SphereNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Sphere.DEFAULT_RADIUS, center: Position = Sphere.DEFAULT_CENTER, stacks: Int = Sphere.DEFAULT_STACKS, slices: Int = Sphere.DEFAULT_SLICES, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.SphereNode.SphereNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Sphere.DEFAULT_RADIUS, center: Position = Sphere.DEFAULT_CENTER, stacks: Int = Sphere.DEFAULT_STACKS, slices: Int = Sphere.DEFAULT_SLICES, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.SphereNode.SphereNode","location":"sceneview/io.github.sceneview.node/-sphere-node/-sphere-node.html","searchKeys":["SphereNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, radius: Float = Sphere.DEFAULT_RADIUS, center: Position = Sphere.DEFAULT_CENTER, stacks: Int = Sphere.DEFAULT_STACKS, slices: Int = Sphere.DEFAULT_SLICES, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.SphereNode.SphereNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Cube.DEFAULT_SIZE, center: Position = Cube.DEFAULT_CENTER, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.CubeNode.CubeNode","location":"sceneview/io.github.sceneview.node/-cube-node/-cube-node.html","searchKeys":["CubeNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Cube.DEFAULT_SIZE, center: Position = Cube.DEFAULT_CENTER, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.CubeNode.CubeNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Cube.DEFAULT_SIZE, center: Position = Cube.DEFAULT_CENTER, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.CubeNode.CubeNode","location":"sceneview/io.github.sceneview.node/-cube-node/-cube-node.html","searchKeys":["CubeNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Cube.DEFAULT_SIZE, center: Position = Cube.DEFAULT_CENTER, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.CubeNode.CubeNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Plane.DEFAULT_SIZE, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.PlaneNode.PlaneNode","location":"sceneview/io.github.sceneview.node/-plane-node/-plane-node.html","searchKeys":["PlaneNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Plane.DEFAULT_SIZE, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, materialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.PlaneNode.PlaneNode"]},{"name":"constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Plane.DEFAULT_SIZE, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.PlaneNode.PlaneNode","location":"sceneview/io.github.sceneview.node/-plane-node/-plane-node.html","searchKeys":["PlaneNode","constructor(engine: Engine, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size = Plane.DEFAULT_SIZE, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, materialInstances: List<MaterialInstance?>, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.PlaneNode.PlaneNode"]},{"name":"constructor(engine: Engine, entity: Entity, parent: Node? = null)","description":"io.github.sceneview.node.CameraNode.CameraNode","location":"sceneview/io.github.sceneview.node/-camera-node/-camera-node.html","searchKeys":["CameraNode","constructor(engine: Engine, entity: Entity, parent: Node? = null)","io.github.sceneview.node.CameraNode.CameraNode"]},{"name":"constructor(engine: Engine, entity: Entity, parent: Node? = null)","description":"io.github.sceneview.node.LightNode.LightNode","location":"sceneview/io.github.sceneview.node/-light-node/-light-node.html","searchKeys":["LightNode","constructor(engine: Engine, entity: Entity, parent: Node? = null)","io.github.sceneview.node.LightNode.LightNode"]},{"name":"constructor(engine: Engine, iblPrefilter: IBLPrefilter, cubemap: Texture? = null, indirectLightIrradiance: FloatArray? = null, indirectLightIntensity: Float? = null, indirectLightSpecularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox, sharedCubemap: Boolean = false)","description":"io.github.sceneview.environment.HDREnvironment.HDREnvironment","location":"sceneview/io.github.sceneview.environment/-h-d-r-environment/-h-d-r-environment.html","searchKeys":["HDREnvironment","constructor(engine: Engine, iblPrefilter: IBLPrefilter, cubemap: Texture? = null, indirectLightIrradiance: FloatArray? = null, indirectLightIntensity: Float? = null, indirectLightSpecularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox, sharedCubemap: Boolean = false)","io.github.sceneview.environment.HDREnvironment.HDREnvironment"]},{"name":"constructor(engine: Engine, indirectLight: IndirectLight? = null, skybox: Skybox? = null, sphericalHarmonics: FloatArray? = null)","description":"io.github.sceneview.environment.Environment.Environment","location":"sceneview/io.github.sceneview.environment/-environment/-environment.html","searchKeys":["Environment","constructor(engine: Engine, indirectLight: IndirectLight? = null, skybox: Skybox? = null, sphericalHarmonics: FloatArray? = null)","io.github.sceneview.environment.Environment.Environment"]},{"name":"constructor(engine: Engine, indirectLight: IndirectLight?, skybox: Skybox? = null, sphericalHarmonics: FloatArray? = null)","description":"io.github.sceneview.environment.KTXEnvironment.KTXEnvironment","location":"sceneview/io.github.sceneview.environment/-k-t-x-environment/-k-t-x-environment.html","searchKeys":["KTXEnvironment","constructor(engine: Engine, indirectLight: IndirectLight?, skybox: Skybox? = null, sphericalHarmonics: FloatArray? = null)","io.github.sceneview.environment.KTXEnvironment.KTXEnvironment"]},{"name":"constructor(engine: Engine, materialLoader: MaterialLoader, entity: Entity = EntityManager.get().create(), parent: Node? = null, bitmap: Bitmap, size: Size? = null, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, type: TextureType = ImageTexture.DEFAULT_TYPE, builder: RenderableManager.Builder.() -> Unit = {}, textureBuilder: ImageTexture.Builder.() -> Unit = {})","description":"io.github.sceneview.node.ImageNode.ImageNode","location":"sceneview/io.github.sceneview.node/-image-node/-image-node.html","searchKeys":["ImageNode","constructor(engine: Engine, materialLoader: MaterialLoader, entity: Entity = EntityManager.get().create(), parent: Node? = null, bitmap: Bitmap, size: Size? = null, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, type: TextureType = ImageTexture.DEFAULT_TYPE, builder: RenderableManager.Builder.() -> Unit = {}, textureBuilder: ImageTexture.Builder.() -> Unit = {})","io.github.sceneview.node.ImageNode.ImageNode"]},{"name":"constructor(engine: Engine, materialLoader: MaterialLoader, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size? = null, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, imageFileLocation: String, type: TextureType = ImageTexture.DEFAULT_TYPE, builder: RenderableManager.Builder.() -> Unit = {}, textureBuilder: ImageTexture.Builder.() -> Unit = {})","description":"io.github.sceneview.node.ImageNode.ImageNode","location":"sceneview/io.github.sceneview.node/-image-node/-image-node.html","searchKeys":["ImageNode","constructor(engine: Engine, materialLoader: MaterialLoader, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size? = null, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, imageFileLocation: String, type: TextureType = ImageTexture.DEFAULT_TYPE, builder: RenderableManager.Builder.() -> Unit = {}, textureBuilder: ImageTexture.Builder.() -> Unit = {})","io.github.sceneview.node.ImageNode.ImageNode"]},{"name":"constructor(engine: Engine, materialLoader: MaterialLoader, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size? = null, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, imageResId: Int, type: TextureType = ImageTexture.DEFAULT_TYPE, builder: RenderableManager.Builder.() -> Unit = {}, textureBuilder: ImageTexture.Builder.() -> Unit = {})","description":"io.github.sceneview.node.ImageNode.ImageNode","location":"sceneview/io.github.sceneview.node/-image-node/-image-node.html","searchKeys":["ImageNode","constructor(engine: Engine, materialLoader: MaterialLoader, entity: Entity = EntityManager.get().create(), parent: Node? = null, size: Size? = null, center: Position = Plane.DEFAULT_CENTER, normal: Direction = Plane.DEFAULT_NORMAL, imageResId: Int, type: TextureType = ImageTexture.DEFAULT_TYPE, builder: RenderableManager.Builder.() -> Unit = {}, textureBuilder: ImageTexture.Builder.() -> Unit = {})","io.github.sceneview.node.ImageNode.ImageNode"]},{"name":"constructor(engine: Engine, modelLoader: ModelLoader, viewAttachmentManager: ViewAttachmentManager, parent: Node? = null)","description":"io.github.sceneview.node.ViewNode.ViewNode","location":"sceneview/io.github.sceneview.node/-view-node/-view-node.html","searchKeys":["ViewNode","constructor(engine: Engine, modelLoader: ModelLoader, viewAttachmentManager: ViewAttachmentManager, parent: Node? = null)","io.github.sceneview.node.ViewNode.ViewNode"]},{"name":"constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertexBuffer: VertexBuffer, indexBuffer: IndexBuffer, boundingBox: Box? = null, materialInstance: MaterialInstance? = null, parent: Node? = null, builder: RenderableManager.Builder.() -> Unit = {})","description":"io.github.sceneview.node.MeshNode.MeshNode","location":"sceneview/io.github.sceneview.node/-mesh-node/-mesh-node.html","searchKeys":["MeshNode","constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertexBuffer: VertexBuffer, indexBuffer: IndexBuffer, boundingBox: Box? = null, materialInstance: MaterialInstance? = null, parent: Node? = null, builder: RenderableManager.Builder.() -> Unit = {})","io.github.sceneview.node.MeshNode.MeshNode"]},{"name":"constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, indexBuffer: IndexBuffer, primitivesOffsets: List<IntRange>, boundingBox: Box)","description":"io.github.sceneview.geometries.Geometry.Geometry","location":"sceneview/io.github.sceneview.geometries/-geometry/-geometry.html","searchKeys":["Geometry","constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, indexBuffer: IndexBuffer, primitivesOffsets: List<IntRange>, boundingBox: Box)","io.github.sceneview.geometries.Geometry.Geometry"]},{"name":"constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, indexBuffer: IndexBuffer, primitivesOffsets: List<IntRange>, boundingBox: Box, radius: Float, center: Position, stacks: Int, slices: Int)","description":"io.github.sceneview.geometries.Sphere.Sphere","location":"sceneview/io.github.sceneview.geometries/-sphere/-sphere.html","searchKeys":["Sphere","constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, indexBuffer: IndexBuffer, primitivesOffsets: List<IntRange>, boundingBox: Box, radius: Float, center: Position, stacks: Int, slices: Int)","io.github.sceneview.geometries.Sphere.Sphere"]},{"name":"constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, indexBuffer: IndexBuffer, primitivesOffsets: List<IntRange>, boundingBox: Box, radius: Float, height: Float, center: Position, sideCount: Int)","description":"io.github.sceneview.geometries.Cylinder.Cylinder","location":"sceneview/io.github.sceneview.geometries/-cylinder/-cylinder.html","searchKeys":["Cylinder","constructor(engine: Engine, primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, indexBuffer: IndexBuffer, primitivesOffsets: List<IntRange>, boundingBox: Box, radius: Float, height: Float, center: Position, sideCount: Int)","io.github.sceneview.geometries.Cylinder.Cylinder"]},{"name":"constructor(engine: Engine, type: LightManager.Type, entity: Entity = EntityManager.get().create(), apply: LightManager.Builder.() -> Unit)","description":"io.github.sceneview.node.LightNode.LightNode","location":"sceneview/io.github.sceneview.node/-light-node/-light-node.html","searchKeys":["LightNode","constructor(engine: Engine, type: LightManager.Type, entity: Entity = EntityManager.get().create(), apply: LightManager.Builder.() -> Unit)","io.github.sceneview.node.LightNode.LightNode"]},{"name":"constructor(eulerAngles: Vector3)","description":"io.github.sceneview.collision.Quaternion.Quaternion","location":"sceneview/io.github.sceneview.collision/-quaternion/-quaternion.html","searchKeys":["Quaternion","constructor(eulerAngles: Vector3)","io.github.sceneview.collision.Quaternion.Quaternion"]},{"name":"constructor(existing_bb: ByteBuffer)","description":"com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor(existing_bb: ByteBuffer)","com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor(existing_bb: ByteBuffer, bb_factory: FlatBufferBuilder.ByteBufferFactory)","description":"com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor(existing_bb: ByteBuffer, bb_factory: FlatBufferBuilder.ByteBufferFactory)","com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor(filamentMaterial: Material)","description":"com.google.ar.sceneform.rendering.Material.Material","location":"sceneview/com.google.ar.sceneform.rendering/-material/-material.html","searchKeys":["Material","constructor(filamentMaterial: Material)","com.google.ar.sceneform.rendering.Material.Material"]},{"name":"constructor(filamentMaterial: Material, useDefaultInstance: Boolean)","description":"com.google.ar.sceneform.rendering.Material.Material","location":"sceneview/com.google.ar.sceneform.rendering/-material/-material.html","searchKeys":["Material","constructor(filamentMaterial: Material, useDefaultInstance: Boolean)","com.google.ar.sceneform.rendering.Material.Material"]},{"name":"constructor(filamentTexture: Texture, sampler: Texture.Sampler)","description":"com.google.ar.sceneform.rendering.TextureInternalData.TextureInternalData","location":"sceneview/com.google.ar.sceneform.rendering/-texture-internal-data/-texture-internal-data.html","searchKeys":["TextureInternalData","constructor(filamentTexture: Texture, sampler: Texture.Sampler)","com.google.ar.sceneform.rendering.TextureInternalData.TextureInternalData"]},{"name":"constructor(heightMeters: Float)","description":"com.google.ar.sceneform.rendering.FixedHeightViewSizer.FixedHeightViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-height-view-sizer/-fixed-height-view-sizer.html","searchKeys":["FixedHeightViewSizer","constructor(heightMeters: Float)","com.google.ar.sceneform.rendering.FixedHeightViewSizer.FixedHeightViewSizer"]},{"name":"constructor(indices: List<Int>)","description":"io.github.sceneview.geometries.Geometry.PrimitiveIndices.PrimitiveIndices","location":"sceneview/io.github.sceneview.geometries/-geometry/-primitive-indices/-primitive-indices.html","searchKeys":["PrimitiveIndices","constructor(indices: List<Int>)","io.github.sceneview.geometries.Geometry.PrimitiveIndices.PrimitiveIndices"]},{"name":"constructor(initialSample: Double)","description":"com.google.ar.sceneform.utilities.MovingAverage.MovingAverage","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average/-moving-average.html","searchKeys":["MovingAverage","constructor(initialSample: Double)","com.google.ar.sceneform.utilities.MovingAverage.MovingAverage"]},{"name":"constructor(initialSample: Double, weight: Double)","description":"com.google.ar.sceneform.utilities.MovingAverage.MovingAverage","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average/-moving-average.html","searchKeys":["MovingAverage","constructor(initialSample: Double, weight: Double)","com.google.ar.sceneform.utilities.MovingAverage.MovingAverage"]},{"name":"constructor(initial_size: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor(initial_size: Int)","com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor(initial_size: Int, bb_factory: FlatBufferBuilder.ByteBufferFactory)","description":"com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor(initial_size: Int, bb_factory: FlatBufferBuilder.ByteBufferFactory)","com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor(initial_size: Int, bb_factory: FlatBufferBuilder.ByteBufferFactory, existing_bb: ByteBuffer, utf8: Utf8)","description":"com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor(initial_size: Int, bb_factory: FlatBufferBuilder.ByteBufferFactory, existing_bb: ByteBuffer, utf8: Utf8)","com.google.flatbuffers.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor(lifecycle: Lifecycle, materialInstance: MaterialInstance)","description":"com.google.ar.sceneform.rendering.Material.Material","location":"sceneview/com.google.ar.sceneform.rendering/-material/-material.html","searchKeys":["Material","constructor(lifecycle: Lifecycle, materialInstance: MaterialInstance)","com.google.ar.sceneform.rendering.Material.Material"]},{"name":"constructor(model: AnimatableModel, name: String, index: Int, duration: Float, frameRate: Int)","description":"io.github.sceneview.animation.ModelAnimation.ModelAnimation","location":"sceneview/io.github.sceneview.animation/-model-animation/-model-animation.html","searchKeys":["ModelAnimation","constructor(model: AnimatableModel, name: String, index: Int, duration: Float, frameRate: Int)","io.github.sceneview.animation.ModelAnimation.ModelAnimation"]},{"name":"constructor(modelInstance: ModelInstance, parent: Node? = null, autoAnimate: Boolean = true, scaleToUnits: Float? = null, centerOrigin: Position? = null)","description":"io.github.sceneview.node.ModelNode.ModelNode","location":"sceneview/io.github.sceneview.node/-model-node/-model-node.html","searchKeys":["ModelNode","constructor(modelInstance: ModelInstance, parent: Node? = null, autoAnimate: Boolean = true, scaleToUnits: Float? = null, centerOrigin: Position? = null)","io.github.sceneview.node.ModelNode.ModelNode"]},{"name":"constructor(node: Node)","description":"io.github.sceneview.collision.Collider.Collider","location":"sceneview/io.github.sceneview.collision/-collider/-collider.html","searchKeys":["Collider","constructor(node: Node)","io.github.sceneview.collision.Collider.Collider"]},{"name":"constructor(node: Node? = null)","description":"io.github.sceneview.collision.HitResult.HitResult","location":"sceneview/io.github.sceneview.collision/-hit-result/-hit-result.html","searchKeys":["HitResult","constructor(node: Node? = null)","io.github.sceneview.collision.HitResult.HitResult"]},{"name":"constructor(origin: Vector3, direction: Vector3)","description":"io.github.sceneview.collision.Ray.Ray","location":"sceneview/io.github.sceneview.collision/-ray/-ray.html","searchKeys":["Ray","constructor(origin: Vector3, direction: Vector3)","io.github.sceneview.collision.Ray.Ray"]},{"name":"constructor(position: Position = Position(), normal: Direction? = null, uvCoordinate: UvCoordinate? = null, color: Color? = null)","description":"io.github.sceneview.geometries.Geometry.Vertex.Vertex","location":"sceneview/io.github.sceneview.geometries/-geometry/-vertex/-vertex.html","searchKeys":["Vertex","constructor(position: Position = Position(), normal: Direction? = null, uvCoordinate: UvCoordinate? = null, color: Color? = null)","io.github.sceneview.geometries.Geometry.Vertex.Vertex"]},{"name":"constructor(primitiveType: RenderableManager.PrimitiveType = PrimitiveType.TRIANGLES)","description":"io.github.sceneview.geometries.Geometry.Builder.Builder","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/-builder.html","searchKeys":["Builder","constructor(primitiveType: RenderableManager.PrimitiveType = PrimitiveType.TRIANGLES)","io.github.sceneview.geometries.Geometry.Builder.Builder"]},{"name":"constructor(q: Quaternion)","description":"io.github.sceneview.collision.Quaternion.Quaternion","location":"sceneview/io.github.sceneview.collision/-quaternion/-quaternion.html","searchKeys":["Quaternion","constructor(q: Quaternion)","io.github.sceneview.collision.Quaternion.Quaternion"]},{"name":"constructor(r: Float, g: Float, b: Float)","description":"com.google.ar.sceneform.rendering.Color.Color","location":"sceneview/com.google.ar.sceneform.rendering/-color/-color.html","searchKeys":["Color","constructor(r: Float, g: Float, b: Float)","com.google.ar.sceneform.rendering.Color.Color"]},{"name":"constructor(r: Float, g: Float, b: Float, a: Float)","description":"com.google.ar.sceneform.rendering.Color.Color","location":"sceneview/com.google.ar.sceneform.rendering/-color/-color.html","searchKeys":["Color","constructor(r: Float, g: Float, b: Float, a: Float)","com.google.ar.sceneform.rendering.Color.Color"]},{"name":"constructor(radius: Float)","description":"io.github.sceneview.collision.Sphere.Sphere","location":"sceneview/io.github.sceneview.collision/-sphere/-sphere.html","searchKeys":["Sphere","constructor(radius: Float)","io.github.sceneview.collision.Sphere.Sphere"]},{"name":"constructor(radius: Float, center: Vector3)","description":"io.github.sceneview.collision.Sphere.Sphere","location":"sceneview/io.github.sceneview.collision/-sphere/-sphere.html","searchKeys":["Sphere","constructor(radius: Float, center: Vector3)","io.github.sceneview.collision.Sphere.Sphere"]},{"name":"constructor(renderView: RenderViewToExternalTexture)","description":"com.google.ar.sceneform.rendering.ViewRenderableInternalData.ViewRenderableInternalData","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable-internal-data/-view-renderable-internal-data.html","searchKeys":["ViewRenderableInternalData","constructor(renderView: RenderViewToExternalTexture)","com.google.ar.sceneform.rendering.ViewRenderableInternalData.ViewRenderableInternalData"]},{"name":"constructor(sceneView: SceneView, listener: CameraGestureDetector.OnCameraGestureListener)","description":"io.github.sceneview.gesture.CameraGestureDetector.CameraGestureDetector","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-camera-gesture-detector.html","searchKeys":["CameraGestureDetector","constructor(sceneView: SceneView, listener: CameraGestureDetector.OnCameraGestureListener)","io.github.sceneview.gesture.CameraGestureDetector.CameraGestureDetector"]},{"name":"constructor(size: Vector3)","description":"io.github.sceneview.collision.Box.Box","location":"sceneview/io.github.sceneview.collision/-box/-box.html","searchKeys":["Box","constructor(size: Vector3)","io.github.sceneview.collision.Box.Box"]},{"name":"constructor(size: Vector3, center: Vector3)","description":"io.github.sceneview.collision.Box.Box","location":"sceneview/io.github.sceneview.collision/-box/-box.html","searchKeys":["Box","constructor(size: Vector3, center: Vector3)","io.github.sceneview.collision.Box.Box"]},{"name":"constructor(startTime: Long = System.nanoTime(), loop: Boolean = true)","description":"io.github.sceneview.node.ModelNode.PlayingAnimation.PlayingAnimation","location":"sceneview/io.github.sceneview.node/-model-node/-playing-animation/-playing-animation.html","searchKeys":["PlayingAnimation","constructor(startTime: Long = System.nanoTime(), loop: Boolean = true)","io.github.sceneview.node.ModelNode.PlayingAnimation.PlayingAnimation"]},{"name":"constructor(surface: Surface, swapChain: SwapChain?, viewport: Viewport)","description":"io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.SurfaceMirror","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/-surface-mirror/-surface-mirror.html","searchKeys":["SurfaceMirror","constructor(surface: Surface, swapChain: SwapChain?, viewport: Viewport)","io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.SurfaceMirror"]},{"name":"constructor(v: Vector3)","description":"io.github.sceneview.collision.Vector3.Vector3","location":"sceneview/io.github.sceneview.collision/-vector3/-vector3.html","searchKeys":["Vector3","constructor(v: Vector3)","io.github.sceneview.collision.Vector3.Vector3"]},{"name":"constructor(vararg indices: Int)","description":"io.github.sceneview.geometries.Geometry.PrimitiveIndices.PrimitiveIndices","location":"sceneview/io.github.sceneview.geometries/-geometry/-primitive-indices/-primitive-indices.html","searchKeys":["PrimitiveIndices","constructor(vararg indices: Int)","io.github.sceneview.geometries.Geometry.PrimitiveIndices.PrimitiveIndices"]},{"name":"constructor(view: View)","description":"io.github.sceneview.collision.CollisionSystem.CollisionSystem","location":"sceneview/io.github.sceneview.collision/-collision-system/-collision-system.html","searchKeys":["CollisionSystem","constructor(view: View)","io.github.sceneview.collision.CollisionSystem.CollisionSystem"]},{"name":"constructor(weight: Double)","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/-moving-average-milliseconds-tracker.html","searchKeys":["MovingAverageMillisecondsTracker","constructor(weight: Double)","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.MovingAverageMillisecondsTracker"]},{"name":"constructor(widthMeters: Float)","description":"com.google.ar.sceneform.rendering.FixedWidthViewSizer.FixedWidthViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-width-view-sizer/-fixed-width-view-sizer.html","searchKeys":["FixedWidthViewSizer","constructor(widthMeters: Float)","com.google.ar.sceneform.rendering.FixedWidthViewSizer.FixedWidthViewSizer"]},{"name":"constructor(x: Float, y: Float)","description":"com.google.ar.sceneform.rendering.Vertex.UvCoordinate.UvCoordinate","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-uv-coordinate/-uv-coordinate.html","searchKeys":["UvCoordinate","constructor(x: Float, y: Float)","com.google.ar.sceneform.rendering.Vertex.UvCoordinate.UvCoordinate"]},{"name":"constructor(x: Float, y: Float, z: Float)","description":"io.github.sceneview.collision.Vector3.Vector3","location":"sceneview/io.github.sceneview.collision/-vector3/-vector3.html","searchKeys":["Vector3","constructor(x: Float, y: Float, z: Float)","io.github.sceneview.collision.Vector3.Vector3"]},{"name":"constructor(x: Float, y: Float, z: Float, w: Float)","description":"io.github.sceneview.collision.Quaternion.Quaternion","location":"sceneview/io.github.sceneview.collision/-quaternion/-quaternion.html","searchKeys":["Quaternion","constructor(x: Float, y: Float, z: Float, w: Float)","io.github.sceneview.collision.Quaternion.Quaternion"]},{"name":"data class PlayingAnimation(val startTime: Long = System.nanoTime(), val loop: Boolean = true)","description":"io.github.sceneview.node.ModelNode.PlayingAnimation","location":"sceneview/io.github.sceneview.node/-model-node/-playing-animation/index.html","searchKeys":["PlayingAnimation","data class PlayingAnimation(val startTime: Long = System.nanoTime(), val loop: Boolean = true)","io.github.sceneview.node.ModelNode.PlayingAnimation"]},{"name":"data class PrimitiveIndices(val indices: List<Int>)","description":"io.github.sceneview.geometries.Geometry.PrimitiveIndices","location":"sceneview/io.github.sceneview.geometries/-geometry/-primitive-indices/index.html","searchKeys":["PrimitiveIndices","data class PrimitiveIndices(val indices: List<Int>)","io.github.sceneview.geometries.Geometry.PrimitiveIndices"]},{"name":"data class SurfaceMirror(val surface: Surface, var swapChain: SwapChain?, val viewport: Viewport)","description":"io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/-surface-mirror/index.html","searchKeys":["SurfaceMirror","data class SurfaceMirror(val surface: Surface, var swapChain: SwapChain?, val viewport: Viewport)","io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror"]},{"name":"data class Vertex(val position: Position = Position(), val normal: Direction? = null, val uvCoordinate: UvCoordinate? = null, val color: Color? = null)","description":"io.github.sceneview.geometries.Geometry.Vertex","location":"sceneview/io.github.sceneview.geometries/-geometry/-vertex/index.html","searchKeys":["Vertex","data class Vertex(val position: Position = Position(), val normal: Direction? = null, val uvCoordinate: UvCoordinate? = null, val color: Color? = null)","io.github.sceneview.geometries.Geometry.Vertex"]},{"name":"enum GltfLoadStage","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/index.html","searchKeys":["GltfLoadStage","enum GltfLoadStage","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage"]},{"name":"enum HorizontalAlignment","description":"com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-horizontal-alignment/index.html","searchKeys":["HorizontalAlignment","enum HorizontalAlignment","com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment"]},{"name":"enum MagFilter","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-mag-filter/index.html","searchKeys":["MagFilter","enum MagFilter","com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter"]},{"name":"enum MinFilter","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/index.html","searchKeys":["MinFilter","enum MinFilter","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter"]},{"name":"enum Usage","description":"com.google.ar.sceneform.rendering.Texture.Usage","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-usage/index.html","searchKeys":["Usage","enum Usage","com.google.ar.sceneform.rendering.Texture.Usage"]},{"name":"enum VerticalAlignment","description":"com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-vertical-alignment/index.html","searchKeys":["VerticalAlignment","enum VerticalAlignment","com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment"]},{"name":"enum WrapMode","description":"com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-wrap-mode/index.html","searchKeys":["WrapMode","enum WrapMode","com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode"]},{"name":"fun <R> Texture.use(engine: Engine, block: (Texture) -> R): R","description":"io.github.sceneview.texture.use","location":"sceneview/io.github.sceneview.texture/use.html","searchKeys":["use","fun <R> Texture.use(engine: Engine, block: (Texture) -> R): R","io.github.sceneview.texture.use"]},{"name":"fun <T : Geometry> build(engine: Engine, constructor: (vertexBuffer: VertexBuffer, indexBuffer: IndexBuffer, offsets: List<IntRange>, boundingBox: Box) -> T): T","description":"io.github.sceneview.geometries.Geometry.Builder.build","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/build.html","searchKeys":["build","fun <T : Geometry> build(engine: Engine, constructor: (vertexBuffer: VertexBuffer, indexBuffer: IndexBuffer, offsets: List<IntRange>, boundingBox: Box) -> T): T","io.github.sceneview.geometries.Geometry.Builder.build"]},{"name":"fun <T : RayHit?> raycastAll(ray: Ray, resultBuffer: ArrayList<T>, processResult: BiConsumer<T, Collider>?, allocateResult: Supplier<T>): Int","description":"io.github.sceneview.collision.CollisionSystem.raycastAll","location":"sceneview/io.github.sceneview.collision/-collision-system/raycast-all.html","searchKeys":["raycastAll","fun <T : RayHit?> raycastAll(ray: Ray, resultBuffer: ArrayList<T>, processResult: BiConsumer<T, Collider>?, allocateResult: Supplier<T>): Int","io.github.sceneview.collision.CollisionSystem.raycastAll"]},{"name":"fun <T : Renderable, B : Renderable.Builder<T, B>> Renderable.Builder<T, B>.asDeferred(engine: Engine): Deferred<T>","description":"io.github.sceneview.model.asDeferred","location":"sceneview/io.github.sceneview.model/as-deferred.html","searchKeys":["asDeferred","fun <T : Renderable, B : Renderable.Builder<T, B>> Renderable.Builder<T, B>.asDeferred(engine: Engine): Deferred<T>","io.github.sceneview.model.asDeferred"]},{"name":"fun Activity.setKeepScreenOn(keepScreenOn: Boolean = true)","description":"io.github.sceneview.utils.setKeepScreenOn","location":"sceneview/io.github.sceneview.utils/set-keep-screen-on.html","searchKeys":["setKeepScreenOn","fun Activity.setKeepScreenOn(keepScreenOn: Boolean = true)","io.github.sceneview.utils.setKeepScreenOn"]},{"name":"fun Animator.getAnimationIndex(animationName: String): Int?","description":"io.github.sceneview.model.getAnimationIndex","location":"sceneview/io.github.sceneview.model/get-animation-index.html","searchKeys":["getAnimationIndex","fun Animator.getAnimationIndex(animationName: String): Int?","io.github.sceneview.model.getAnimationIndex"]},{"name":"fun AssetLoader.safeDestroyModel(model: Model)","description":"io.github.sceneview.safeDestroyModel","location":"sceneview/io.github.sceneview/safe-destroy-model.html","searchKeys":["safeDestroyModel","fun AssetLoader.safeDestroyModel(model: Model)","io.github.sceneview.safeDestroyModel"]},{"name":"fun AssetManager.readFileBuffer(fileLocation: String): ByteBuffer","description":"io.github.sceneview.utils.readFileBuffer","location":"sceneview/io.github.sceneview.utils/read-file-buffer.html","searchKeys":["readFileBuffer","fun AssetManager.readFileBuffer(fileLocation: String): ByteBuffer","io.github.sceneview.utils.readFileBuffer"]},{"name":"fun Box(center: Position, halfExtent: Size): Box","description":"io.github.sceneview.math.Box","location":"sceneview/io.github.sceneview.math/-box.html","searchKeys":["Box","fun Box(center: Position, halfExtent: Size): Box","io.github.sceneview.math.Box"]},{"name":"fun Box.toVector3Box(): Box","description":"io.github.sceneview.math.toVector3Box","location":"sceneview/io.github.sceneview.math/to-vector3-box.html","searchKeys":["toVector3Box","fun Box.toVector3Box(): Box","io.github.sceneview.math.toVector3Box"]},{"name":"fun ByteBuffer.clone(): ByteBuffer","description":"io.github.sceneview.utils.clone","location":"sceneview/io.github.sceneview.utils/clone.html","searchKeys":["clone","fun ByteBuffer.clone(): ByteBuffer","io.github.sceneview.utils.clone"]},{"name":"fun Camera.illuminance(ev100: Float): Float","description":"io.github.sceneview.utils.illuminance","location":"sceneview/io.github.sceneview.utils/illuminance.html","searchKeys":["illuminance","fun Camera.illuminance(ev100: Float): Float","io.github.sceneview.utils.illuminance"]},{"name":"fun Camera.lookAt(eye: Position, center: Position, up: Direction)","description":"io.github.sceneview.utils.lookAt","location":"sceneview/io.github.sceneview.utils/look-at.html","searchKeys":["lookAt","fun Camera.lookAt(eye: Position, center: Position, up: Direction)","io.github.sceneview.utils.lookAt"]},{"name":"fun Camera.luminance(ev100: Float): Float","description":"io.github.sceneview.utils.luminance","location":"sceneview/io.github.sceneview.utils/luminance.html","searchKeys":["luminance","fun Camera.luminance(ev100: Float): Float","io.github.sceneview.utils.luminance"]},{"name":"fun Camera.setCustomProjection(inProjection: Transform, near: Double = getNear().toDouble(), far: Double = cullingFar.toDouble(), inProjectionForCulling: Transform = inProjection)","description":"io.github.sceneview.utils.setCustomProjection","location":"sceneview/io.github.sceneview.utils/set-custom-projection.html","searchKeys":["setCustomProjection","fun Camera.setCustomProjection(inProjection: Transform, near: Double = getNear().toDouble(), far: Double = cullingFar.toDouble(), inProjectionForCulling: Transform = inProjection)","io.github.sceneview.utils.setCustomProjection"]},{"name":"fun Camera.setScaling(scaling: Float2)","description":"io.github.sceneview.utils.setScaling","location":"sceneview/io.github.sceneview.utils/set-scaling.html","searchKeys":["setScaling","fun Camera.setScaling(scaling: Float2)","io.github.sceneview.utils.setScaling"]},{"name":"fun Camera.viewToRay(viewPosition: Float2): Ray","description":"io.github.sceneview.utils.viewToRay","location":"sceneview/io.github.sceneview.utils/view-to-ray.html","searchKeys":["viewToRay","fun Camera.viewToRay(viewPosition: Float2): Ray","io.github.sceneview.utils.viewToRay"]},{"name":"fun Camera.viewToWorld(viewPosition: Float2, z: Float = 1.0f): Position","description":"io.github.sceneview.utils.viewToWorld","location":"sceneview/io.github.sceneview.utils/view-to-world.html","searchKeys":["viewToWorld","fun Camera.viewToWorld(viewPosition: Float2, z: Float = 1.0f): Position","io.github.sceneview.utils.viewToWorld"]},{"name":"fun Camera.worldToView(worldPosition: Position): Float2","description":"io.github.sceneview.utils.worldToView","location":"sceneview/io.github.sceneview.utils/world-to-view.html","searchKeys":["worldToView","fun Camera.worldToView(worldPosition: Position): Float2","io.github.sceneview.utils.worldToView"]},{"name":"fun Color.toLinearSpace(): Float4","description":"io.github.sceneview.math.toLinearSpace","location":"sceneview/io.github.sceneview.math/to-linear-space.html","searchKeys":["toLinearSpace","fun Color.toLinearSpace(): Float4","io.github.sceneview.math.toLinearSpace"]},{"name":"fun Context.getResourceUri(resId: Int): String","description":"io.github.sceneview.utils.getResourceUri","location":"sceneview/io.github.sceneview.utils/get-resource-uri.html","searchKeys":["getResourceUri","fun Context.getResourceUri(resId: Int): String","io.github.sceneview.utils.getResourceUri"]},{"name":"fun DoubleArray.toFloat4(): Float4","description":"io.github.sceneview.math.toFloat4","location":"sceneview/io.github.sceneview.math/to-float4.html","searchKeys":["toFloat4","fun DoubleArray.toFloat4(): Float4","io.github.sceneview.math.toFloat4"]},{"name":"fun DoubleArray.toTransform(): Mat4","description":"io.github.sceneview.math.toTransform","location":"sceneview/io.github.sceneview.math/to-transform.html","searchKeys":["toTransform","fun DoubleArray.toTransform(): Mat4","io.github.sceneview.math.toTransform"]},{"name":"fun EGLContext.destroy()","description":"io.github.sceneview.utils.destroy","location":"sceneview/io.github.sceneview.utils/destroy.html","searchKeys":["destroy","fun EGLContext.destroy()","io.github.sceneview.utils.destroy"]},{"name":"fun Engine.createCamera(): Camera","description":"io.github.sceneview.createCamera","location":"sceneview/io.github.sceneview/create-camera.html","searchKeys":["createCamera","fun Engine.createCamera(): Camera","io.github.sceneview.createCamera"]},{"name":"fun Engine.createMaterialLoader(context: Context): MaterialLoader","description":"io.github.sceneview.createMaterialLoader","location":"sceneview/io.github.sceneview/create-material-loader.html","searchKeys":["createMaterialLoader","fun Engine.createMaterialLoader(context: Context): MaterialLoader","io.github.sceneview.createMaterialLoader"]},{"name":"fun Engine.createModelLoader(context: Context): ModelLoader","description":"io.github.sceneview.createModelLoader","location":"sceneview/io.github.sceneview/create-model-loader.html","searchKeys":["createModelLoader","fun Engine.createModelLoader(context: Context): ModelLoader","io.github.sceneview.createModelLoader"]},{"name":"fun Engine.safeDestroy(): Result<Unit>","description":"io.github.sceneview.safeDestroy","location":"sceneview/io.github.sceneview/safe-destroy.html","searchKeys":["safeDestroy","fun Engine.safeDestroy(): Result<Unit>","io.github.sceneview.safeDestroy"]},{"name":"fun Engine.safeDestroyCamera(camera: Camera)","description":"io.github.sceneview.safeDestroyCamera","location":"sceneview/io.github.sceneview/safe-destroy-camera.html","searchKeys":["safeDestroyCamera","fun Engine.safeDestroyCamera(camera: Camera)","io.github.sceneview.safeDestroyCamera"]},{"name":"fun Engine.safeDestroyEntity(entity: Entity): Result<Unit>","description":"io.github.sceneview.safeDestroyEntity","location":"sceneview/io.github.sceneview/safe-destroy-entity.html","searchKeys":["safeDestroyEntity","fun Engine.safeDestroyEntity(entity: Entity): Result<Unit>","io.github.sceneview.safeDestroyEntity"]},{"name":"fun Engine.safeDestroyIndexBuffer(indexBuffer: IndexBuffer): Result<Unit>","description":"io.github.sceneview.safeDestroyIndexBuffer","location":"sceneview/io.github.sceneview/safe-destroy-index-buffer.html","searchKeys":["safeDestroyIndexBuffer","fun Engine.safeDestroyIndexBuffer(indexBuffer: IndexBuffer): Result<Unit>","io.github.sceneview.safeDestroyIndexBuffer"]},{"name":"fun Engine.safeDestroyIndirectLight(indirectLight: IndirectLight): Result<Unit>","description":"io.github.sceneview.safeDestroyIndirectLight","location":"sceneview/io.github.sceneview/safe-destroy-indirect-light.html","searchKeys":["safeDestroyIndirectLight","fun Engine.safeDestroyIndirectLight(indirectLight: IndirectLight): Result<Unit>","io.github.sceneview.safeDestroyIndirectLight"]},{"name":"fun Engine.safeDestroyMaterial(material: Material): Result<Unit>","description":"io.github.sceneview.safeDestroyMaterial","location":"sceneview/io.github.sceneview/safe-destroy-material.html","searchKeys":["safeDestroyMaterial","fun Engine.safeDestroyMaterial(material: Material): Result<Unit>","io.github.sceneview.safeDestroyMaterial"]},{"name":"fun Engine.safeDestroyMaterialInstance(materialInstance: MaterialInstance): Result<Unit>","description":"io.github.sceneview.safeDestroyMaterialInstance","location":"sceneview/io.github.sceneview/safe-destroy-material-instance.html","searchKeys":["safeDestroyMaterialInstance","fun Engine.safeDestroyMaterialInstance(materialInstance: MaterialInstance): Result<Unit>","io.github.sceneview.safeDestroyMaterialInstance"]},{"name":"fun Engine.safeDestroyMaterialLoader(materialLoader: MaterialLoader): Result<Unit>","description":"io.github.sceneview.safeDestroyMaterialLoader","location":"sceneview/io.github.sceneview/safe-destroy-material-loader.html","searchKeys":["safeDestroyMaterialLoader","fun Engine.safeDestroyMaterialLoader(materialLoader: MaterialLoader): Result<Unit>","io.github.sceneview.safeDestroyMaterialLoader"]},{"name":"fun Engine.safeDestroyModelLoader(modelLoader: ModelLoader): Result<Unit>","description":"io.github.sceneview.safeDestroyModelLoader","location":"sceneview/io.github.sceneview/safe-destroy-model-loader.html","searchKeys":["safeDestroyModelLoader","fun Engine.safeDestroyModelLoader(modelLoader: ModelLoader): Result<Unit>","io.github.sceneview.safeDestroyModelLoader"]},{"name":"fun Engine.safeDestroyRenderer(renderer: Renderer): Result<Unit>","description":"io.github.sceneview.safeDestroyRenderer","location":"sceneview/io.github.sceneview/safe-destroy-renderer.html","searchKeys":["safeDestroyRenderer","fun Engine.safeDestroyRenderer(renderer: Renderer): Result<Unit>","io.github.sceneview.safeDestroyRenderer"]},{"name":"fun Engine.safeDestroyScene(scene: Scene): Result<Unit>","description":"io.github.sceneview.safeDestroyScene","location":"sceneview/io.github.sceneview/safe-destroy-scene.html","searchKeys":["safeDestroyScene","fun Engine.safeDestroyScene(scene: Scene): Result<Unit>","io.github.sceneview.safeDestroyScene"]},{"name":"fun Engine.safeDestroySkybox(skybox: Skybox): Result<Unit>","description":"io.github.sceneview.safeDestroySkybox","location":"sceneview/io.github.sceneview/safe-destroy-skybox.html","searchKeys":["safeDestroySkybox","fun Engine.safeDestroySkybox(skybox: Skybox): Result<Unit>","io.github.sceneview.safeDestroySkybox"]},{"name":"fun Engine.safeDestroyStream(stream: Stream): Result<Unit>","description":"io.github.sceneview.safeDestroyStream","location":"sceneview/io.github.sceneview/safe-destroy-stream.html","searchKeys":["safeDestroyStream","fun Engine.safeDestroyStream(stream: Stream): Result<Unit>","io.github.sceneview.safeDestroyStream"]},{"name":"fun Engine.safeDestroyTexture(texture: Texture): Result<Unit>","description":"io.github.sceneview.safeDestroyTexture","location":"sceneview/io.github.sceneview/safe-destroy-texture.html","searchKeys":["safeDestroyTexture","fun Engine.safeDestroyTexture(texture: Texture): Result<Unit>","io.github.sceneview.safeDestroyTexture"]},{"name":"fun Engine.safeDestroyVertexBuffer(vertexBuffer: VertexBuffer): Result<Unit>","description":"io.github.sceneview.safeDestroyVertexBuffer","location":"sceneview/io.github.sceneview/safe-destroy-vertex-buffer.html","searchKeys":["safeDestroyVertexBuffer","fun Engine.safeDestroyVertexBuffer(vertexBuffer: VertexBuffer): Result<Unit>","io.github.sceneview.safeDestroyVertexBuffer"]},{"name":"fun Engine.safeDestroyView(view: View): Result<Unit>","description":"io.github.sceneview.safeDestroyView","location":"sceneview/io.github.sceneview/safe-destroy-view.html","searchKeys":["safeDestroyView","fun Engine.safeDestroyView(view: View): Result<Unit>","io.github.sceneview.safeDestroyView"]},{"name":"fun Float.compareTo(v: Float, delta: Float): Float","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float.compareTo(v: Float, delta: Float): Float","io.github.sceneview.math.compareTo"]},{"name":"fun Float.equals(v: Float, delta: Float): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float.equals(v: Float, delta: Float): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Float2.compareTo(v: Float, delta: Float = 0.0f): Float2","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float2.compareTo(v: Float, delta: Float = 0.0f): Float2","io.github.sceneview.math.compareTo"]},{"name":"fun Float2.compareTo(v: Float2, delta: Float = 0.0f): Float2","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float2.compareTo(v: Float2, delta: Float = 0.0f): Float2","io.github.sceneview.math.compareTo"]},{"name":"fun Float2.equals(v: Float, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float2.equals(v: Float, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Float2.equals(v: Float2, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float2.equals(v: Float2, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Float3.compareTo(v: Float, delta: Float = 0.0f): Float3","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float3.compareTo(v: Float, delta: Float = 0.0f): Float3","io.github.sceneview.math.compareTo"]},{"name":"fun Float3.compareTo(v: Float3, delta: Float = 0.0f): Float3","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float3.compareTo(v: Float3, delta: Float = 0.0f): Float3","io.github.sceneview.math.compareTo"]},{"name":"fun Float3.equals(v: Float, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float3.equals(v: Float, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Float3.equals(v: Float3, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float3.equals(v: Float3, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Float3.toVector3(): Vector3","description":"io.github.sceneview.math.toVector3","location":"sceneview/io.github.sceneview.math/to-vector3.html","searchKeys":["toVector3","fun Float3.toVector3(): Vector3","io.github.sceneview.math.toVector3"]},{"name":"fun Float4.compareTo(v: Float, delta: Float = 0.0f): Float4","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float4.compareTo(v: Float, delta: Float = 0.0f): Float4","io.github.sceneview.math.compareTo"]},{"name":"fun Float4.compareTo(v: Float4, delta: Float = 0.0f): Float4","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Float4.compareTo(v: Float4, delta: Float = 0.0f): Float4","io.github.sceneview.math.compareTo"]},{"name":"fun Float4.equals(v: Float, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float4.equals(v: Float, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Float4.equals(v: Float4, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Float4.equals(v: Float4, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun FloatArray.toColor(): Float4","description":"io.github.sceneview.math.toColor","location":"sceneview/io.github.sceneview.math/to-color.html","searchKeys":["toColor","fun FloatArray.toColor(): Float4","io.github.sceneview.math.toColor"]},{"name":"fun FloatArray.toDirection(): Float3","description":"io.github.sceneview.math.toDirection","location":"sceneview/io.github.sceneview.math/to-direction.html","searchKeys":["toDirection","fun FloatArray.toDirection(): Float3","io.github.sceneview.math.toDirection"]},{"name":"fun FloatArray.toFloat3(): Float3","description":"io.github.sceneview.math.toFloat3","location":"sceneview/io.github.sceneview.math/to-float3.html","searchKeys":["toFloat3","fun FloatArray.toFloat3(): Float3","io.github.sceneview.math.toFloat3"]},{"name":"fun FloatArray.toFloat4(): Float4","description":"io.github.sceneview.math.toFloat4","location":"sceneview/io.github.sceneview.math/to-float4.html","searchKeys":["toFloat4","fun FloatArray.toFloat4(): Float4","io.github.sceneview.math.toFloat4"]},{"name":"fun FloatArray.toLinearSpace(): FloatArray","description":"io.github.sceneview.math.toLinearSpace","location":"sceneview/io.github.sceneview.math/to-linear-space.html","searchKeys":["toLinearSpace","fun FloatArray.toLinearSpace(): FloatArray","io.github.sceneview.math.toLinearSpace"]},{"name":"fun FloatArray.toPosition(): Float3","description":"io.github.sceneview.math.toPosition","location":"sceneview/io.github.sceneview.math/to-position.html","searchKeys":["toPosition","fun FloatArray.toPosition(): Float3","io.github.sceneview.math.toPosition"]},{"name":"fun FloatArray.toRotation(): Float3","description":"io.github.sceneview.math.toRotation","location":"sceneview/io.github.sceneview.math/to-rotation.html","searchKeys":["toRotation","fun FloatArray.toRotation(): Float3","io.github.sceneview.math.toRotation"]},{"name":"fun FloatArray.toScale(): Float3","description":"io.github.sceneview.math.toScale","location":"sceneview/io.github.sceneview.math/to-scale.html","searchKeys":["toScale","fun FloatArray.toScale(): Float3","io.github.sceneview.math.toScale"]},{"name":"fun FloatArray.toSize(): Float3","description":"io.github.sceneview.math.toSize","location":"sceneview/io.github.sceneview.math/to-size.html","searchKeys":["toSize","fun FloatArray.toSize(): Float3","io.github.sceneview.math.toSize"]},{"name":"fun FloatArray.toTransform(): Mat4","description":"io.github.sceneview.math.toTransform","location":"sceneview/io.github.sceneview.math/to-transform.html","searchKeys":["toTransform","fun FloatArray.toTransform(): Mat4","io.github.sceneview.math.toTransform"]},{"name":"fun FloatBuffer.clone(): FloatBuffer","description":"io.github.sceneview.utils.clone","location":"sceneview/io.github.sceneview.utils/clone.html","searchKeys":["clone","fun FloatBuffer.clone(): FloatBuffer","io.github.sceneview.utils.clone"]},{"name":"fun HDRLoader.createEnvironment(engine: Engine, iblPrefilter: IBLPrefilter, hdrBuffer: Buffer, specularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox): HDREnvironment?","description":"io.github.sceneview.loaders.createEnvironment","location":"sceneview/io.github.sceneview.loaders/create-environment.html","searchKeys":["createEnvironment","fun HDRLoader.createEnvironment(engine: Engine, iblPrefilter: IBLPrefilter, hdrBuffer: Buffer, specularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox): HDREnvironment?","io.github.sceneview.loaders.createEnvironment"]},{"name":"fun HDRLoader.createTexture(engine: Engine, buffer: Buffer, options: HDRLoader.Options = HDRLoader.Options()): Texture?","description":"io.github.sceneview.loaders.createTexture","location":"sceneview/io.github.sceneview.loaders/create-texture.html","searchKeys":["createTexture","fun HDRLoader.createTexture(engine: Engine, buffer: Buffer, options: HDRLoader.Options = HDRLoader.Options()): Texture?","io.github.sceneview.loaders.createTexture"]},{"name":"fun HDRLoader.loadEnvironmentAsync(engine: Engine, iblPrefilter: IBLPrefilter, context: Context, coroutineScope: LifecycleCoroutineScope, hdrFileLocation: String, specularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox, result: (HDREnvironment?) -> Unit): Job","description":"io.github.sceneview.loaders.loadEnvironmentAsync","location":"sceneview/io.github.sceneview.loaders/load-environment-async.html","searchKeys":["loadEnvironmentAsync","fun HDRLoader.loadEnvironmentAsync(engine: Engine, iblPrefilter: IBLPrefilter, context: Context, coroutineScope: LifecycleCoroutineScope, hdrFileLocation: String, specularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox, result: (HDREnvironment?) -> Unit): Job","io.github.sceneview.loaders.loadEnvironmentAsync"]},{"name":"fun IndexBuffer.setIndices(engine: Engine, indices: List<Int>)","description":"io.github.sceneview.geometries.setIndices","location":"sceneview/io.github.sceneview.geometries/set-indices.html","searchKeys":["setIndices","fun IndexBuffer.setIndices(engine: Engine, indices: List<Int>)","io.github.sceneview.geometries.setIndices"]},{"name":"fun InputStream.readFileBuffer(): ByteBuffer","description":"io.github.sceneview.utils.readFileBuffer","location":"sceneview/io.github.sceneview.utils/read-file-buffer.html","searchKeys":["readFileBuffer","fun InputStream.readFileBuffer(): ByteBuffer","io.github.sceneview.utils.readFileBuffer"]},{"name":"fun InputStream.toByteArray(): ByteArray","description":"io.github.sceneview.utils.toByteArray","location":"sceneview/io.github.sceneview.utils/to-byte-array.html","searchKeys":["toByteArray","fun InputStream.toByteArray(): ByteArray","io.github.sceneview.utils.toByteArray"]},{"name":"fun KTX1Loader.createEnvironment(engine: Engine, assets: AssetManager, iblKtxFileLocation: String, skyboxKtxFileLocation: String? = null): Environment","description":"io.github.sceneview.loaders.createEnvironment","location":"sceneview/io.github.sceneview.loaders/create-environment.html","searchKeys":["createEnvironment","fun KTX1Loader.createEnvironment(engine: Engine, assets: AssetManager, iblKtxFileLocation: String, skyboxKtxFileLocation: String? = null): Environment","io.github.sceneview.loaders.createEnvironment"]},{"name":"fun KTX1Loader.createEnvironment(engine: Engine, iblKtxBuffer: Buffer?, skyboxKtxBuffer: Buffer? = null): KTXEnvironment","description":"io.github.sceneview.loaders.createEnvironment","location":"sceneview/io.github.sceneview.loaders/create-environment.html","searchKeys":["createEnvironment","fun KTX1Loader.createEnvironment(engine: Engine, iblKtxBuffer: Buffer?, skyboxKtxBuffer: Buffer? = null): KTXEnvironment","io.github.sceneview.loaders.createEnvironment"]},{"name":"fun KTX1Loader.createIndirectLight(engine: Engine, buffer: Buffer, options: KTX1Loader.Options = KTXLoader.Options()): IndirectLight","description":"io.github.sceneview.loaders.createIndirectLight","location":"sceneview/io.github.sceneview.loaders/create-indirect-light.html","searchKeys":["createIndirectLight","fun KTX1Loader.createIndirectLight(engine: Engine, buffer: Buffer, options: KTX1Loader.Options = KTXLoader.Options()): IndirectLight","io.github.sceneview.loaders.createIndirectLight"]},{"name":"fun KTX1Loader.createSkybox(engine: Engine, buffer: Buffer, options: KTX1Loader.Options = KTXLoader.Options()): Skybox","description":"io.github.sceneview.loaders.createSkybox","location":"sceneview/io.github.sceneview.loaders/create-skybox.html","searchKeys":["createSkybox","fun KTX1Loader.createSkybox(engine: Engine, buffer: Buffer, options: KTX1Loader.Options = KTXLoader.Options()): Skybox","io.github.sceneview.loaders.createSkybox"]},{"name":"fun LightManager.Builder.build(engine: Engine, entity: Entity = EntityManager.get().create())","description":"io.github.sceneview.managers.build","location":"sceneview/io.github.sceneview.managers/build.html","searchKeys":["build","fun LightManager.Builder.build(engine: Engine, entity: Entity = EntityManager.get().create())","io.github.sceneview.managers.build"]},{"name":"fun LightManager.Builder.color(linearColor: Color): LightManager.Builder","description":"io.github.sceneview.managers.color","location":"sceneview/io.github.sceneview.managers/color.html","searchKeys":["color","fun LightManager.Builder.color(linearColor: Color): LightManager.Builder","io.github.sceneview.managers.color"]},{"name":"fun LightManager.Builder.direction(direction: Direction): LightManager.Builder","description":"io.github.sceneview.managers.direction","location":"sceneview/io.github.sceneview.managers/direction.html","searchKeys":["direction","fun LightManager.Builder.direction(direction: Direction): LightManager.Builder","io.github.sceneview.managers.direction"]},{"name":"fun LightManager.Builder.position(position: Position): LightManager.Builder","description":"io.github.sceneview.managers.position","location":"sceneview/io.github.sceneview.managers/position.html","searchKeys":["position","fun LightManager.Builder.position(position: Position): LightManager.Builder","io.github.sceneview.managers.position"]},{"name":"fun LightManager.getDirection(instance: EntityInstance): Direction","description":"io.github.sceneview.managers.getDirection","location":"sceneview/io.github.sceneview.managers/get-direction.html","searchKeys":["getDirection","fun LightManager.getDirection(instance: EntityInstance): Direction","io.github.sceneview.managers.getDirection"]},{"name":"fun LightManager.getPosition(instance: EntityInstance): Position","description":"io.github.sceneview.managers.getPosition","location":"sceneview/io.github.sceneview.managers/get-position.html","searchKeys":["getPosition","fun LightManager.getPosition(instance: EntityInstance): Position","io.github.sceneview.managers.getPosition"]},{"name":"fun LightManager.getQuaternion(instance: EntityInstance): Quaternion","description":"io.github.sceneview.managers.getQuaternion","location":"sceneview/io.github.sceneview.managers/get-quaternion.html","searchKeys":["getQuaternion","fun LightManager.getQuaternion(instance: EntityInstance): Quaternion","io.github.sceneview.managers.getQuaternion"]},{"name":"fun LightManager.setDirection(instance: EntityInstance, direction: Direction)","description":"io.github.sceneview.managers.setDirection","location":"sceneview/io.github.sceneview.managers/set-direction.html","searchKeys":["setDirection","fun LightManager.setDirection(instance: EntityInstance, direction: Direction)","io.github.sceneview.managers.setDirection"]},{"name":"fun LightManager.setPosition(instance: EntityInstance, position: Position)","description":"io.github.sceneview.managers.setPosition","location":"sceneview/io.github.sceneview.managers/set-position.html","searchKeys":["setPosition","fun LightManager.setPosition(instance: EntityInstance, position: Position)","io.github.sceneview.managers.setPosition"]},{"name":"fun LightManager.setQuaternion(instance: EntityInstance, quaternion: Quaternion)","description":"io.github.sceneview.managers.setQuaternion","location":"sceneview/io.github.sceneview.managers/set-quaternion.html","searchKeys":["setQuaternion","fun LightManager.setQuaternion(instance: EntityInstance, quaternion: Quaternion)","io.github.sceneview.managers.setQuaternion"]},{"name":"fun List<Geometry.PrimitiveIndices>.getOffsets(): List<IntRange>","description":"io.github.sceneview.geometries.getOffsets","location":"sceneview/io.github.sceneview.geometries/get-offsets.html","searchKeys":["getOffsets","fun List<Geometry.PrimitiveIndices>.getOffsets(): List<IntRange>","io.github.sceneview.geometries.getOffsets"]},{"name":"fun Long.fps(other: Long?): Double","description":"io.github.sceneview.utils.fps","location":"sceneview/io.github.sceneview.utils/fps.html","searchKeys":["fps","fun Long.fps(other: Long?): Double","io.github.sceneview.utils.fps"]},{"name":"fun Long.interval(other: Long?): Duration","description":"io.github.sceneview.utils.interval","location":"sceneview/io.github.sceneview.utils/interval.html","searchKeys":["interval","fun Long.interval(other: Long?): Duration","io.github.sceneview.utils.interval"]},{"name":"fun Long.intervalSeconds(other: Long?): Double","description":"io.github.sceneview.utils.intervalSeconds","location":"sceneview/io.github.sceneview.utils/interval-seconds.html","searchKeys":["intervalSeconds","fun Long.intervalSeconds(other: Long?): Double","io.github.sceneview.utils.intervalSeconds"]},{"name":"fun Manipulator.Builder.orbitHomePosition(position: Position): Manipulator.Builder","description":"io.github.sceneview.gesture.orbitHomePosition","location":"sceneview/io.github.sceneview.gesture/orbit-home-position.html","searchKeys":["orbitHomePosition","fun Manipulator.Builder.orbitHomePosition(position: Position): Manipulator.Builder","io.github.sceneview.gesture.orbitHomePosition"]},{"name":"fun Manipulator.Builder.targetPosition(position: Position): Manipulator.Builder","description":"io.github.sceneview.gesture.targetPosition","location":"sceneview/io.github.sceneview.gesture/target-position.html","searchKeys":["targetPosition","fun Manipulator.Builder.targetPosition(position: Position): Manipulator.Builder","io.github.sceneview.gesture.targetPosition"]},{"name":"fun Mat4.compareTo(m: Mat4, delta: Float = 0.0f): Mat4","description":"io.github.sceneview.math.compareTo","location":"sceneview/io.github.sceneview.math/compare-to.html","searchKeys":["compareTo","fun Mat4.compareTo(m: Mat4, delta: Float = 0.0f): Mat4","io.github.sceneview.math.compareTo"]},{"name":"fun Mat4.equals(m: Mat4, delta: Float = 0.0f): Boolean","description":"io.github.sceneview.math.equals","location":"sceneview/io.github.sceneview.math/equals.html","searchKeys":["equals","fun Mat4.equals(m: Mat4, delta: Float = 0.0f): Boolean","io.github.sceneview.math.equals"]},{"name":"fun Mat4.toColumnsDoubleArray(): DoubleArray","description":"io.github.sceneview.math.toColumnsDoubleArray","location":"sceneview/io.github.sceneview.math/to-columns-double-array.html","searchKeys":["toColumnsDoubleArray","fun Mat4.toColumnsDoubleArray(): DoubleArray","io.github.sceneview.math.toColumnsDoubleArray"]},{"name":"fun Mat4.toColumnsFloatArray(): FloatArray","description":"io.github.sceneview.math.toColumnsFloatArray","location":"sceneview/io.github.sceneview.math/to-columns-float-array.html","searchKeys":["toColumnsFloatArray","fun Mat4.toColumnsFloatArray(): FloatArray","io.github.sceneview.math.toColumnsFloatArray"]},{"name":"fun Mat4.toDoubleArray(): DoubleArray","description":"io.github.sceneview.math.toDoubleArray","location":"sceneview/io.github.sceneview.math/to-double-array.html","searchKeys":["toDoubleArray","fun Mat4.toDoubleArray(): DoubleArray","io.github.sceneview.math.toDoubleArray"]},{"name":"fun Mat4.toMatrix(): Matrix","description":"io.github.sceneview.math.toMatrix","location":"sceneview/io.github.sceneview.math/to-matrix.html","searchKeys":["toMatrix","fun Mat4.toMatrix(): Matrix","io.github.sceneview.math.toMatrix"]},{"name":"fun MaterialInstance.setAoIndex(value: Int)","description":"io.github.sceneview.material.setAoIndex","location":"sceneview/io.github.sceneview.material/set-ao-index.html","searchKeys":["setAoIndex","fun MaterialInstance.setAoIndex(value: Int)","io.github.sceneview.material.setAoIndex"]},{"name":"fun MaterialInstance.setAoStrength(value: Float)","description":"io.github.sceneview.material.setAoStrength","location":"sceneview/io.github.sceneview.material/set-ao-strength.html","searchKeys":["setAoStrength","fun MaterialInstance.setAoStrength(value: Float)","io.github.sceneview.material.setAoStrength"]},{"name":"fun MaterialInstance.setBaseColor(value: Color)","description":"io.github.sceneview.material.setBaseColor","location":"sceneview/io.github.sceneview.material/set-base-color.html","searchKeys":["setBaseColor","fun MaterialInstance.setBaseColor(value: Color)","io.github.sceneview.material.setBaseColor"]},{"name":"fun MaterialInstance.setBaseColorIndex(value: Int)","description":"io.github.sceneview.material.setBaseColorIndex","location":"sceneview/io.github.sceneview.material/set-base-color-index.html","searchKeys":["setBaseColorIndex","fun MaterialInstance.setBaseColorIndex(value: Int)","io.github.sceneview.material.setBaseColorIndex"]},{"name":"fun MaterialInstance.setBaseColorMap(texture: Texture, sampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setBaseColorMap","location":"sceneview/io.github.sceneview.material/set-base-color-map.html","searchKeys":["setBaseColorMap","fun MaterialInstance.setBaseColorMap(texture: Texture, sampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setBaseColorMap"]},{"name":"fun MaterialInstance.setBaseTexture(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setBaseTexture","location":"sceneview/io.github.sceneview.material/set-base-texture.html","searchKeys":["setBaseTexture","fun MaterialInstance.setBaseTexture(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setBaseTexture"]},{"name":"fun MaterialInstance.setColor(color: Color, type: Colors.RgbaType = Colors.RgbaType.SRGB)","description":"io.github.sceneview.material.setColor","location":"sceneview/io.github.sceneview.material/set-color.html","searchKeys":["setColor","fun MaterialInstance.setColor(color: Color, type: Colors.RgbaType = Colors.RgbaType.SRGB)","io.github.sceneview.material.setColor"]},{"name":"fun MaterialInstance.setColor(color: Color, type: Colors.RgbaType = Colors.RgbaType.SRGB)","description":"io.github.sceneview.material.setColor","location":"sceneview/io.github.sceneview.material/set-color.html","searchKeys":["setColor","fun MaterialInstance.setColor(color: Color, type: Colors.RgbaType = Colors.RgbaType.SRGB)","io.github.sceneview.material.setColor"]},{"name":"fun MaterialInstance.setColor(color: Int, type: Colors.RgbaType = Colors.RgbaType.SRGB)","description":"io.github.sceneview.material.setColor","location":"sceneview/io.github.sceneview.material/set-color.html","searchKeys":["setColor","fun MaterialInstance.setColor(color: Int, type: Colors.RgbaType = Colors.RgbaType.SRGB)","io.github.sceneview.material.setColor"]},{"name":"fun MaterialInstance.setEmissiveColor(value: Color)","description":"io.github.sceneview.material.setEmissiveColor","location":"sceneview/io.github.sceneview.material/set-emissive-color.html","searchKeys":["setEmissiveColor","fun MaterialInstance.setEmissiveColor(value: Color)","io.github.sceneview.material.setEmissiveColor"]},{"name":"fun MaterialInstance.setEmissiveIndex(value: Int)","description":"io.github.sceneview.material.setEmissiveIndex","location":"sceneview/io.github.sceneview.material/set-emissive-index.html","searchKeys":["setEmissiveIndex","fun MaterialInstance.setEmissiveIndex(value: Int)","io.github.sceneview.material.setEmissiveIndex"]},{"name":"fun MaterialInstance.setEmissiveMap(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setEmissiveMap","location":"sceneview/io.github.sceneview.material/set-emissive-map.html","searchKeys":["setEmissiveMap","fun MaterialInstance.setEmissiveMap(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setEmissiveMap"]},{"name":"fun MaterialInstance.setExternalTexture(name: String, texture: Texture)","description":"io.github.sceneview.material.setExternalTexture","location":"sceneview/io.github.sceneview.material/set-external-texture.html","searchKeys":["setExternalTexture","fun MaterialInstance.setExternalTexture(name: String, texture: Texture)","io.github.sceneview.material.setExternalTexture"]},{"name":"fun MaterialInstance.setExternalTexture(texture: Texture)","description":"io.github.sceneview.material.setExternalTexture","location":"sceneview/io.github.sceneview.material/set-external-texture.html","searchKeys":["setExternalTexture","fun MaterialInstance.setExternalTexture(texture: Texture)","io.github.sceneview.material.setExternalTexture"]},{"name":"fun MaterialInstance.setMetallic(factor: Float)","description":"io.github.sceneview.material.setMetallic","location":"sceneview/io.github.sceneview.material/set-metallic.html","searchKeys":["setMetallic","fun MaterialInstance.setMetallic(factor: Float)","io.github.sceneview.material.setMetallic"]},{"name":"fun MaterialInstance.setMetallicFactor(value: Float)","description":"io.github.sceneview.material.setMetallicFactor","location":"sceneview/io.github.sceneview.material/set-metallic-factor.html","searchKeys":["setMetallicFactor","fun MaterialInstance.setMetallicFactor(value: Float)","io.github.sceneview.material.setMetallicFactor"]},{"name":"fun MaterialInstance.setMetallicRoughnessIndex(value: Int)","description":"io.github.sceneview.material.setMetallicRoughnessIndex","location":"sceneview/io.github.sceneview.material/set-metallic-roughness-index.html","searchKeys":["setMetallicRoughnessIndex","fun MaterialInstance.setMetallicRoughnessIndex(value: Int)","io.github.sceneview.material.setMetallicRoughnessIndex"]},{"name":"fun MaterialInstance.setMetallicRoughnessMap(texture: Texture, sampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setMetallicRoughnessMap","location":"sceneview/io.github.sceneview.material/set-metallic-roughness-map.html","searchKeys":["setMetallicRoughnessMap","fun MaterialInstance.setMetallicRoughnessMap(texture: Texture, sampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setMetallicRoughnessMap"]},{"name":"fun MaterialInstance.setNormalIndex(value: Int)","description":"io.github.sceneview.material.setNormalIndex","location":"sceneview/io.github.sceneview.material/set-normal-index.html","searchKeys":["setNormalIndex","fun MaterialInstance.setNormalIndex(value: Int)","io.github.sceneview.material.setNormalIndex"]},{"name":"fun MaterialInstance.setNormalMap(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setNormalMap","location":"sceneview/io.github.sceneview.material/set-normal-map.html","searchKeys":["setNormalMap","fun MaterialInstance.setNormalMap(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setNormalMap"]},{"name":"fun MaterialInstance.setNormalScale(value: Float)","description":"io.github.sceneview.material.setNormalScale","location":"sceneview/io.github.sceneview.material/set-normal-scale.html","searchKeys":["setNormalScale","fun MaterialInstance.setNormalScale(value: Float)","io.github.sceneview.material.setNormalScale"]},{"name":"fun MaterialInstance.setOcclusionMap(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setOcclusionMap","location":"sceneview/io.github.sceneview.material/set-occlusion-map.html","searchKeys":["setOcclusionMap","fun MaterialInstance.setOcclusionMap(texture: Texture, textureSampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setOcclusionMap"]},{"name":"fun MaterialInstance.setParameter(name: String, value: Float2)","description":"io.github.sceneview.material.setParameter","location":"sceneview/io.github.sceneview.material/set-parameter.html","searchKeys":["setParameter","fun MaterialInstance.setParameter(name: String, value: Float2)","io.github.sceneview.material.setParameter"]},{"name":"fun MaterialInstance.setParameter(name: String, value: Float3)","description":"io.github.sceneview.material.setParameter","location":"sceneview/io.github.sceneview.material/set-parameter.html","searchKeys":["setParameter","fun MaterialInstance.setParameter(name: String, value: Float3)","io.github.sceneview.material.setParameter"]},{"name":"fun MaterialInstance.setParameter(name: String, value: Float4)","description":"io.github.sceneview.material.setParameter","location":"sceneview/io.github.sceneview.material/set-parameter.html","searchKeys":["setParameter","fun MaterialInstance.setParameter(name: String, value: Float4)","io.github.sceneview.material.setParameter"]},{"name":"fun MaterialInstance.setParameter(name: String, value: Mat4)","description":"io.github.sceneview.material.setParameter","location":"sceneview/io.github.sceneview.material/set-parameter.html","searchKeys":["setParameter","fun MaterialInstance.setParameter(name: String, value: Mat4)","io.github.sceneview.material.setParameter"]},{"name":"fun MaterialInstance.setReflectance(factor: Float)","description":"io.github.sceneview.material.setReflectance","location":"sceneview/io.github.sceneview.material/set-reflectance.html","searchKeys":["setReflectance","fun MaterialInstance.setReflectance(factor: Float)","io.github.sceneview.material.setReflectance"]},{"name":"fun MaterialInstance.setRoughness(factor: Float)","description":"io.github.sceneview.material.setRoughness","location":"sceneview/io.github.sceneview.material/set-roughness.html","searchKeys":["setRoughness","fun MaterialInstance.setRoughness(factor: Float)","io.github.sceneview.material.setRoughness"]},{"name":"fun MaterialInstance.setRoughnessFactor(value: Float)","description":"io.github.sceneview.material.setRoughnessFactor","location":"sceneview/io.github.sceneview.material/set-roughness-factor.html","searchKeys":["setRoughnessFactor","fun MaterialInstance.setRoughnessFactor(value: Float)","io.github.sceneview.material.setRoughnessFactor"]},{"name":"fun MaterialInstance.setTexture(name: String, texture: Texture, sampler: TextureSampler = TextureSampler2D())","description":"io.github.sceneview.material.setTexture","location":"sceneview/io.github.sceneview.material/set-texture.html","searchKeys":["setTexture","fun MaterialInstance.setTexture(name: String, texture: Texture, sampler: TextureSampler = TextureSampler2D())","io.github.sceneview.material.setTexture"]},{"name":"fun MaterialInstance.setTexture(texture: Texture)","description":"io.github.sceneview.material.setTexture","location":"sceneview/io.github.sceneview.material/set-texture.html","searchKeys":["setTexture","fun MaterialInstance.setTexture(texture: Texture)","io.github.sceneview.material.setTexture"]},{"name":"fun Model.getRenderableByName(name: String): Entity?","description":"io.github.sceneview.model.getRenderableByName","location":"sceneview/io.github.sceneview.model/get-renderable-by-name.html","searchKeys":["getRenderableByName","fun Model.getRenderableByName(name: String): Entity?","io.github.sceneview.model.getRenderableByName"]},{"name":"fun ModelInstance.attachSkin(target: Node, skinIndex: Int = 0)","description":"io.github.sceneview.model.attachSkin","location":"sceneview/io.github.sceneview.model/attach-skin.html","searchKeys":["attachSkin","fun ModelInstance.attachSkin(target: Node, skinIndex: Int = 0)","io.github.sceneview.model.attachSkin"]},{"name":"fun ModelInstance.detachSkin(target: Node, skinIndex: Int = 0)","description":"io.github.sceneview.model.detachSkin","location":"sceneview/io.github.sceneview.model/detach-skin.html","searchKeys":["detachSkin","fun ModelInstance.detachSkin(target: Node, skinIndex: Int = 0)","io.github.sceneview.model.detachSkin"]},{"name":"fun ModelInstance.setBlendOrder(blendOrder: Int)","description":"io.github.sceneview.model.setBlendOrder","location":"sceneview/io.github.sceneview.model/set-blend-order.html","searchKeys":["setBlendOrder","fun ModelInstance.setBlendOrder(blendOrder: Int)","io.github.sceneview.model.setBlendOrder"]},{"name":"fun ModelInstance.setCulling(enabled: Boolean)","description":"io.github.sceneview.model.setCulling","location":"sceneview/io.github.sceneview.model/set-culling.html","searchKeys":["setCulling","fun ModelInstance.setCulling(enabled: Boolean)","io.github.sceneview.model.setCulling"]},{"name":"fun ModelInstance.setGlobalBlendOrderEnabled(enabled: Boolean)","description":"io.github.sceneview.model.setGlobalBlendOrderEnabled","location":"sceneview/io.github.sceneview.model/set-global-blend-order-enabled.html","searchKeys":["setGlobalBlendOrderEnabled","fun ModelInstance.setGlobalBlendOrderEnabled(enabled: Boolean)","io.github.sceneview.model.setGlobalBlendOrderEnabled"]},{"name":"fun ModelInstance.setLayerMask(select: Int, value: Int)","description":"io.github.sceneview.model.setLayerMask","location":"sceneview/io.github.sceneview.model/set-layer-mask.html","searchKeys":["setLayerMask","fun ModelInstance.setLayerMask(select: Int, value: Int)","io.github.sceneview.model.setLayerMask"]},{"name":"fun ModelInstance.setMorphWeights(weights: FloatArray, offset: Int = weights.size)","description":"io.github.sceneview.model.setMorphWeights","location":"sceneview/io.github.sceneview.model/set-morph-weights.html","searchKeys":["setMorphWeights","fun ModelInstance.setMorphWeights(weights: FloatArray, offset: Int = weights.size)","io.github.sceneview.model.setMorphWeights"]},{"name":"fun ModelInstance.setPriority(priority: Int)","description":"io.github.sceneview.model.setPriority","location":"sceneview/io.github.sceneview.model/set-priority.html","searchKeys":["setPriority","fun ModelInstance.setPriority(priority: Int)","io.github.sceneview.model.setPriority"]},{"name":"fun ModelInstance.setScreenSpaceContactShadows(enabled: Boolean)","description":"io.github.sceneview.model.setScreenSpaceContactShadows","location":"sceneview/io.github.sceneview.model/set-screen-space-contact-shadows.html","searchKeys":["setScreenSpaceContactShadows","fun ModelInstance.setScreenSpaceContactShadows(enabled: Boolean)","io.github.sceneview.model.setScreenSpaceContactShadows"]},{"name":"fun Quaternion.toNewQuaternion(): Quaternion","description":"io.github.sceneview.math.toNewQuaternion","location":"sceneview/io.github.sceneview.math/to-new-quaternion.html","searchKeys":["toNewQuaternion","fun Quaternion.toNewQuaternion(): Quaternion","io.github.sceneview.math.toNewQuaternion"]},{"name":"fun Quaternion.toOldQuaternion(): Quaternion","description":"io.github.sceneview.math.toOldQuaternion","location":"sceneview/io.github.sceneview.math/to-old-quaternion.html","searchKeys":["toOldQuaternion","fun Quaternion.toOldQuaternion(): Quaternion","io.github.sceneview.math.toOldQuaternion"]},{"name":"fun Quaternion.toRotation(order: RotationsOrder = RotationsOrder.ZYX): Float3","description":"io.github.sceneview.math.toRotation","location":"sceneview/io.github.sceneview.math/to-rotation.html","searchKeys":["toRotation","fun Quaternion.toRotation(order: RotationsOrder = RotationsOrder.ZYX): Float3","io.github.sceneview.math.toRotation"]},{"name":"fun Ray.toCollisionRay(): Ray","description":"io.github.sceneview.math.toCollisionRay","location":"sceneview/io.github.sceneview.math/to-collision-ray.html","searchKeys":["toCollisionRay","fun Ray.toCollisionRay(): Ray","io.github.sceneview.math.toCollisionRay"]},{"name":"fun RenderableManager.Builder.build(engine: Engine): Int","description":"io.github.sceneview.managers.build","location":"sceneview/io.github.sceneview.managers/build.html","searchKeys":["build","fun RenderableManager.Builder.build(engine: Engine): Int","io.github.sceneview.managers.build"]},{"name":"fun RenderableManager.Builder.geometry(geometry: Geometry, offsets: List<IntRange> = geometry.primitivesOffsets): RenderableManager.Builder","description":"io.github.sceneview.geometries.geometry","location":"sceneview/io.github.sceneview.geometries/geometry.html","searchKeys":["geometry","fun RenderableManager.Builder.geometry(geometry: Geometry, offsets: List<IntRange> = geometry.primitivesOffsets): RenderableManager.Builder","io.github.sceneview.geometries.geometry"]},{"name":"fun RenderableManager.Builder.materials(materialInstances: List<MaterialInstance?>)","description":"io.github.sceneview.managers.materials","location":"sceneview/io.github.sceneview.managers/materials.html","searchKeys":["materials","fun RenderableManager.Builder.materials(materialInstances: List<MaterialInstance?>)","io.github.sceneview.managers.materials"]},{"name":"fun RenderableManager.safeDestroy(entity: Entity): Result<Unit>","description":"io.github.sceneview.managers.safeDestroy","location":"sceneview/io.github.sceneview.managers/safe-destroy.html","searchKeys":["safeDestroy","fun RenderableManager.safeDestroy(entity: Entity): Result<Unit>","io.github.sceneview.managers.safeDestroy"]},{"name":"fun RenderableManager.setGeometry(instance: EntityInstance, geometry: Geometry, offsets: List<IntRange> = geometry.primitivesOffsets)","description":"io.github.sceneview.geometries.setGeometry","location":"sceneview/io.github.sceneview.geometries/set-geometry.html","searchKeys":["setGeometry","fun RenderableManager.setGeometry(instance: EntityInstance, geometry: Geometry, offsets: List<IntRange> = geometry.primitivesOffsets)","io.github.sceneview.geometries.setGeometry"]},{"name":"fun Resources.readFileBuffer(rawResId: Int): ByteBuffer","description":"io.github.sceneview.utils.readFileBuffer","location":"sceneview/io.github.sceneview.utils/read-file-buffer.html","searchKeys":["readFileBuffer","fun Resources.readFileBuffer(rawResId: Int): ByteBuffer","io.github.sceneview.utils.readFileBuffer"]},{"name":"fun Rotation.toQuaternion(order: RotationsOrder = RotationsOrder.ZYX): Quaternion","description":"io.github.sceneview.math.toQuaternion","location":"sceneview/io.github.sceneview.math/to-quaternion.html","searchKeys":["toQuaternion","fun Rotation.toQuaternion(order: RotationsOrder = RotationsOrder.ZYX): Quaternion","io.github.sceneview.math.toQuaternion"]},{"name":"fun Scene(modifier: Modifier = Modifier, childNodes: List<Node> = listOf(), engine: Engine = rememberEngine(), modelLoader: ModelLoader = rememberModelLoader(engine), materialLoader: MaterialLoader = rememberMaterialLoader(engine), scene: Scene = rememberScene(engine), view: View = rememberView(engine), renderer: Renderer = rememberRenderer(engine), cameraNode: CameraNode = rememberCameraNode(engine), mainLightNode: LightNode? = rememberMainLightNode(engine), indirectLight: IndirectLight? = rememberIndirectLight(engine), skybox: Skybox? = rememberSkybox(engine), collisionSystem: CollisionSystem = rememberCollisionSystem(view), gestureDetector: GestureDetector = rememberHitTestGestureDetector(\n        LocalContext.current,\n        collisionSystem\n    ), onGestureListener: GestureDetector.OnGestureListener? = rememberOnGestureListener(), activity: ComponentActivity? = LocalContext.current as? ComponentActivity, lifecycle: Lifecycle = LocalLifecycleOwner.current.lifecycle, onFrame: (frameTimeNanos: Long) -> Unit? = null, onViewUpdated: SceneView.() -> Unit? = null, onViewCreated: SceneView.() -> Unit? = null)","description":"io.github.sceneview.Scene","location":"sceneview/io.github.sceneview/-scene.html","searchKeys":["Scene","fun Scene(modifier: Modifier = Modifier, childNodes: List<Node> = listOf(), engine: Engine = rememberEngine(), modelLoader: ModelLoader = rememberModelLoader(engine), materialLoader: MaterialLoader = rememberMaterialLoader(engine), scene: Scene = rememberScene(engine), view: View = rememberView(engine), renderer: Renderer = rememberRenderer(engine), cameraNode: CameraNode = rememberCameraNode(engine), mainLightNode: LightNode? = rememberMainLightNode(engine), indirectLight: IndirectLight? = rememberIndirectLight(engine), skybox: Skybox? = rememberSkybox(engine), collisionSystem: CollisionSystem = rememberCollisionSystem(view), gestureDetector: GestureDetector = rememberHitTestGestureDetector(\n        LocalContext.current,\n        collisionSystem\n    ), onGestureListener: GestureDetector.OnGestureListener? = rememberOnGestureListener(), activity: ComponentActivity? = LocalContext.current as? ComponentActivity, lifecycle: Lifecycle = LocalLifecycleOwner.current.lifecycle, onFrame: (frameTimeNanos: Long) -> Unit? = null, onViewUpdated: SceneView.() -> Unit? = null, onViewCreated: SceneView.() -> Unit? = null)","io.github.sceneview.Scene"]},{"name":"fun Texture.setBitmap(engine: Engine, assets: AssetManager, fileLocation: String, type: TextureType = ImageTexture.DEFAULT_TYPE, level: Int = 0)","description":"io.github.sceneview.texture.setBitmap","location":"sceneview/io.github.sceneview.texture/set-bitmap.html","searchKeys":["setBitmap","fun Texture.setBitmap(engine: Engine, assets: AssetManager, fileLocation: String, type: TextureType = ImageTexture.DEFAULT_TYPE, level: Int = 0)","io.github.sceneview.texture.setBitmap"]},{"name":"fun Texture.setBitmap(engine: Engine, bitmap: Bitmap, level: Int = 0)","description":"io.github.sceneview.texture.setBitmap","location":"sceneview/io.github.sceneview.texture/set-bitmap.html","searchKeys":["setBitmap","fun Texture.setBitmap(engine: Engine, bitmap: Bitmap, level: Int = 0)","io.github.sceneview.texture.setBitmap"]},{"name":"fun Texture.setBitmap(engine: Engine, context: Context, drawableResId: Int, type: TextureType = ImageTexture.DEFAULT_TYPE, level: Int = 0)","description":"io.github.sceneview.texture.setBitmap","location":"sceneview/io.github.sceneview.texture/set-bitmap.html","searchKeys":["setBitmap","fun Texture.setBitmap(engine: Engine, context: Context, drawableResId: Int, type: TextureType = ImageTexture.DEFAULT_TYPE, level: Int = 0)","io.github.sceneview.texture.setBitmap"]},{"name":"fun Texture.setStream(engine: Engine, bitmap: Bitmap)","description":"io.github.sceneview.texture.setStream","location":"sceneview/io.github.sceneview.texture/set-stream.html","searchKeys":["setStream","fun Texture.setStream(engine: Engine, bitmap: Bitmap)","io.github.sceneview.texture.setStream"]},{"name":"fun Transform(position: Position = Position(), quaternion: Quaternion = Quaternion(), scale: Scale = Scale(1.0f)): Mat4","description":"io.github.sceneview.math.Transform","location":"sceneview/io.github.sceneview.math/-transform.html","searchKeys":["Transform","fun Transform(position: Position = Position(), quaternion: Quaternion = Quaternion(), scale: Scale = Scale(1.0f)): Mat4","io.github.sceneview.math.Transform"]},{"name":"fun Transform(position: Position = Position(), rotation: Rotation, scale: Scale = Scale(1.0F)): Mat4","description":"io.github.sceneview.math.Transform","location":"sceneview/io.github.sceneview.math/-transform.html","searchKeys":["Transform","fun Transform(position: Position = Position(), rotation: Rotation, scale: Scale = Scale(1.0F)): Mat4","io.github.sceneview.math.Transform"]},{"name":"fun TransformManager.getAllChildren(transformInstance: Int): List<Int>","description":"io.github.sceneview.managers.getAllChildren","location":"sceneview/io.github.sceneview.managers/get-all-children.html","searchKeys":["getAllChildren","fun TransformManager.getAllChildren(transformInstance: Int): List<Int>","io.github.sceneview.managers.getAllChildren"]},{"name":"fun TransformManager.getChildren(transformInstance: Int): List<Int>","description":"io.github.sceneview.managers.getChildren","location":"sceneview/io.github.sceneview.managers/get-children.html","searchKeys":["getChildren","fun TransformManager.getChildren(transformInstance: Int): List<Int>","io.github.sceneview.managers.getChildren"]},{"name":"fun TransformManager.getParentOrNull(transformInstance: Int): Int?","description":"io.github.sceneview.managers.getParentOrNull","location":"sceneview/io.github.sceneview.managers/get-parent-or-null.html","searchKeys":["getParentOrNull","fun TransformManager.getParentOrNull(transformInstance: Int): Int?","io.github.sceneview.managers.getParentOrNull"]},{"name":"fun TransformManager.getTransform(transformInstance: Int): Mat4","description":"io.github.sceneview.managers.getTransform","location":"sceneview/io.github.sceneview.managers/get-transform.html","searchKeys":["getTransform","fun TransformManager.getTransform(transformInstance: Int): Mat4","io.github.sceneview.managers.getTransform"]},{"name":"fun TransformManager.getWorldTransform(transformInstance: Int): Mat4","description":"io.github.sceneview.managers.getWorldTransform","location":"sceneview/io.github.sceneview.managers/get-world-transform.html","searchKeys":["getWorldTransform","fun TransformManager.getWorldTransform(transformInstance: Int): Mat4","io.github.sceneview.managers.getWorldTransform"]},{"name":"fun TransformManager.setParent(transformInstance: Int, newParent: Int?)","description":"io.github.sceneview.managers.setParent","location":"sceneview/io.github.sceneview.managers/set-parent.html","searchKeys":["setParent","fun TransformManager.setParent(transformInstance: Int, newParent: Int?)","io.github.sceneview.managers.setParent"]},{"name":"fun TransformManager.setTransform(transformInstance: Int, localTransform: Transform)","description":"io.github.sceneview.managers.setTransform","location":"sceneview/io.github.sceneview.managers/set-transform.html","searchKeys":["setTransform","fun TransformManager.setTransform(transformInstance: Int, localTransform: Transform)","io.github.sceneview.managers.setTransform"]},{"name":"fun Vector3.toFloat3(): Float3","description":"io.github.sceneview.math.toFloat3","location":"sceneview/io.github.sceneview.math/to-float3.html","searchKeys":["toFloat3","fun Vector3.toFloat3(): Float3","io.github.sceneview.math.toFloat3"]},{"name":"fun VertexBuffer.setVertices(engine: Engine, vertices: List<Geometry.Vertex>): Box","description":"io.github.sceneview.geometries.setVertices","location":"sceneview/io.github.sceneview.geometries/set-vertices.html","searchKeys":["setVertices","fun VertexBuffer.setVertices(engine: Engine, vertices: List<Geometry.Vertex>): Box","io.github.sceneview.geometries.setVertices"]},{"name":"fun View.motionEventToRay(motionEvent: MotionEvent): Ray","description":"io.github.sceneview.utils.motionEventToRay","location":"sceneview/io.github.sceneview.utils/motion-event-to-ray.html","searchKeys":["motionEventToRay","fun View.motionEventToRay(motionEvent: MotionEvent): Ray","io.github.sceneview.utils.motionEventToRay"]},{"name":"fun View.motionEventToWorld(motionEvent: MotionEvent): Position","description":"io.github.sceneview.utils.motionEventToWorld","location":"sceneview/io.github.sceneview.utils/motion-event-to-world.html","searchKeys":["motionEventToWorld","fun View.motionEventToWorld(motionEvent: MotionEvent): Position","io.github.sceneview.utils.motionEventToWorld"]},{"name":"fun View.pick(xPx: Float, yPx: Float, handler: Any = Looper.getMainLooper(), onCompleted: (Entity, depth: Float, fragCoords: Float3) -> Unit)","description":"io.github.sceneview.utils.pick","location":"sceneview/io.github.sceneview.utils/pick.html","searchKeys":["pick","fun View.pick(xPx: Float, yPx: Float, handler: Any = Looper.getMainLooper(), onCompleted: (Entity, depth: Float, fragCoords: Float3) -> Unit)","io.github.sceneview.utils.pick"]},{"name":"fun View.pickNode(motionEvent: MotionEvent, nodes: List<Node>, handler: Any = Looper.getMainLooper(), onCompleted: (node: Node?, depth: Float, fragCoords: Float3) -> Unit)","description":"io.github.sceneview.utils.pickNode","location":"sceneview/io.github.sceneview.utils/pick-node.html","searchKeys":["pickNode","fun View.pickNode(motionEvent: MotionEvent, nodes: List<Node>, handler: Any = Looper.getMainLooper(), onCompleted: (node: Node?, depth: Float, fragCoords: Float3) -> Unit)","io.github.sceneview.utils.pickNode"]},{"name":"fun View.pickNode(viewPosition: Float2, nodes: List<Node>, handler: Any = Looper.getMainLooper(), onCompleted: (node: Node?, depth: Float, fragCoords: Float3) -> Unit)","description":"io.github.sceneview.utils.pickNode","location":"sceneview/io.github.sceneview.utils/pick-node.html","searchKeys":["pickNode","fun View.pickNode(viewPosition: Float2, nodes: List<Node>, handler: Any = Looper.getMainLooper(), onCompleted: (node: Node?, depth: Float, fragCoords: Float3) -> Unit)","io.github.sceneview.utils.pickNode"]},{"name":"fun View.pickNode(xPx: Float, yPx: Float, nodes: List<Node>, handler: Any = Looper.getMainLooper(), onCompleted: (node: Node?, depth: Float, fragCoords: Float3) -> Unit)","description":"io.github.sceneview.utils.pickNode","location":"sceneview/io.github.sceneview.utils/pick-node.html","searchKeys":["pickNode","fun View.pickNode(xPx: Float, yPx: Float, nodes: List<Node>, handler: Any = Looper.getMainLooper(), onCompleted: (node: Node?, depth: Float, fragCoords: Float3) -> Unit)","io.github.sceneview.utils.pickNode"]},{"name":"fun View.screenToRay(xPx: Float, yPx: Float): Ray","description":"io.github.sceneview.utils.screenToRay","location":"sceneview/io.github.sceneview.utils/screen-to-ray.html","searchKeys":["screenToRay","fun View.screenToRay(xPx: Float, yPx: Float): Ray","io.github.sceneview.utils.screenToRay"]},{"name":"fun View.screenToWorld(xPx: Float, yPx: Float, z: Float = 1.0f): Position","description":"io.github.sceneview.utils.screenToWorld","location":"sceneview/io.github.sceneview.utils/screen-to-world.html","searchKeys":["screenToWorld","fun View.screenToWorld(xPx: Float, yPx: Float, z: Float = 1.0f): Position","io.github.sceneview.utils.screenToWorld"]},{"name":"fun View.worldToScreen(worldPosition: Position): Float2","description":"io.github.sceneview.utils.worldToScreen","location":"sceneview/io.github.sceneview.utils/world-to-screen.html","searchKeys":["worldToScreen","fun View.worldToScreen(worldPosition: Position): Float2","io.github.sceneview.utils.worldToScreen"]},{"name":"fun addChildNode(child: Node): Node","description":"io.github.sceneview.node.Node.addChildNode","location":"sceneview/io.github.sceneview.node/-node/add-child-node.html","searchKeys":["addChildNode","fun addChildNode(child: Node): Node","io.github.sceneview.node.Node.addChildNode"]},{"name":"fun addChildNode(node: Node)","description":"io.github.sceneview.SceneView.addChildNode","location":"sceneview/io.github.sceneview/-scene-view/add-child-node.html","searchKeys":["addChildNode","fun addChildNode(node: Node)","io.github.sceneview.SceneView.addChildNode"]},{"name":"fun addCollider(collider: Collider)","description":"io.github.sceneview.collision.CollisionSystem.addCollider","location":"sceneview/io.github.sceneview.collision/-collision-system/add-collider.html","searchKeys":["addCollider","fun addCollider(collider: Collider)","io.github.sceneview.collision.CollisionSystem.addCollider"]},{"name":"fun addEntities(entities: List<Entity>)","description":"io.github.sceneview.SceneView.addEntities","location":"sceneview/io.github.sceneview/-scene-view/add-entities.html","searchKeys":["addEntities","fun addEntities(entities: List<Entity>)","io.github.sceneview.SceneView.addEntities"]},{"name":"fun addEntity(entity: Entity)","description":"io.github.sceneview.SceneView.addEntity","location":"sceneview/io.github.sceneview/-scene-view/add-entity.html","searchKeys":["addEntity","fun addEntity(entity: Entity)","io.github.sceneview.SceneView.addEntity"]},{"name":"fun animatePositions(vararg positions: Position): ObjectAnimator","description":"io.github.sceneview.node.Node.animatePositions","location":"sceneview/io.github.sceneview.node/-node/animate-positions.html","searchKeys":["animatePositions","fun animatePositions(vararg positions: Position): ObjectAnimator","io.github.sceneview.node.Node.animatePositions"]},{"name":"fun animateQuaternions(vararg quaternions: Quaternion): ObjectAnimator","description":"io.github.sceneview.node.Node.animateQuaternions","location":"sceneview/io.github.sceneview.node/-node/animate-quaternions.html","searchKeys":["animateQuaternions","fun animateQuaternions(vararg quaternions: Quaternion): ObjectAnimator","io.github.sceneview.node.Node.animateQuaternions"]},{"name":"fun animateRotations(vararg rotations: Rotation): ObjectAnimator","description":"io.github.sceneview.node.Node.animateRotations","location":"sceneview/io.github.sceneview.node/-node/animate-rotations.html","searchKeys":["animateRotations","fun animateRotations(vararg rotations: Rotation): ObjectAnimator","io.github.sceneview.node.Node.animateRotations"]},{"name":"fun animateScales(vararg scales: Scale): ObjectAnimator","description":"io.github.sceneview.node.Node.animateScales","location":"sceneview/io.github.sceneview.node/-node/animate-scales.html","searchKeys":["animateScales","fun animateScales(vararg scales: Scale): ObjectAnimator","io.github.sceneview.node.Node.animateScales"]},{"name":"fun animateTransforms(vararg transforms: Transform): AnimatorSet","description":"io.github.sceneview.node.Node.animateTransforms","location":"sceneview/io.github.sceneview.node/-node/animate-transforms.html","searchKeys":["animateTransforms","fun animateTransforms(vararg transforms: Transform): AnimatorSet","io.github.sceneview.node.Node.animateTransforms"]},{"name":"fun attachSkin(target: Node, skinIndex: Int = 0)","description":"io.github.sceneview.node.ModelNode.attachSkin","location":"sceneview/io.github.sceneview.node/-model-node/attach-skin.html","searchKeys":["attachSkin","fun attachSkin(target: Node, skinIndex: Int = 0)","io.github.sceneview.node.ModelNode.attachSkin"]},{"name":"fun bitmap(assets: AssetManager, fileLocation: String, type: TextureType = DEFAULT_TYPE): ImageTexture.Builder","description":"io.github.sceneview.texture.ImageTexture.Builder.bitmap","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/bitmap.html","searchKeys":["bitmap","fun bitmap(assets: AssetManager, fileLocation: String, type: TextureType = DEFAULT_TYPE): ImageTexture.Builder","io.github.sceneview.texture.ImageTexture.Builder.bitmap"]},{"name":"fun bitmap(bitmap: Bitmap, type: TextureType = DEFAULT_TYPE): ImageTexture.Builder","description":"io.github.sceneview.texture.ImageTexture.Builder.bitmap","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/bitmap.html","searchKeys":["bitmap","fun bitmap(bitmap: Bitmap, type: TextureType = DEFAULT_TYPE): ImageTexture.Builder","io.github.sceneview.texture.ImageTexture.Builder.bitmap"]},{"name":"fun bitmap(context: Context, drawableResId: Int, type: TextureType = DEFAULT_TYPE): ImageTexture.Builder","description":"io.github.sceneview.texture.ImageTexture.Builder.bitmap","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/bitmap.html","searchKeys":["bitmap","fun bitmap(context: Context, drawableResId: Int, type: TextureType = DEFAULT_TYPE): ImageTexture.Builder","io.github.sceneview.texture.ImageTexture.Builder.bitmap"]},{"name":"fun boundary(positions: List<Position>, normal: Direction? = DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = DEFAULT_UV_COORDINATE, color: Color? = null): Polygon.Builder","description":"io.github.sceneview.geometries.Polygon.Builder.boundary","location":"sceneview/io.github.sceneview.geometries/-polygon/-builder/boundary.html","searchKeys":["boundary","fun boundary(positions: List<Position>, normal: Direction? = DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = DEFAULT_UV_COORDINATE, color: Color? = null): Polygon.Builder","io.github.sceneview.geometries.Polygon.Builder.boundary"]},{"name":"fun boundary(vertices: List<Geometry.Vertex>): Polygon.Builder","description":"io.github.sceneview.geometries.Polygon.Builder.boundary","location":"sceneview/io.github.sceneview.geometries/-polygon/-builder/boundary.html","searchKeys":["boundary","fun boundary(vertices: List<Geometry.Vertex>): Polygon.Builder","io.github.sceneview.geometries.Polygon.Builder.boundary"]},{"name":"fun center(center: Position): Cube.Builder","description":"io.github.sceneview.geometries.Cube.Builder.center","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/center.html","searchKeys":["center","fun center(center: Position): Cube.Builder","io.github.sceneview.geometries.Cube.Builder.center"]},{"name":"fun center(center: Position): Cylinder.Builder","description":"io.github.sceneview.geometries.Cylinder.Builder.center","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/center.html","searchKeys":["center","fun center(center: Position): Cylinder.Builder","io.github.sceneview.geometries.Cylinder.Builder.center"]},{"name":"fun center(center: Position): Plane.Builder","description":"io.github.sceneview.geometries.Plane.Builder.center","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/center.html","searchKeys":["center","fun center(center: Position): Plane.Builder","io.github.sceneview.geometries.Plane.Builder.center"]},{"name":"fun center(center: Position): Sphere.Builder","description":"io.github.sceneview.geometries.Sphere.Builder.center","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/center.html","searchKeys":["center","fun center(center: Position): Sphere.Builder","io.github.sceneview.geometries.Sphere.Builder.center"]},{"name":"fun centerOrigin(origin: Position = Position(x = 0.0f, y = 0.0f, z = 0.0f))","description":"io.github.sceneview.node.ModelNode.centerOrigin","location":"sceneview/io.github.sceneview.node/-model-node/center-origin.html","searchKeys":["centerOrigin","fun centerOrigin(origin: Position = Position(x = 0.0f, y = 0.0f, z = 0.0f))","io.github.sceneview.node.ModelNode.centerOrigin"]},{"name":"fun colorOf(color: Color): Float4","description":"io.github.sceneview.math.colorOf","location":"sceneview/io.github.sceneview.math/color-of.html","searchKeys":["colorOf","fun colorOf(color: Color): Float4","io.github.sceneview.math.colorOf"]},{"name":"fun colorOf(color: Int): Float4","description":"io.github.sceneview.math.colorOf","location":"sceneview/io.github.sceneview.math/color-of.html","searchKeys":["colorOf","fun colorOf(color: Int): Float4","io.github.sceneview.math.colorOf"]},{"name":"fun colorOf(r: Float = 0.0f, g: Float = 0.0f, b: Float = 0.0f, a: Float = 1.0f): Float4","description":"io.github.sceneview.math.colorOf","location":"sceneview/io.github.sceneview.math/color-of.html","searchKeys":["colorOf","fun colorOf(r: Float = 0.0f, g: Float = 0.0f, b: Float = 0.0f, a: Float = 1.0f): Float4","io.github.sceneview.math.colorOf"]},{"name":"fun colorOf(rgb: Float = 0.0f, a: Float = 1.0f): Float4","description":"io.github.sceneview.math.colorOf","location":"sceneview/io.github.sceneview.math/color-of.html","searchKeys":["colorOf","fun colorOf(rgb: Float = 0.0f, a: Float = 1.0f): Float4","io.github.sceneview.math.colorOf"]},{"name":"fun createCameraNode(engine: Engine): CameraNode","description":"io.github.sceneview.SceneView.Companion.createCameraNode","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-camera-node.html","searchKeys":["createCameraNode","fun createCameraNode(engine: Engine): CameraNode","io.github.sceneview.SceneView.Companion.createCameraNode"]},{"name":"fun createCollisionSystem(view: View): CollisionSystem","description":"io.github.sceneview.SceneView.Companion.createCollisionSystem","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-collision-system.html","searchKeys":["createCollisionSystem","fun createCollisionSystem(view: View): CollisionSystem","io.github.sceneview.SceneView.Companion.createCollisionSystem"]},{"name":"fun createColorInstance(color: Color, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createColorInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-color-instance.html","searchKeys":["createColorInstance","fun createColorInstance(color: Color, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createColorInstance"]},{"name":"fun createColorInstance(color: Color, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createColorInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-color-instance.html","searchKeys":["createColorInstance","fun createColorInstance(color: Color, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createColorInstance"]},{"name":"fun createColorInstance(color: Int, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createColorInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-color-instance.html","searchKeys":["createColorInstance","fun createColorInstance(color: Int, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createColorInstance"]},{"name":"fun createEglContext(): EGLContext","description":"io.github.sceneview.SceneView.Companion.createEglContext","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-egl-context.html","searchKeys":["createEglContext","fun createEglContext(): EGLContext","io.github.sceneview.SceneView.Companion.createEglContext"]},{"name":"fun createEglContext(): EGLContext","description":"io.github.sceneview.utils.OpenGL.createEglContext","location":"sceneview/io.github.sceneview.utils/-open-g-l/create-egl-context.html","searchKeys":["createEglContext","fun createEglContext(): EGLContext","io.github.sceneview.utils.OpenGL.createEglContext"]},{"name":"fun createEglContext(shareContext: EGLContext?): EGLContext?","description":"io.github.sceneview.utils.OpenGL.createEglContext","location":"sceneview/io.github.sceneview.utils/-open-g-l/create-egl-context.html","searchKeys":["createEglContext","fun createEglContext(shareContext: EGLContext?): EGLContext?","io.github.sceneview.utils.OpenGL.createEglContext"]},{"name":"fun createEngine(eglContext: EGLContext): Engine","description":"io.github.sceneview.SceneView.Companion.createEngine","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-engine.html","searchKeys":["createEngine","fun createEngine(eglContext: EGLContext): Engine","io.github.sceneview.SceneView.Companion.createEngine"]},{"name":"fun createExternalTextureId(): Int","description":"io.github.sceneview.utils.OpenGL.createExternalTextureId","location":"sceneview/io.github.sceneview.utils/-open-g-l/create-external-texture-id.html","searchKeys":["createExternalTextureId","fun createExternalTextureId(): Int","io.github.sceneview.utils.OpenGL.createExternalTextureId"]},{"name":"fun createImageInstance(imageTexture: Texture): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createImageInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-image-instance.html","searchKeys":["createImageInstance","fun createImageInstance(imageTexture: Texture): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createImageInstance"]},{"name":"fun createIndirectLight(engine: Engine): IndirectLight?","description":"io.github.sceneview.SceneView.Companion.createIndirectLight","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-indirect-light.html","searchKeys":["createIndirectLight","fun createIndirectLight(engine: Engine): IndirectLight?","io.github.sceneview.SceneView.Companion.createIndirectLight"]},{"name":"fun createInstance(material: Material): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-instance.html","searchKeys":["createInstance","fun createInstance(material: Material): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createInstance"]},{"name":"fun createInstance(model: Model): ModelInstance?","description":"io.github.sceneview.loaders.ModelLoader.createInstance","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-instance.html","searchKeys":["createInstance","fun createInstance(model: Model): ModelInstance?","io.github.sceneview.loaders.ModelLoader.createInstance"]},{"name":"fun createInstancedModel(assetFileLocation: String, count: Int, resourceResolver: (resourceFileName: String) -> Buffer? = {\n            context.assets.readFileBuffer(getFolderPath(assetFileLocation, it))\n        }): List<ModelInstance>","description":"io.github.sceneview.loaders.ModelLoader.createInstancedModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-instanced-model.html","searchKeys":["createInstancedModel","fun createInstancedModel(assetFileLocation: String, count: Int, resourceResolver: (resourceFileName: String) -> Buffer? = {\n            context.assets.readFileBuffer(getFolderPath(assetFileLocation, it))\n        }): List<ModelInstance>","io.github.sceneview.loaders.ModelLoader.createInstancedModel"]},{"name":"fun createInstancedModel(buffer: Buffer, count: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): List<ModelInstance>","description":"io.github.sceneview.loaders.ModelLoader.createInstancedModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-instanced-model.html","searchKeys":["createInstancedModel","fun createInstancedModel(buffer: Buffer, count: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): List<ModelInstance>","io.github.sceneview.loaders.ModelLoader.createInstancedModel"]},{"name":"fun createInstancedModel(rawResId: Int, count: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): List<ModelInstance>","description":"io.github.sceneview.loaders.ModelLoader.createInstancedModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-instanced-model.html","searchKeys":["createInstancedModel","fun createInstancedModel(rawResId: Int, count: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): List<ModelInstance>","io.github.sceneview.loaders.ModelLoader.createInstancedModel"]},{"name":"fun createMainLightNode(engine: Engine): LightNode","description":"io.github.sceneview.SceneView.Companion.createMainLightNode","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-main-light-node.html","searchKeys":["createMainLightNode","fun createMainLightNode(engine: Engine): LightNode","io.github.sceneview.SceneView.Companion.createMainLightNode"]},{"name":"fun createMaterial(assetFileLocation: String): Material","description":"io.github.sceneview.loaders.MaterialLoader.createMaterial","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-material.html","searchKeys":["createMaterial","fun createMaterial(assetFileLocation: String): Material","io.github.sceneview.loaders.MaterialLoader.createMaterial"]},{"name":"fun createMaterial(payload: Buffer): Material","description":"io.github.sceneview.loaders.MaterialLoader.createMaterial","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-material.html","searchKeys":["createMaterial","fun createMaterial(payload: Buffer): Material","io.github.sceneview.loaders.MaterialLoader.createMaterial"]},{"name":"fun createMaterialLoader(engine: Engine, context: Context): MaterialLoader","description":"io.github.sceneview.SceneView.Companion.createMaterialLoader","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-material-loader.html","searchKeys":["createMaterialLoader","fun createMaterialLoader(engine: Engine, context: Context): MaterialLoader","io.github.sceneview.SceneView.Companion.createMaterialLoader"]},{"name":"fun createModel(assetFileLocation: String, resourceResolver: (resourceFileName: String) -> Buffer? = {\n            context.assets.readFileBuffer(getFolderPath(assetFileLocation, it))\n        }): Model","description":"io.github.sceneview.loaders.ModelLoader.createModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-model.html","searchKeys":["createModel","fun createModel(assetFileLocation: String, resourceResolver: (resourceFileName: String) -> Buffer? = {\n            context.assets.readFileBuffer(getFolderPath(assetFileLocation, it))\n        }): Model","io.github.sceneview.loaders.ModelLoader.createModel"]},{"name":"fun createModel(buffer: Buffer, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): Model","description":"io.github.sceneview.loaders.ModelLoader.createModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-model.html","searchKeys":["createModel","fun createModel(buffer: Buffer, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): Model","io.github.sceneview.loaders.ModelLoader.createModel"]},{"name":"fun createModel(rawResId: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): Model","description":"io.github.sceneview.loaders.ModelLoader.createModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-model.html","searchKeys":["createModel","fun createModel(rawResId: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): Model","io.github.sceneview.loaders.ModelLoader.createModel"]},{"name":"fun createModelInstance(assetFileLocation: String, resourceResolver: (resourceFileName: String) -> Buffer? = {\n            context.assets.readFileBuffer(getFolderPath(assetFileLocation, it))\n        }): ModelInstance","description":"io.github.sceneview.loaders.ModelLoader.createModelInstance","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-model-instance.html","searchKeys":["createModelInstance","fun createModelInstance(assetFileLocation: String, resourceResolver: (resourceFileName: String) -> Buffer? = {\n            context.assets.readFileBuffer(getFolderPath(assetFileLocation, it))\n        }): ModelInstance","io.github.sceneview.loaders.ModelLoader.createModelInstance"]},{"name":"fun createModelInstance(buffer: Buffer, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): ModelInstance","description":"io.github.sceneview.loaders.ModelLoader.createModelInstance","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-model-instance.html","searchKeys":["createModelInstance","fun createModelInstance(buffer: Buffer, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): ModelInstance","io.github.sceneview.loaders.ModelLoader.createModelInstance"]},{"name":"fun createModelInstance(rawResId: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): ModelInstance","description":"io.github.sceneview.loaders.ModelLoader.createModelInstance","location":"sceneview/io.github.sceneview.loaders/-model-loader/create-model-instance.html","searchKeys":["createModelInstance","fun createModelInstance(rawResId: Int, resourceResolver: (resourceFileName: String) -> Buffer? = { null }): ModelInstance","io.github.sceneview.loaders.ModelLoader.createModelInstance"]},{"name":"fun createModelLoader(engine: Engine, context: Context): ModelLoader","description":"io.github.sceneview.SceneView.Companion.createModelLoader","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-model-loader.html","searchKeys":["createModelLoader","fun createModelLoader(engine: Engine, context: Context): ModelLoader","io.github.sceneview.SceneView.Companion.createModelLoader"]},{"name":"fun createRenderer(engine: Engine): Renderer","description":"io.github.sceneview.SceneView.Companion.createRenderer","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-renderer.html","searchKeys":["createRenderer","fun createRenderer(engine: Engine): Renderer","io.github.sceneview.SceneView.Companion.createRenderer"]},{"name":"fun createScene(engine: Engine): Scene","description":"io.github.sceneview.SceneView.Companion.createScene","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-scene.html","searchKeys":["createScene","fun createScene(engine: Engine): Scene","io.github.sceneview.SceneView.Companion.createScene"]},{"name":"fun createSkybox(engine: Engine): Skybox","description":"io.github.sceneview.SceneView.Companion.createSkybox","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-skybox.html","searchKeys":["createSkybox","fun createSkybox(engine: Engine): Skybox","io.github.sceneview.SceneView.Companion.createSkybox"]},{"name":"fun createTextureInstance(texture: Texture, isOpaque: Boolean = true, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createTextureInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-texture-instance.html","searchKeys":["createTextureInstance","fun createTextureInstance(texture: Texture, isOpaque: Boolean = true, metallic: Float = kMaterialDefaultMetallic, roughness: Float = kMaterialDefaultRoughness, reflectance: Float = kMaterialDefaultReflectance): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createTextureInstance"]},{"name":"fun createVideoInstance(videoTexture: Texture, chromaKeyColor: Int? = null): MaterialInstance","description":"io.github.sceneview.loaders.MaterialLoader.createVideoInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/create-video-instance.html","searchKeys":["createVideoInstance","fun createVideoInstance(videoTexture: Texture, chromaKeyColor: Int? = null): MaterialInstance","io.github.sceneview.loaders.MaterialLoader.createVideoInstance"]},{"name":"fun createView(engine: Engine): View","description":"io.github.sceneview.SceneView.Companion.createView","location":"sceneview/io.github.sceneview/-scene-view/-companion/create-view.html","searchKeys":["createView","fun createView(engine: Engine): View","io.github.sceneview.SceneView.Companion.createView"]},{"name":"fun destroy()","description":"io.github.sceneview.collision.CollisionSystem.destroy","location":"sceneview/io.github.sceneview.collision/-collision-system/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.collision.CollisionSystem.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.environment.IBLPrefilter.destroy","location":"sceneview/io.github.sceneview.environment/-i-b-l-prefilter/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.environment.IBLPrefilter.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.geometries.Geometry.destroy","location":"sceneview/io.github.sceneview.geometries/-geometry/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.geometries.Geometry.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.loaders.MaterialLoader.destroy","location":"sceneview/io.github.sceneview.loaders/-material-loader/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.loaders.MaterialLoader.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.loaders.ModelLoader.destroy","location":"sceneview/io.github.sceneview.loaders/-model-loader/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.loaders.ModelLoader.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.material.VideoMaterial.destroy","location":"sceneview/io.github.sceneview.material/-video-material/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.material.VideoMaterial.destroy"]},{"name":"fun destroyEglContext(context: EGLContext?)","description":"io.github.sceneview.utils.OpenGL.destroyEglContext","location":"sceneview/io.github.sceneview.utils/-open-g-l/destroy-egl-context.html","searchKeys":["destroyEglContext","fun destroyEglContext(context: EGLContext?)","io.github.sceneview.utils.OpenGL.destroyEglContext"]},{"name":"fun destroyMaterial(material: Material)","description":"io.github.sceneview.loaders.MaterialLoader.destroyMaterial","location":"sceneview/io.github.sceneview.loaders/-material-loader/destroy-material.html","searchKeys":["destroyMaterial","fun destroyMaterial(material: Material)","io.github.sceneview.loaders.MaterialLoader.destroyMaterial"]},{"name":"fun destroyMaterialInstance(materialInstance: MaterialInstance)","description":"io.github.sceneview.loaders.MaterialLoader.destroyMaterialInstance","location":"sceneview/io.github.sceneview.loaders/-material-loader/destroy-material-instance.html","searchKeys":["destroyMaterialInstance","fun destroyMaterialInstance(materialInstance: MaterialInstance)","io.github.sceneview.loaders.MaterialLoader.destroyMaterialInstance"]},{"name":"fun destroyModel(model: Model)","description":"io.github.sceneview.loaders.ModelLoader.destroyModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/destroy-model.html","searchKeys":["destroyModel","fun destroyModel(model: Model)","io.github.sceneview.loaders.ModelLoader.destroyModel"]},{"name":"fun detachSkin(target: Node, skinIndex: Int = 0)","description":"io.github.sceneview.node.ModelNode.detachSkin","location":"sceneview/io.github.sceneview.node/-model-node/detach-skin.html","searchKeys":["detachSkin","fun detachSkin(target: Node, skinIndex: Int = 0)","io.github.sceneview.node.ModelNode.detachSkin"]},{"name":"fun equirectangularToCubemap(equirect: Texture): Texture","description":"io.github.sceneview.environment.IBLPrefilter.equirectangularToCubemap","location":"sceneview/io.github.sceneview.environment/-i-b-l-prefilter/equirectangular-to-cubemap.html","searchKeys":["equirectangularToCubemap","fun equirectangularToCubemap(equirect: Texture): Texture","io.github.sceneview.environment.IBLPrefilter.equirectangularToCubemap"]},{"name":"fun getBitmap(assets: AssetManager, fileLocation: String, type: TextureType = DEFAULT_TYPE): Bitmap","description":"io.github.sceneview.texture.ImageTexture.Companion.getBitmap","location":"sceneview/io.github.sceneview.texture/-image-texture/-companion/get-bitmap.html","searchKeys":["getBitmap","fun getBitmap(assets: AssetManager, fileLocation: String, type: TextureType = DEFAULT_TYPE): Bitmap","io.github.sceneview.texture.ImageTexture.Companion.getBitmap"]},{"name":"fun getBitmap(context: Context, drawableResId: Int, type: TextureType = DEFAULT_TYPE): Bitmap","description":"io.github.sceneview.texture.ImageTexture.Companion.getBitmap","location":"sceneview/io.github.sceneview.texture/-image-texture/-companion/get-bitmap.html","searchKeys":["getBitmap","fun getBitmap(context: Context, drawableResId: Int, type: TextureType = DEFAULT_TYPE): Bitmap","io.github.sceneview.texture.ImageTexture.Companion.getBitmap"]},{"name":"fun getFolderPath(baseFileName: String, resourceFileName: String): String","description":"io.github.sceneview.loaders.ModelLoader.Companion.getFolderPath","location":"sceneview/io.github.sceneview.loaders/-model-loader/-companion/get-folder-path.html","searchKeys":["getFolderPath","fun getFolderPath(baseFileName: String, resourceFileName: String): String","io.github.sceneview.loaders.ModelLoader.Companion.getFolderPath"]},{"name":"fun getIndices(sideCount: Int): List<Geometry.PrimitiveIndices>","description":"io.github.sceneview.geometries.Cylinder.Companion.getIndices","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/get-indices.html","searchKeys":["getIndices","fun getIndices(sideCount: Int): List<Geometry.PrimitiveIndices>","io.github.sceneview.geometries.Cylinder.Companion.getIndices"]},{"name":"fun getIndices(stacks: Int, slices: Int): List<Geometry.PrimitiveIndices>","description":"io.github.sceneview.geometries.Sphere.Companion.getIndices","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/get-indices.html","searchKeys":["getIndices","fun getIndices(stacks: Int, slices: Int): List<Geometry.PrimitiveIndices>","io.github.sceneview.geometries.Sphere.Companion.getIndices"]},{"name":"fun getIndices(vertices: List<Geometry.Vertex>): List<Geometry.PrimitiveIndices>","description":"io.github.sceneview.geometries.Polygon.Companion.getIndices","location":"sceneview/io.github.sceneview.geometries/-polygon/-companion/get-indices.html","searchKeys":["getIndices","fun getIndices(vertices: List<Geometry.Vertex>): List<Geometry.PrimitiveIndices>","io.github.sceneview.geometries.Polygon.Companion.getIndices"]},{"name":"fun getLocalPosition(worldPosition: Position): Float3","description":"io.github.sceneview.node.Node.getLocalPosition","location":"sceneview/io.github.sceneview.node/-node/get-local-position.html","searchKeys":["getLocalPosition","fun getLocalPosition(worldPosition: Position): Float3","io.github.sceneview.node.Node.getLocalPosition"]},{"name":"fun getLocalQuaternion(worldQuaternion: Quaternion): Quaternion","description":"io.github.sceneview.node.Node.getLocalQuaternion","location":"sceneview/io.github.sceneview.node/-node/get-local-quaternion.html","searchKeys":["getLocalQuaternion","fun getLocalQuaternion(worldQuaternion: Quaternion): Quaternion","io.github.sceneview.node.Node.getLocalQuaternion"]},{"name":"fun getLocalRotation(worldRotation: Rotation): Float3","description":"io.github.sceneview.node.Node.getLocalRotation","location":"sceneview/io.github.sceneview.node/-node/get-local-rotation.html","searchKeys":["getLocalRotation","fun getLocalRotation(worldRotation: Rotation): Float3","io.github.sceneview.node.Node.getLocalRotation"]},{"name":"fun getLocalScale(worldScale: Scale): Float3","description":"io.github.sceneview.node.Node.getLocalScale","location":"sceneview/io.github.sceneview.node/-node/get-local-scale.html","searchKeys":["getLocalScale","fun getLocalScale(worldScale: Scale): Float3","io.github.sceneview.node.Node.getLocalScale"]},{"name":"fun getLocalTransform(node: Node): Mat4","description":"io.github.sceneview.node.Node.getLocalTransform","location":"sceneview/io.github.sceneview.node/-node/get-local-transform.html","searchKeys":["getLocalTransform","fun getLocalTransform(node: Node): Mat4","io.github.sceneview.node.Node.getLocalTransform"]},{"name":"fun getLocalTransform(worldTransform: Transform): Mat4","description":"io.github.sceneview.node.Node.getLocalTransform","location":"sceneview/io.github.sceneview.node/-node/get-local-transform.html","searchKeys":["getLocalTransform","fun getLocalTransform(worldTransform: Transform): Mat4","io.github.sceneview.node.Node.getLocalTransform"]},{"name":"fun getVertices(radius: Float, center: Position, stacks: Int, slices: Int): List<Geometry.Vertex>","description":"io.github.sceneview.geometries.Sphere.Companion.getVertices","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/get-vertices.html","searchKeys":["getVertices","fun getVertices(radius: Float, center: Position, stacks: Int, slices: Int): List<Geometry.Vertex>","io.github.sceneview.geometries.Sphere.Companion.getVertices"]},{"name":"fun getVertices(radius: Float, height: Float, center: Position, sideCount: Int): List<Geometry.Vertex>","description":"io.github.sceneview.geometries.Cylinder.Companion.getVertices","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/get-vertices.html","searchKeys":["getVertices","fun getVertices(radius: Float, height: Float, center: Position, sideCount: Int): List<Geometry.Vertex>","io.github.sceneview.geometries.Cylinder.Companion.getVertices"]},{"name":"fun getVertices(size: Size, center: Position): List<Geometry.Vertex>","description":"io.github.sceneview.geometries.Cube.Companion.getVertices","location":"sceneview/io.github.sceneview.geometries/-cube/-companion/get-vertices.html","searchKeys":["getVertices","fun getVertices(size: Size, center: Position): List<Geometry.Vertex>","io.github.sceneview.geometries.Cube.Companion.getVertices"]},{"name":"fun getVertices(size: Size, center: Position, normal: Direction): List<Geometry.Vertex>","description":"io.github.sceneview.geometries.Plane.Companion.getVertices","location":"sceneview/io.github.sceneview.geometries/-plane/-companion/get-vertices.html","searchKeys":["getVertices","fun getVertices(size: Size, center: Position, normal: Direction): List<Geometry.Vertex>","io.github.sceneview.geometries.Plane.Companion.getVertices"]},{"name":"fun getWorldPosition(localPosition: Position): Float3","description":"io.github.sceneview.node.Node.getWorldPosition","location":"sceneview/io.github.sceneview.node/-node/get-world-position.html","searchKeys":["getWorldPosition","fun getWorldPosition(localPosition: Position): Float3","io.github.sceneview.node.Node.getWorldPosition"]},{"name":"fun getWorldQuaternion(quaternion: Quaternion): Quaternion","description":"io.github.sceneview.node.Node.getWorldQuaternion","location":"sceneview/io.github.sceneview.node/-node/get-world-quaternion.html","searchKeys":["getWorldQuaternion","fun getWorldQuaternion(quaternion: Quaternion): Quaternion","io.github.sceneview.node.Node.getWorldQuaternion"]},{"name":"fun getWorldRotation(rotation: Rotation): Float3","description":"io.github.sceneview.node.Node.getWorldRotation","location":"sceneview/io.github.sceneview.node/-node/get-world-rotation.html","searchKeys":["getWorldRotation","fun getWorldRotation(rotation: Rotation): Float3","io.github.sceneview.node.Node.getWorldRotation"]},{"name":"fun getWorldScale(scale: Scale): Float3","description":"io.github.sceneview.node.Node.getWorldScale","location":"sceneview/io.github.sceneview.node/-node/get-world-scale.html","searchKeys":["getWorldScale","fun getWorldScale(scale: Scale): Float3","io.github.sceneview.node.Node.getWorldScale"]},{"name":"fun getWorldTransform(localTransform: Transform): Mat4","description":"io.github.sceneview.node.Node.getWorldTransform","location":"sceneview/io.github.sceneview.node/-node/get-world-transform.html","searchKeys":["getWorldTransform","fun getWorldTransform(localTransform: Transform): Mat4","io.github.sceneview.node.Node.getWorldTransform"]},{"name":"fun getWorldTransform(node: Node): Mat4","description":"io.github.sceneview.node.Node.getWorldTransform","location":"sceneview/io.github.sceneview.node/-node/get-world-transform.html","searchKeys":["getWorldTransform","fun getWorldTransform(node: Node): Mat4","io.github.sceneview.node.Node.getWorldTransform"]},{"name":"fun height(height: Float): Cylinder.Builder","description":"io.github.sceneview.geometries.Cylinder.Builder.height","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/height.html","searchKeys":["height","fun height(height: Float): Cylinder.Builder","io.github.sceneview.geometries.Cylinder.Builder.height"]},{"name":"fun hitTest(motionEvent: MotionEvent): List<HitResult>","description":"io.github.sceneview.collision.CollisionSystem.hitTest","location":"sceneview/io.github.sceneview.collision/-collision-system/hit-test.html","searchKeys":["hitTest","fun hitTest(motionEvent: MotionEvent): List<HitResult>","io.github.sceneview.collision.CollisionSystem.hitTest"]},{"name":"fun hitTest(motionEvent: MotionEvent): List<HitResult>","description":"io.github.sceneview.node.CameraNode.hitTest","location":"sceneview/io.github.sceneview.node/-camera-node/hit-test.html","searchKeys":["hitTest","fun hitTest(motionEvent: MotionEvent): List<HitResult>","io.github.sceneview.node.CameraNode.hitTest"]},{"name":"fun hitTest(ray: Ray): List<HitResult>","description":"io.github.sceneview.collision.CollisionSystem.hitTest","location":"sceneview/io.github.sceneview.collision/-collision-system/hit-test.html","searchKeys":["hitTest","fun hitTest(ray: Ray): List<HitResult>","io.github.sceneview.collision.CollisionSystem.hitTest"]},{"name":"fun hitTest(ray: Ray): List<HitResult>","description":"io.github.sceneview.node.CameraNode.hitTest","location":"sceneview/io.github.sceneview.node/-camera-node/hit-test.html","searchKeys":["hitTest","fun hitTest(ray: Ray): List<HitResult>","io.github.sceneview.node.CameraNode.hitTest"]},{"name":"fun hitTest(viewPosition: Float2): List<HitResult>","description":"io.github.sceneview.collision.CollisionSystem.hitTest","location":"sceneview/io.github.sceneview.collision/-collision-system/hit-test.html","searchKeys":["hitTest","fun hitTest(viewPosition: Float2): List<HitResult>","io.github.sceneview.collision.CollisionSystem.hitTest"]},{"name":"fun hitTest(xPx: Float, yPx: Float): List<HitResult>","description":"io.github.sceneview.collision.CollisionSystem.hitTest","location":"sceneview/io.github.sceneview.collision/-collision-system/hit-test.html","searchKeys":["hitTest","fun hitTest(xPx: Float, yPx: Float): List<HitResult>","io.github.sceneview.collision.CollisionSystem.hitTest"]},{"name":"fun hitTest(xPx: Float, yPx: Float): List<HitResult>","description":"io.github.sceneview.node.CameraNode.hitTest","location":"sceneview/io.github.sceneview.node/-camera-node/hit-test.html","searchKeys":["hitTest","fun hitTest(xPx: Float, yPx: Float): List<HitResult>","io.github.sceneview.node.CameraNode.hitTest"]},{"name":"fun hitTestView(xViewPercent: Float = 0.5f, yViewPercent: Float = 0.5f): List<HitResult>","description":"io.github.sceneview.node.CameraNode.hitTestView","location":"sceneview/io.github.sceneview.node/-camera-node/hit-test-view.html","searchKeys":["hitTestView","fun hitTestView(xViewPercent: Float = 0.5f, yViewPercent: Float = 0.5f): List<HitResult>","io.github.sceneview.node.CameraNode.hitTestView"]},{"name":"fun indices(indices: List<Geometry.PrimitiveIndices>): Geometry.Builder","description":"io.github.sceneview.geometries.Geometry.Builder.indices","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/indices.html","searchKeys":["indices","fun indices(indices: List<Geometry.PrimitiveIndices>): Geometry.Builder","io.github.sceneview.geometries.Geometry.Builder.indices"]},{"name":"fun intersects(collider: Collider): Collider?","description":"io.github.sceneview.collision.CollisionSystem.intersects","location":"sceneview/io.github.sceneview.collision/-collision-system/intersects.html","searchKeys":["intersects","fun intersects(collider: Collider): Collider?","io.github.sceneview.collision.CollisionSystem.intersects"]},{"name":"fun intersectsAll(collider: Collider, processResult: Consumer<Collider>)","description":"io.github.sceneview.collision.CollisionSystem.intersectsAll","location":"sceneview/io.github.sceneview.collision/-collision-system/intersects-all.html","searchKeys":["intersectsAll","fun intersectsAll(collider: Collider, processResult: Consumer<Collider>)","io.github.sceneview.collision.CollisionSystem.intersectsAll"]},{"name":"fun lerp(start: Float3, end: Float3, deltaSeconds: Float): Float3","description":"io.github.sceneview.math.lerp","location":"sceneview/io.github.sceneview.math/lerp.html","searchKeys":["lerp","fun lerp(start: Float3, end: Float3, deltaSeconds: Float): Float3","io.github.sceneview.math.lerp"]},{"name":"fun loadInstancedModelAsync(fileLocation: String, count: Int, resourceResolver: (resourceFileName: String) -> String = {\n            getFolderPath(fileLocation, it)\n        }, onResult: (List<ModelInstance>) -> Unit): Job","description":"io.github.sceneview.loaders.ModelLoader.loadInstancedModelAsync","location":"sceneview/io.github.sceneview.loaders/-model-loader/load-instanced-model-async.html","searchKeys":["loadInstancedModelAsync","fun loadInstancedModelAsync(fileLocation: String, count: Int, resourceResolver: (resourceFileName: String) -> String = {\n            getFolderPath(fileLocation, it)\n        }, onResult: (List<ModelInstance>) -> Unit): Job","io.github.sceneview.loaders.ModelLoader.loadInstancedModelAsync"]},{"name":"fun loadMaterialAsync(fileLocation: String, onResult: (Material?) -> Unit): Job","description":"io.github.sceneview.loaders.MaterialLoader.loadMaterialAsync","location":"sceneview/io.github.sceneview.loaders/-material-loader/load-material-async.html","searchKeys":["loadMaterialAsync","fun loadMaterialAsync(fileLocation: String, onResult: (Material?) -> Unit): Job","io.github.sceneview.loaders.MaterialLoader.loadMaterialAsync"]},{"name":"fun loadModelAsync(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = {\n            getFolderPath(fileLocation, it)\n        }, onResult: (Model?) -> Unit): Job","description":"io.github.sceneview.loaders.ModelLoader.loadModelAsync","location":"sceneview/io.github.sceneview.loaders/-model-loader/load-model-async.html","searchKeys":["loadModelAsync","fun loadModelAsync(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = {\n            getFolderPath(fileLocation, it)\n        }, onResult: (Model?) -> Unit): Job","io.github.sceneview.loaders.ModelLoader.loadModelAsync"]},{"name":"fun loadModelInstanceAsync(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = {\n            getFolderPath(fileLocation, it)\n        }, onResult: (ModelInstance?) -> Unit): Job","description":"io.github.sceneview.loaders.ModelLoader.loadModelInstanceAsync","location":"sceneview/io.github.sceneview.loaders/-model-loader/load-model-instance-async.html","searchKeys":["loadModelInstanceAsync","fun loadModelInstanceAsync(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = {\n            getFolderPath(fileLocation, it)\n        }, onResult: (ModelInstance?) -> Unit): Job","io.github.sceneview.loaders.ModelLoader.loadModelInstanceAsync"]},{"name":"fun loadView(context: Context, layoutResId: Int, onError: (Exception) -> Unit? = null, onLoaded: (instance: RenderableInstance, view: View) -> Unit? = null)","description":"io.github.sceneview.node.ViewNode.loadView","location":"sceneview/io.github.sceneview.node/-view-node/load-view.html","searchKeys":["loadView","fun loadView(context: Context, layoutResId: Int, onError: (Exception) -> Unit? = null, onLoaded: (instance: RenderableInstance, view: View) -> Unit? = null)","io.github.sceneview.node.ViewNode.loadView"]},{"name":"fun lookAt(eye: Position, target: Position): Mat4","description":"io.github.sceneview.math.lookAt","location":"sceneview/io.github.sceneview.math/look-at.html","searchKeys":["lookAt","fun lookAt(eye: Position, target: Position): Mat4","io.github.sceneview.math.lookAt"]},{"name":"fun lookAt(targetNode: Node, upDirection: Direction = Direction(y = 1.0f), smooth: Boolean = false)","description":"io.github.sceneview.node.Node.lookAt","location":"sceneview/io.github.sceneview.node/-node/look-at.html","searchKeys":["lookAt","fun lookAt(targetNode: Node, upDirection: Direction = Direction(y = 1.0f), smooth: Boolean = false)","io.github.sceneview.node.Node.lookAt"]},{"name":"fun lookAt(targetPosition: Position, upDirection: Direction = Direction(y = 1.0f), smooth: Boolean = false)","description":"io.github.sceneview.node.Node.lookAt","location":"sceneview/io.github.sceneview.node/-node/look-at.html","searchKeys":["lookAt","fun lookAt(targetPosition: Position, upDirection: Direction = Direction(y = 1.0f), smooth: Boolean = false)","io.github.sceneview.node.Node.lookAt"]},{"name":"fun lookTowards(eye: Position, direction: Direction): Quaternion","description":"io.github.sceneview.math.lookTowards","location":"sceneview/io.github.sceneview.math/look-towards.html","searchKeys":["lookTowards","fun lookTowards(eye: Position, direction: Direction): Quaternion","io.github.sceneview.math.lookTowards"]},{"name":"fun lookTowards(lookDirection: Direction, upDirection: Direction = Direction(y = 1.0f), smooth: Boolean = false)","description":"io.github.sceneview.node.Node.lookTowards","location":"sceneview/io.github.sceneview.node/-node/look-towards.html","searchKeys":["lookTowards","fun lookTowards(lookDirection: Direction, upDirection: Direction = Direction(y = 1.0f), smooth: Boolean = false)","io.github.sceneview.node.Node.lookTowards"]},{"name":"fun motionEventToRay(motionEvent: MotionEvent): Ray","description":"io.github.sceneview.node.CameraNode.motionEventToRay","location":"sceneview/io.github.sceneview.node/-camera-node/motion-event-to-ray.html","searchKeys":["motionEventToRay","fun motionEventToRay(motionEvent: MotionEvent): Ray","io.github.sceneview.node.CameraNode.motionEventToRay"]},{"name":"fun normal(normal: Direction): Plane.Builder","description":"io.github.sceneview.geometries.Plane.Builder.normal","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/normal.html","searchKeys":["normal","fun normal(normal: Direction): Plane.Builder","io.github.sceneview.geometries.Plane.Builder.normal"]},{"name":"fun normalToTangent(normal: Float3): Quaternion","description":"io.github.sceneview.math.normalToTangent","location":"sceneview/io.github.sceneview.math/normal-to-tangent.html","searchKeys":["normalToTangent","fun normalToTangent(normal: Float3): Quaternion","io.github.sceneview.math.normalToTangent"]},{"name":"fun ofPosition(node: Node, vararg positions: Position): ObjectAnimator","description":"io.github.sceneview.animation.NodeAnimator.ofPosition","location":"sceneview/io.github.sceneview.animation/-node-animator/of-position.html","searchKeys":["ofPosition","fun ofPosition(node: Node, vararg positions: Position): ObjectAnimator","io.github.sceneview.animation.NodeAnimator.ofPosition"]},{"name":"fun ofQuaternion(node: Node, vararg quaternions: Quaternion): ObjectAnimator","description":"io.github.sceneview.animation.NodeAnimator.ofQuaternion","location":"sceneview/io.github.sceneview.animation/-node-animator/of-quaternion.html","searchKeys":["ofQuaternion","fun ofQuaternion(node: Node, vararg quaternions: Quaternion): ObjectAnimator","io.github.sceneview.animation.NodeAnimator.ofQuaternion"]},{"name":"fun ofRotation(node: Node, vararg rotations: Rotation): ObjectAnimator","description":"io.github.sceneview.animation.NodeAnimator.ofRotation","location":"sceneview/io.github.sceneview.animation/-node-animator/of-rotation.html","searchKeys":["ofRotation","fun ofRotation(node: Node, vararg rotations: Rotation): ObjectAnimator","io.github.sceneview.animation.NodeAnimator.ofRotation"]},{"name":"fun ofScale(node: Node, vararg scales: Scale): ObjectAnimator","description":"io.github.sceneview.animation.NodeAnimator.ofScale","location":"sceneview/io.github.sceneview.animation/-node-animator/of-scale.html","searchKeys":["ofScale","fun ofScale(node: Node, vararg scales: Scale): ObjectAnimator","io.github.sceneview.animation.NodeAnimator.ofScale"]},{"name":"fun ofTransform(node: Node, vararg transforms: Transform): AnimatorSet","description":"io.github.sceneview.animation.NodeAnimator.ofTransform","location":"sceneview/io.github.sceneview.animation/-node-animator/of-transform.html","searchKeys":["ofTransform","fun ofTransform(node: Node, vararg transforms: Transform): AnimatorSet","io.github.sceneview.animation.NodeAnimator.ofTransform"]},{"name":"fun onFrame(sceneView: SceneView)","description":"io.github.sceneview.utils.SurfaceMirrorer.onFrame","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/on-frame.html","searchKeys":["onFrame","fun onFrame(sceneView: SceneView)","io.github.sceneview.utils.SurfaceMirrorer.onFrame"]},{"name":"fun onTouchEvent(event: MotionEvent)","description":"io.github.sceneview.gesture.CameraGestureDetector.onTouchEvent","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/on-touch-event.html","searchKeys":["onTouchEvent","fun onTouchEvent(event: MotionEvent)","io.github.sceneview.gesture.CameraGestureDetector.onTouchEvent"]},{"name":"fun onTouchEvent(event: MotionEvent): Boolean","description":"io.github.sceneview.gesture.GestureDetector.onTouchEvent","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/on-touch-event.html","searchKeys":["onTouchEvent","fun onTouchEvent(event: MotionEvent): Boolean","io.github.sceneview.gesture.GestureDetector.onTouchEvent"]},{"name":"fun onTouchEvent(event: MotionEvent): Boolean","description":"io.github.sceneview.gesture.MoveGestureDetector.onTouchEvent","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/on-touch-event.html","searchKeys":["onTouchEvent","fun onTouchEvent(event: MotionEvent): Boolean","io.github.sceneview.gesture.MoveGestureDetector.onTouchEvent"]},{"name":"fun onTouchEvent(event: MotionEvent): Boolean","description":"io.github.sceneview.gesture.RotateGestureDetector.onTouchEvent","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/on-touch-event.html","searchKeys":["onTouchEvent","fun onTouchEvent(event: MotionEvent): Boolean","io.github.sceneview.gesture.RotateGestureDetector.onTouchEvent"]},{"name":"fun overlapTest(): Node?","description":"io.github.sceneview.node.Node.overlapTest","location":"sceneview/io.github.sceneview.node/-node/overlap-test.html","searchKeys":["overlapTest","fun overlapTest(): Node?","io.github.sceneview.node.Node.overlapTest"]},{"name":"fun overlapTestAll(): List<Node>","description":"io.github.sceneview.node.Node.overlapTestAll","location":"sceneview/io.github.sceneview.node/-node/overlap-test-all.html","searchKeys":["overlapTestAll","fun overlapTestAll(): List<Node>","io.github.sceneview.node.Node.overlapTestAll"]},{"name":"fun playAnimation(animationIndex: Int, loop: Boolean = true)","description":"io.github.sceneview.node.ModelNode.playAnimation","location":"sceneview/io.github.sceneview.node/-model-node/play-animation.html","searchKeys":["playAnimation","fun playAnimation(animationIndex: Int, loop: Boolean = true)","io.github.sceneview.node.ModelNode.playAnimation"]},{"name":"fun playAnimation(animationName: String, loop: Boolean = true)","description":"io.github.sceneview.node.ModelNode.playAnimation","location":"sceneview/io.github.sceneview.node/-model-node/play-animation.html","searchKeys":["playAnimation","fun playAnimation(animationName: String, loop: Boolean = true)","io.github.sceneview.node.ModelNode.playAnimation"]},{"name":"fun radius(radius: Float): Cylinder.Builder","description":"io.github.sceneview.geometries.Cylinder.Builder.radius","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/radius.html","searchKeys":["radius","fun radius(radius: Float): Cylinder.Builder","io.github.sceneview.geometries.Cylinder.Builder.radius"]},{"name":"fun radius(radius: Float): Sphere.Builder","description":"io.github.sceneview.geometries.Sphere.Builder.radius","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/radius.html","searchKeys":["radius","fun radius(radius: Float): Sphere.Builder","io.github.sceneview.geometries.Sphere.Builder.radius"]},{"name":"fun raycast(ray: Ray, resultHit: RayHit): Collider?","description":"io.github.sceneview.collision.CollisionSystem.raycast","location":"sceneview/io.github.sceneview.collision/-collision-system/raycast.html","searchKeys":["raycast","fun raycast(ray: Ray, resultHit: RayHit): Collider?","io.github.sceneview.collision.CollisionSystem.raycast"]},{"name":"fun readFileBuffer(context: Context, fileLocation: String): ByteBuffer?","description":"io.github.sceneview.utils.FileLoader.readFileBuffer","location":"sceneview/io.github.sceneview.utils/-file-loader/read-file-buffer.html","searchKeys":["readFileBuffer","fun readFileBuffer(context: Context, fileLocation: String): ByteBuffer?","io.github.sceneview.utils.FileLoader.readFileBuffer"]},{"name":"fun rememberCameraNode(engine: Engine, creator: () -> CameraNode = {\n        SceneView.createCameraNode(engine)\n    }): CameraNode","description":"io.github.sceneview.rememberCameraNode","location":"sceneview/io.github.sceneview/remember-camera-node.html","searchKeys":["rememberCameraNode","fun rememberCameraNode(engine: Engine, creator: () -> CameraNode = {\n        SceneView.createCameraNode(engine)\n    }): CameraNode","io.github.sceneview.rememberCameraNode"]},{"name":"fun rememberCollisionSystem(view: View, creator: () -> CollisionSystem = {\n        SceneView.createCollisionSystem(view)\n    }): CollisionSystem","description":"io.github.sceneview.rememberCollisionSystem","location":"sceneview/io.github.sceneview/remember-collision-system.html","searchKeys":["rememberCollisionSystem","fun rememberCollisionSystem(view: View, creator: () -> CollisionSystem = {\n        SceneView.createCollisionSystem(view)\n    }): CollisionSystem","io.github.sceneview.rememberCollisionSystem"]},{"name":"fun rememberEngine(eglContextCreator: () -> EGLContext = { SceneView.createEglContext() }, engineCreator: (eglContext: EGLContext) -> Engine = { SceneView.createEngine(it) }): Engine","description":"io.github.sceneview.rememberEngine","location":"sceneview/io.github.sceneview/remember-engine.html","searchKeys":["rememberEngine","fun rememberEngine(eglContextCreator: () -> EGLContext = { SceneView.createEglContext() }, engineCreator: (eglContext: EGLContext) -> Engine = { SceneView.createEngine(it) }): Engine","io.github.sceneview.rememberEngine"]},{"name":"fun rememberGestureDetector(context: Context, nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit, creator: () -> GestureDetector = {\n        GestureDetector(context, nodeSelector)\n    }): GestureDetector","description":"io.github.sceneview.rememberGestureDetector","location":"sceneview/io.github.sceneview/remember-gesture-detector.html","searchKeys":["rememberGestureDetector","fun rememberGestureDetector(context: Context, nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit, creator: () -> GestureDetector = {\n        GestureDetector(context, nodeSelector)\n    }): GestureDetector","io.github.sceneview.rememberGestureDetector"]},{"name":"fun rememberHitTestGestureDetector(context: Context, collisionSystem: CollisionSystem, creator: () -> GestureDetector = {\n        HitTestGestureDetector(context, collisionSystem)\n    }): GestureDetector","description":"io.github.sceneview.rememberHitTestGestureDetector","location":"sceneview/io.github.sceneview/remember-hit-test-gesture-detector.html","searchKeys":["rememberHitTestGestureDetector","fun rememberHitTestGestureDetector(context: Context, collisionSystem: CollisionSystem, creator: () -> GestureDetector = {\n        HitTestGestureDetector(context, collisionSystem)\n    }): GestureDetector","io.github.sceneview.rememberHitTestGestureDetector"]},{"name":"fun rememberIndirectLight(engine: Engine, creator: () -> IndirectLight? = {\n        SceneView.createIndirectLight(engine)\n    }): IndirectLight?","description":"io.github.sceneview.rememberIndirectLight","location":"sceneview/io.github.sceneview/remember-indirect-light.html","searchKeys":["rememberIndirectLight","fun rememberIndirectLight(engine: Engine, creator: () -> IndirectLight? = {\n        SceneView.createIndirectLight(engine)\n    }): IndirectLight?","io.github.sceneview.rememberIndirectLight"]},{"name":"fun rememberMainLightNode(engine: Engine, creator: () -> LightNode = {\n        SceneView.createMainLightNode(engine)\n    }): LightNode","description":"io.github.sceneview.rememberMainLightNode","location":"sceneview/io.github.sceneview/remember-main-light-node.html","searchKeys":["rememberMainLightNode","fun rememberMainLightNode(engine: Engine, creator: () -> LightNode = {\n        SceneView.createMainLightNode(engine)\n    }): LightNode","io.github.sceneview.rememberMainLightNode"]},{"name":"fun rememberMaterialLoader(engine: Engine, context: Context = LocalContext.current, creator: () -> MaterialLoader = {\n        SceneView.createMaterialLoader(engine, context)\n    }): MaterialLoader","description":"io.github.sceneview.rememberMaterialLoader","location":"sceneview/io.github.sceneview/remember-material-loader.html","searchKeys":["rememberMaterialLoader","fun rememberMaterialLoader(engine: Engine, context: Context = LocalContext.current, creator: () -> MaterialLoader = {\n        SceneView.createMaterialLoader(engine, context)\n    }): MaterialLoader","io.github.sceneview.rememberMaterialLoader"]},{"name":"fun rememberModelLoader(engine: Engine, context: Context = LocalContext.current, creator: () -> ModelLoader = {\n        SceneView.createModelLoader(engine, context)\n    }): ModelLoader","description":"io.github.sceneview.rememberModelLoader","location":"sceneview/io.github.sceneview/remember-model-loader.html","searchKeys":["rememberModelLoader","fun rememberModelLoader(engine: Engine, context: Context = LocalContext.current, creator: () -> ModelLoader = {\n        SceneView.createModelLoader(engine, context)\n    }): ModelLoader","io.github.sceneview.rememberModelLoader"]},{"name":"fun rememberNodes(creator: MutableList<Node>.() -> Unit = {}): SnapshotStateList<Node>","description":"io.github.sceneview.rememberNodes","location":"sceneview/io.github.sceneview/remember-nodes.html","searchKeys":["rememberNodes","fun rememberNodes(creator: MutableList<Node>.() -> Unit = {}): SnapshotStateList<Node>","io.github.sceneview.rememberNodes"]},{"name":"fun rememberOnGestureListener(onDown: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onShowPress: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onSingleTapUp: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onScroll: (e1: MotionEvent?, e2: MotionEvent, node: Node?, distance: Float2) -> Unit = { _, _, _, _ -> }, onLongPress: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onFling: (e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2) -> Unit = { _, _, _, _ -> }, onSingleTapConfirmed: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onDoubleTap: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onDoubleTapEvent: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onContextClick: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onMoveBegin: (detector: MoveGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onMove: (detector: MoveGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onMoveEnd: (detector: MoveGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onRotateBegin: (detector: RotateGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onRotate: (detector: RotateGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onRotateEnd: (detector: RotateGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onScaleBegin: (detector: ScaleGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onScale: (detector: ScaleGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onScaleEnd: (detector: ScaleGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, creator: () -> GestureDetector.OnGestureListener = {\n        object : GestureDetector.OnGestureListener {\n            override fun onDown(e: MotionEvent, node: Node?) = onDown(e, node)\n            override fun onShowPress(e: MotionEvent, node: Node?) = onShowPress(e, node)\n            override fun onSingleTapUp(e: MotionEvent, node: Node?) = onSingleTapUp(e, node)\n            override fun onScroll(\n                e1: MotionEvent?,\n                e2: MotionEvent,\n                node: Node?,\n                distance: Float2\n            ) = onScroll(e1, e2, node, distance)\n\n            override fun onLongPress(e: MotionEvent, node: Node?) = onLongPress(e, node)\n            override fun onFling(e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2) =\n                onFling(e1, e2, node, velocity)\n\n            override fun onSingleTapConfirmed(e: MotionEvent, node: Node?) =\n                onSingleTapConfirmed(e, node)\n\n            override fun onDoubleTap(e: MotionEvent, node: Node?) = onDoubleTap(e, node)\n            override fun onDoubleTapEvent(e: MotionEvent, node: Node?) = onDoubleTapEvent(e, node)\n            override fun onContextClick(e: MotionEvent, node: Node?) = onContextClick(e, node)\n            override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent, node: Node?) =\n                onMoveBegin(detector, e, node)\n\n            override fun onMove(detector: MoveGestureDetector, e: MotionEvent, node: Node?) =\n                onMove(detector, e, node)\n\n            override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent, node: Node?) =\n                onMoveEnd(detector, e, node)\n\n            override fun onRotateBegin(\n                detector: RotateGestureDetector,\n                e: MotionEvent,\n                node: Node?\n            ) = onRotateBegin(detector, e, node)\n\n            override fun onRotate(detector: RotateGestureDetector, e: MotionEvent, node: Node?) =\n                onRotate(detector, e, node)\n\n            override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent, node: Node?) =\n                onRotateEnd(detector, e, node)\n\n            override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent, node: Node?) =\n                onScaleBegin(detector, e, node)\n\n            override fun onScale(detector: ScaleGestureDetector, e: MotionEvent, node: Node?) =\n                onScale(detector, e, node)\n\n            override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent, node: Node?) =\n                onScaleEnd(detector, e, node)\n        }\n    }): GestureDetector.OnGestureListener","description":"io.github.sceneview.rememberOnGestureListener","location":"sceneview/io.github.sceneview/remember-on-gesture-listener.html","searchKeys":["rememberOnGestureListener","fun rememberOnGestureListener(onDown: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onShowPress: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onSingleTapUp: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onScroll: (e1: MotionEvent?, e2: MotionEvent, node: Node?, distance: Float2) -> Unit = { _, _, _, _ -> }, onLongPress: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onFling: (e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2) -> Unit = { _, _, _, _ -> }, onSingleTapConfirmed: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onDoubleTap: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onDoubleTapEvent: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onContextClick: (e: MotionEvent, node: Node?) -> Unit = { _, _ -> }, onMoveBegin: (detector: MoveGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onMove: (detector: MoveGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onMoveEnd: (detector: MoveGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onRotateBegin: (detector: RotateGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onRotate: (detector: RotateGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onRotateEnd: (detector: RotateGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onScaleBegin: (detector: ScaleGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onScale: (detector: ScaleGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, onScaleEnd: (detector: ScaleGestureDetector, e: MotionEvent, node: Node?) -> Unit = { _, _, _ -> }, creator: () -> GestureDetector.OnGestureListener = {\n        object : GestureDetector.OnGestureListener {\n            override fun onDown(e: MotionEvent, node: Node?) = onDown(e, node)\n            override fun onShowPress(e: MotionEvent, node: Node?) = onShowPress(e, node)\n            override fun onSingleTapUp(e: MotionEvent, node: Node?) = onSingleTapUp(e, node)\n            override fun onScroll(\n                e1: MotionEvent?,\n                e2: MotionEvent,\n                node: Node?,\n                distance: Float2\n            ) = onScroll(e1, e2, node, distance)\n\n            override fun onLongPress(e: MotionEvent, node: Node?) = onLongPress(e, node)\n            override fun onFling(e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2) =\n                onFling(e1, e2, node, velocity)\n\n            override fun onSingleTapConfirmed(e: MotionEvent, node: Node?) =\n                onSingleTapConfirmed(e, node)\n\n            override fun onDoubleTap(e: MotionEvent, node: Node?) = onDoubleTap(e, node)\n            override fun onDoubleTapEvent(e: MotionEvent, node: Node?) = onDoubleTapEvent(e, node)\n            override fun onContextClick(e: MotionEvent, node: Node?) = onContextClick(e, node)\n            override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent, node: Node?) =\n                onMoveBegin(detector, e, node)\n\n            override fun onMove(detector: MoveGestureDetector, e: MotionEvent, node: Node?) =\n                onMove(detector, e, node)\n\n            override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent, node: Node?) =\n                onMoveEnd(detector, e, node)\n\n            override fun onRotateBegin(\n                detector: RotateGestureDetector,\n                e: MotionEvent,\n                node: Node?\n            ) = onRotateBegin(detector, e, node)\n\n            override fun onRotate(detector: RotateGestureDetector, e: MotionEvent, node: Node?) =\n                onRotate(detector, e, node)\n\n            override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent, node: Node?) =\n                onRotateEnd(detector, e, node)\n\n            override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent, node: Node?) =\n                onScaleBegin(detector, e, node)\n\n            override fun onScale(detector: ScaleGestureDetector, e: MotionEvent, node: Node?) =\n                onScale(detector, e, node)\n\n            override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent, node: Node?) =\n                onScaleEnd(detector, e, node)\n        }\n    }): GestureDetector.OnGestureListener","io.github.sceneview.rememberOnGestureListener"]},{"name":"fun rememberPickGestureDetector(context: Context, view: View, nodes: () -> List<Node>, creator: () -> GestureDetector = {\n        PickGestureDetector(context, view, nodes)\n    }): GestureDetector","description":"io.github.sceneview.rememberPickGestureDetector","location":"sceneview/io.github.sceneview/remember-pick-gesture-detector.html","searchKeys":["rememberPickGestureDetector","fun rememberPickGestureDetector(context: Context, view: View, nodes: () -> List<Node>, creator: () -> GestureDetector = {\n        PickGestureDetector(context, view, nodes)\n    }): GestureDetector","io.github.sceneview.rememberPickGestureDetector"]},{"name":"fun rememberRenderer(engine: Engine, creator: () -> Renderer = { SceneView.createRenderer(engine) }): Renderer","description":"io.github.sceneview.rememberRenderer","location":"sceneview/io.github.sceneview/remember-renderer.html","searchKeys":["rememberRenderer","fun rememberRenderer(engine: Engine, creator: () -> Renderer = { SceneView.createRenderer(engine) }): Renderer","io.github.sceneview.rememberRenderer"]},{"name":"fun rememberScene(engine: Engine, creator: () -> Scene = { SceneView.createScene(engine) }): Scene","description":"io.github.sceneview.rememberScene","location":"sceneview/io.github.sceneview/remember-scene.html","searchKeys":["rememberScene","fun rememberScene(engine: Engine, creator: () -> Scene = { SceneView.createScene(engine) }): Scene","io.github.sceneview.rememberScene"]},{"name":"fun rememberSelectedNodeDetector(context: Context, selectedNode: Node?, creator: () -> GestureDetector = {\n        SelectedNodeGestureDetector(context, selectedNode)\n    }): GestureDetector","description":"io.github.sceneview.rememberSelectedNodeDetector","location":"sceneview/io.github.sceneview/remember-selected-node-detector.html","searchKeys":["rememberSelectedNodeDetector","fun rememberSelectedNodeDetector(context: Context, selectedNode: Node?, creator: () -> GestureDetector = {\n        SelectedNodeGestureDetector(context, selectedNode)\n    }): GestureDetector","io.github.sceneview.rememberSelectedNodeDetector"]},{"name":"fun rememberSkybox(engine: Engine, creator: () -> Skybox = {\n        SceneView.createSkybox(engine)\n    }): Skybox","description":"io.github.sceneview.rememberSkybox","location":"sceneview/io.github.sceneview/remember-skybox.html","searchKeys":["rememberSkybox","fun rememberSkybox(engine: Engine, creator: () -> Skybox = {\n        SceneView.createSkybox(engine)\n    }): Skybox","io.github.sceneview.rememberSkybox"]},{"name":"fun rememberView(engine: Engine, creator: () -> View = { SceneView.createView(engine) }): View","description":"io.github.sceneview.rememberView","location":"sceneview/io.github.sceneview/remember-view.html","searchKeys":["rememberView","fun rememberView(engine: Engine, creator: () -> View = { SceneView.createView(engine) }): View","io.github.sceneview.rememberView"]},{"name":"fun removeChildNode(child: Node): Node","description":"io.github.sceneview.node.Node.removeChildNode","location":"sceneview/io.github.sceneview.node/-node/remove-child-node.html","searchKeys":["removeChildNode","fun removeChildNode(child: Node): Node","io.github.sceneview.node.Node.removeChildNode"]},{"name":"fun removeChildNode(node: Node)","description":"io.github.sceneview.SceneView.removeChildNode","location":"sceneview/io.github.sceneview/-scene-view/remove-child-node.html","searchKeys":["removeChildNode","fun removeChildNode(node: Node)","io.github.sceneview.SceneView.removeChildNode"]},{"name":"fun removeCollider(collider: Collider)","description":"io.github.sceneview.collision.CollisionSystem.removeCollider","location":"sceneview/io.github.sceneview.collision/-collision-system/remove-collider.html","searchKeys":["removeCollider","fun removeCollider(collider: Collider)","io.github.sceneview.collision.CollisionSystem.removeCollider"]},{"name":"fun removeEntities(entities: List<Entity>)","description":"io.github.sceneview.SceneView.removeEntities","location":"sceneview/io.github.sceneview/-scene-view/remove-entities.html","searchKeys":["removeEntities","fun removeEntities(entities: List<Entity>)","io.github.sceneview.SceneView.removeEntities"]},{"name":"fun removeEntity(entity: Entity)","description":"io.github.sceneview.SceneView.removeEntity","location":"sceneview/io.github.sceneview/-scene-view/remove-entity.html","searchKeys":["removeEntity","fun removeEntity(entity: Entity)","io.github.sceneview.SceneView.removeEntity"]},{"name":"fun reset()","description":"io.github.sceneview.gesture.RotateGestureDetector.reset","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/reset.html","searchKeys":["reset","fun reset()","io.github.sceneview.gesture.RotateGestureDetector.reset"]},{"name":"fun scaleToUnitCube(units: Float = 1.0f)","description":"io.github.sceneview.node.ModelNode.scaleToUnitCube","location":"sceneview/io.github.sceneview.node/-model-node/scale-to-unit-cube.html","searchKeys":["scaleToUnitCube","fun scaleToUnitCube(units: Float = 1.0f)","io.github.sceneview.node.ModelNode.scaleToUnitCube"]},{"name":"fun screenPointToRay(x: Float, y: Float): Ray","description":"io.github.sceneview.node.CameraNode.screenPointToRay","location":"sceneview/io.github.sceneview.node/-camera-node/screen-point-to-ray.html","searchKeys":["screenPointToRay","fun screenPointToRay(x: Float, y: Float): Ray","io.github.sceneview.node.CameraNode.screenPointToRay"]},{"name":"fun setBitmap(drawableResId: Int, type: TextureType = ImageTexture.DEFAULT_TYPE)","description":"io.github.sceneview.node.ImageNode.setBitmap","location":"sceneview/io.github.sceneview.node/-image-node/set-bitmap.html","searchKeys":["setBitmap","fun setBitmap(drawableResId: Int, type: TextureType = ImageTexture.DEFAULT_TYPE)","io.github.sceneview.node.ImageNode.setBitmap"]},{"name":"fun setBitmap(fileLocation: String, type: TextureType = ImageTexture.DEFAULT_TYPE)","description":"io.github.sceneview.node.ImageNode.setBitmap","location":"sceneview/io.github.sceneview.node/-image-node/set-bitmap.html","searchKeys":["setBitmap","fun setBitmap(fileLocation: String, type: TextureType = ImageTexture.DEFAULT_TYPE)","io.github.sceneview.node.ImageNode.setBitmap"]},{"name":"fun setBlendOrder(blendOrder: Int)","description":"io.github.sceneview.node.ModelNode.setBlendOrder","location":"sceneview/io.github.sceneview.node/-model-node/set-blend-order.html","searchKeys":["setBlendOrder","fun setBlendOrder(blendOrder: Int)","io.github.sceneview.node.ModelNode.setBlendOrder"]},{"name":"fun setCameraNode(cameraNode: CameraNode)","description":"io.github.sceneview.SceneView.setCameraNode","location":"sceneview/io.github.sceneview/-scene-view/set-camera-node.html","searchKeys":["setCameraNode","fun setCameraNode(cameraNode: CameraNode)","io.github.sceneview.SceneView.setCameraNode"]},{"name":"fun setCulling(enabled: Boolean)","description":"io.github.sceneview.node.ModelNode.setCulling","location":"sceneview/io.github.sceneview.node/-model-node/set-culling.html","searchKeys":["setCulling","fun setCulling(enabled: Boolean)","io.github.sceneview.node.ModelNode.setCulling"]},{"name":"fun setGlobalBlendOrderEnabled(enabled: Boolean)","description":"io.github.sceneview.node.ModelNode.setGlobalBlendOrderEnabled","location":"sceneview/io.github.sceneview.node/-model-node/set-global-blend-order-enabled.html","searchKeys":["setGlobalBlendOrderEnabled","fun setGlobalBlendOrderEnabled(enabled: Boolean)","io.github.sceneview.node.ModelNode.setGlobalBlendOrderEnabled"]},{"name":"fun setLayerMask(select: Int, value: Int)","description":"io.github.sceneview.node.ModelNode.setLayerMask","location":"sceneview/io.github.sceneview.node/-model-node/set-layer-mask.html","searchKeys":["setLayerMask","fun setLayerMask(select: Int, value: Int)","io.github.sceneview.node.ModelNode.setLayerMask"]},{"name":"fun setLayerVisible(visible: Boolean)","description":"io.github.sceneview.node.ModelNode.setLayerVisible","location":"sceneview/io.github.sceneview.node/-model-node/set-layer-visible.html","searchKeys":["setLayerVisible","fun setLayerVisible(visible: Boolean)","io.github.sceneview.node.ModelNode.setLayerVisible"]},{"name":"fun setMaterialInstance(materialInstance: MaterialInstance)","description":"io.github.sceneview.node.ModelNode.setMaterialInstance","location":"sceneview/io.github.sceneview.node/-model-node/set-material-instance.html","searchKeys":["setMaterialInstance","fun setMaterialInstance(materialInstance: MaterialInstance)","io.github.sceneview.node.ModelNode.setMaterialInstance"]},{"name":"fun setMorphWeights(weights: FloatArray, offset: Int = weights.size)","description":"io.github.sceneview.node.ModelNode.setMorphWeights","location":"sceneview/io.github.sceneview.node/-model-node/set-morph-weights.html","searchKeys":["setMorphWeights","fun setMorphWeights(weights: FloatArray, offset: Int = weights.size)","io.github.sceneview.node.ModelNode.setMorphWeights"]},{"name":"fun setPriority(priority: Int)","description":"io.github.sceneview.node.ModelNode.setPriority","location":"sceneview/io.github.sceneview.node/-model-node/set-priority.html","searchKeys":["setPriority","fun setPriority(priority: Int)","io.github.sceneview.node.ModelNode.setPriority"]},{"name":"fun setScale(scale: Float)","description":"io.github.sceneview.node.Node.setScale","location":"sceneview/io.github.sceneview.node/-node/set-scale.html","searchKeys":["setScale","fun setScale(scale: Float)","io.github.sceneview.node.Node.setScale"]},{"name":"fun setScreenSpaceContactShadows(enabled: Boolean)","description":"io.github.sceneview.node.ModelNode.setScreenSpaceContactShadows","location":"sceneview/io.github.sceneview.node/-model-node/set-screen-space-contact-shadows.html","searchKeys":["setScreenSpaceContactShadows","fun setScreenSpaceContactShadows(enabled: Boolean)","io.github.sceneview.node.ModelNode.setScreenSpaceContactShadows"]},{"name":"fun setTranslucent(translucent: Boolean)","description":"io.github.sceneview.SceneView.setTranslucent","location":"sceneview/io.github.sceneview/-scene-view/set-translucent.html","searchKeys":["setTranslucent","fun setTranslucent(translucent: Boolean)","io.github.sceneview.SceneView.setTranslucent"]},{"name":"fun sideCount(sideCount: Int): Cylinder.Builder","description":"io.github.sceneview.geometries.Cylinder.Builder.sideCount","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/side-count.html","searchKeys":["sideCount","fun sideCount(sideCount: Int): Cylinder.Builder","io.github.sceneview.geometries.Cylinder.Builder.sideCount"]},{"name":"fun size(size: Size): Cube.Builder","description":"io.github.sceneview.geometries.Cube.Builder.size","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/size.html","searchKeys":["size","fun size(size: Size): Cube.Builder","io.github.sceneview.geometries.Cube.Builder.size"]},{"name":"fun size(size: Size): Plane.Builder","description":"io.github.sceneview.geometries.Plane.Builder.size","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/size.html","searchKeys":["size","fun size(size: Size): Plane.Builder","io.github.sceneview.geometries.Plane.Builder.size"]},{"name":"fun slerp(start: Transform, end: Transform, deltaSeconds: Double, speed: Float): Transform","description":"io.github.sceneview.math.slerp","location":"sceneview/io.github.sceneview.math/slerp.html","searchKeys":["slerp","fun slerp(start: Transform, end: Transform, deltaSeconds: Double, speed: Float): Transform","io.github.sceneview.math.slerp"]},{"name":"fun slices(slices: Int): Sphere.Builder","description":"io.github.sceneview.geometries.Sphere.Builder.slices","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/slices.html","searchKeys":["slices","fun slices(slices: Int): Sphere.Builder","io.github.sceneview.geometries.Sphere.Builder.slices"]},{"name":"fun smoothTransform(position: Position = this.position, quaternion: Quaternion = this.quaternion, scale: Scale = this.scale, speed: Float = this.smoothTransformSpeed)","description":"io.github.sceneview.node.Node.smoothTransform","location":"sceneview/io.github.sceneview.node/-node/smooth-transform.html","searchKeys":["smoothTransform","fun smoothTransform(position: Position = this.position, quaternion: Quaternion = this.quaternion, scale: Scale = this.scale, speed: Float = this.smoothTransformSpeed)","io.github.sceneview.node.Node.smoothTransform"]},{"name":"fun smoothTransform(position: Position = this.position, rotation: Rotation = this.rotation, scale: Scale = this.scale, speed: Float = this.smoothTransformSpeed)","description":"io.github.sceneview.node.Node.smoothTransform","location":"sceneview/io.github.sceneview.node/-node/smooth-transform.html","searchKeys":["smoothTransform","fun smoothTransform(position: Position = this.position, rotation: Rotation = this.rotation, scale: Scale = this.scale, speed: Float = this.smoothTransformSpeed)","io.github.sceneview.node.Node.smoothTransform"]},{"name":"fun smoothTransform(transform: Transform, speed: Float = smoothTransformSpeed)","description":"io.github.sceneview.node.Node.smoothTransform","location":"sceneview/io.github.sceneview.node/-node/smooth-transform.html","searchKeys":["smoothTransform","fun smoothTransform(transform: Transform, speed: Float = smoothTransformSpeed)","io.github.sceneview.node.Node.smoothTransform"]},{"name":"fun specularFilter(skybox: Texture): Texture","description":"io.github.sceneview.environment.IBLPrefilter.specularFilter","location":"sceneview/io.github.sceneview.environment/-i-b-l-prefilter/specular-filter.html","searchKeys":["specularFilter","fun specularFilter(skybox: Texture): Texture","io.github.sceneview.environment.IBLPrefilter.specularFilter"]},{"name":"fun stacks(stacks: Int): Sphere.Builder","description":"io.github.sceneview.geometries.Sphere.Builder.stacks","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/stacks.html","searchKeys":["stacks","fun stacks(stacks: Int): Sphere.Builder","io.github.sceneview.geometries.Sphere.Builder.stacks"]},{"name":"fun startMirroring(sceneView: SceneView, surface: Surface, left: Int = 0, bottom: Int = 0, width: Int = sceneView.width, height: Int = sceneView.height)","description":"io.github.sceneview.utils.SurfaceMirrorer.startMirroring","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/start-mirroring.html","searchKeys":["startMirroring","fun startMirroring(sceneView: SceneView, surface: Surface, left: Int = 0, bottom: Int = 0, width: Int = sceneView.width, height: Int = sceneView.height)","io.github.sceneview.utils.SurfaceMirrorer.startMirroring"]},{"name":"fun startMirroring(surface: Surface)","description":"io.github.sceneview.SceneView.startMirroring","location":"sceneview/io.github.sceneview/-scene-view/start-mirroring.html","searchKeys":["startMirroring","fun startMirroring(surface: Surface)","io.github.sceneview.SceneView.startMirroring"]},{"name":"fun startRecording(mediaRecorder: MediaRecorder)","description":"io.github.sceneview.SceneView.startRecording","location":"sceneview/io.github.sceneview/-scene-view/start-recording.html","searchKeys":["startRecording","fun startRecording(mediaRecorder: MediaRecorder)","io.github.sceneview.SceneView.startRecording"]},{"name":"fun stopAnimation(animationIndex: Int)","description":"io.github.sceneview.node.ModelNode.stopAnimation","location":"sceneview/io.github.sceneview.node/-model-node/stop-animation.html","searchKeys":["stopAnimation","fun stopAnimation(animationIndex: Int)","io.github.sceneview.node.ModelNode.stopAnimation"]},{"name":"fun stopAnimation(animationName: String)","description":"io.github.sceneview.node.ModelNode.stopAnimation","location":"sceneview/io.github.sceneview.node/-model-node/stop-animation.html","searchKeys":["stopAnimation","fun stopAnimation(animationName: String)","io.github.sceneview.node.ModelNode.stopAnimation"]},{"name":"fun stopMirroring(sceneView: SceneView, surface: Surface)","description":"io.github.sceneview.utils.SurfaceMirrorer.stopMirroring","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/stop-mirroring.html","searchKeys":["stopMirroring","fun stopMirroring(sceneView: SceneView, surface: Surface)","io.github.sceneview.utils.SurfaceMirrorer.stopMirroring"]},{"name":"fun stopMirroring(surface: Surface)","description":"io.github.sceneview.SceneView.stopMirroring","location":"sceneview/io.github.sceneview/-scene-view/stop-mirroring.html","searchKeys":["stopMirroring","fun stopMirroring(surface: Surface)","io.github.sceneview.SceneView.stopMirroring"]},{"name":"fun stopRecording(mediaRecorder: MediaRecorder)","description":"io.github.sceneview.SceneView.stopRecording","location":"sceneview/io.github.sceneview/-scene-view/stop-recording.html","searchKeys":["stopRecording","fun stopRecording(mediaRecorder: MediaRecorder)","io.github.sceneview.SceneView.stopRecording"]},{"name":"fun stream(stream: Stream): VideoTexture.Builder","description":"io.github.sceneview.texture.VideoTexture.Builder.stream","location":"sceneview/io.github.sceneview.texture/-video-texture/-builder/stream.html","searchKeys":["stream","fun stream(stream: Stream): VideoTexture.Builder","io.github.sceneview.texture.VideoTexture.Builder.stream"]},{"name":"fun transform(position: Position = this.position, quaternion: Quaternion = this.quaternion, scale: Scale = this.scale, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","description":"io.github.sceneview.node.Node.transform","location":"sceneview/io.github.sceneview.node/-node/transform.html","searchKeys":["transform","fun transform(position: Position = this.position, quaternion: Quaternion = this.quaternion, scale: Scale = this.scale, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","io.github.sceneview.node.Node.transform"]},{"name":"fun transform(position: Position = this.position, rotation: Rotation = this.rotation, scale: Scale = this.scale, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","description":"io.github.sceneview.node.Node.transform","location":"sceneview/io.github.sceneview.node/-node/transform.html","searchKeys":["transform","fun transform(position: Position = this.position, rotation: Rotation = this.rotation, scale: Scale = this.scale, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","io.github.sceneview.node.Node.transform"]},{"name":"fun type(type: TextureType): ImageTexture.Builder","description":"io.github.sceneview.texture.ImageTexture.Builder.type","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/type.html","searchKeys":["type","fun type(type: TextureType): ImageTexture.Builder","io.github.sceneview.texture.ImageTexture.Builder.type"]},{"name":"fun update(center: Position = this.center, size: Size = this.size): Cube","description":"io.github.sceneview.geometries.Cube.update","location":"sceneview/io.github.sceneview.geometries/-cube/update.html","searchKeys":["update","fun update(center: Position = this.center, size: Size = this.size): Cube","io.github.sceneview.geometries.Cube.update"]},{"name":"fun update(positions: List<Position>, normal: Direction? = DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = DEFAULT_UV_COORDINATE, color: Color? = null): Polygon","description":"io.github.sceneview.geometries.Polygon.update","location":"sceneview/io.github.sceneview.geometries/-polygon/update.html","searchKeys":["update","fun update(positions: List<Position>, normal: Direction? = DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = DEFAULT_UV_COORDINATE, color: Color? = null): Polygon","io.github.sceneview.geometries.Polygon.update"]},{"name":"fun update(radius: Float = this.radius, center: Position = this.center, stacks: Int = this.stacks, slices: Int = this.slices): Sphere","description":"io.github.sceneview.geometries.Sphere.update","location":"sceneview/io.github.sceneview.geometries/-sphere/update.html","searchKeys":["update","fun update(radius: Float = this.radius, center: Position = this.center, stacks: Int = this.stacks, slices: Int = this.slices): Sphere","io.github.sceneview.geometries.Sphere.update"]},{"name":"fun update(radius: Float = this.radius, height: Float = this.height, center: Position = this.center, sideCount: Int = this.sideCount): Cylinder","description":"io.github.sceneview.geometries.Cylinder.update","location":"sceneview/io.github.sceneview.geometries/-cylinder/update.html","searchKeys":["update","fun update(radius: Float = this.radius, height: Float = this.height, center: Position = this.center, sideCount: Int = this.sideCount): Cylinder","io.github.sceneview.geometries.Cylinder.update"]},{"name":"fun update(size: Size = this.size, center: Position = this.center, normal: Direction = this.normal): Plane","description":"io.github.sceneview.geometries.Plane.update","location":"sceneview/io.github.sceneview.geometries/-plane/update.html","searchKeys":["update","fun update(size: Size = this.size, center: Position = this.center, normal: Direction = this.normal): Plane","io.github.sceneview.geometries.Plane.update"]},{"name":"fun update(vertices: List<Geometry.Vertex> = this.vertices, indices: List<Geometry.PrimitiveIndices> = this.indices): Geometry","description":"io.github.sceneview.geometries.Geometry.update","location":"sceneview/io.github.sceneview.geometries/-geometry/update.html","searchKeys":["update","fun update(vertices: List<Geometry.Vertex> = this.vertices, indices: List<Geometry.PrimitiveIndices> = this.indices): Geometry","io.github.sceneview.geometries.Geometry.update"]},{"name":"fun updateCollisionShape()","description":"io.github.sceneview.node.RenderableNode.updateCollisionShape","location":"sceneview/io.github.sceneview.node/-renderable-node/update-collision-shape.html","searchKeys":["updateCollisionShape","fun updateCollisionShape()","io.github.sceneview.node.RenderableNode.updateCollisionShape"]},{"name":"fun updateGeometry(center: Position = geometry.center, size: Size = geometry.size)","description":"io.github.sceneview.node.CubeNode.updateGeometry","location":"sceneview/io.github.sceneview.node/-cube-node/update-geometry.html","searchKeys":["updateGeometry","fun updateGeometry(center: Position = geometry.center, size: Size = geometry.size)","io.github.sceneview.node.CubeNode.updateGeometry"]},{"name":"fun updateGeometry(positions: List<Position> = boundary.map { it.position }, normal: Direction? = Polygon.DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = Polygon.DEFAULT_UV_COORDINATE, color: Color? = null)","description":"io.github.sceneview.node.PolygonNode.updateGeometry","location":"sceneview/io.github.sceneview.node/-polygon-node/update-geometry.html","searchKeys":["updateGeometry","fun updateGeometry(positions: List<Position> = boundary.map { it.position }, normal: Direction? = Polygon.DEFAULT_NORMAL, uvCoordinate: UvCoordinate? = Polygon.DEFAULT_UV_COORDINATE, color: Color? = null)","io.github.sceneview.node.PolygonNode.updateGeometry"]},{"name":"fun updateGeometry(radius: Float = geometry.radius, center: Position = geometry.center, stacks: Int = geometry.stacks, slices: Int = geometry.slices)","description":"io.github.sceneview.node.SphereNode.updateGeometry","location":"sceneview/io.github.sceneview.node/-sphere-node/update-geometry.html","searchKeys":["updateGeometry","fun updateGeometry(radius: Float = geometry.radius, center: Position = geometry.center, stacks: Int = geometry.stacks, slices: Int = geometry.slices)","io.github.sceneview.node.SphereNode.updateGeometry"]},{"name":"fun updateGeometry(radius: Float = geometry.radius, height: Float = geometry.height, center: Position = geometry.center, sideCount: Int = geometry.sideCount)","description":"io.github.sceneview.node.CylinderNode.updateGeometry","location":"sceneview/io.github.sceneview.node/-cylinder-node/update-geometry.html","searchKeys":["updateGeometry","fun updateGeometry(radius: Float = geometry.radius, height: Float = geometry.height, center: Position = geometry.center, sideCount: Int = geometry.sideCount)","io.github.sceneview.node.CylinderNode.updateGeometry"]},{"name":"fun updateGeometry(size: Size = geometry.size, center: Position = geometry.center, normal: Direction = geometry.normal)","description":"io.github.sceneview.node.PlaneNode.updateGeometry","location":"sceneview/io.github.sceneview.node/-plane-node/update-geometry.html","searchKeys":["updateGeometry","fun updateGeometry(size: Size = geometry.size, center: Position = geometry.center, normal: Direction = geometry.normal)","io.github.sceneview.node.PlaneNode.updateGeometry"]},{"name":"fun updateGeometry(vertices: List<Geometry.Vertex> = geometry.vertices, indices: List<Geometry.PrimitiveIndices> = geometry.indices)","description":"io.github.sceneview.node.GeometryNode.updateGeometry","location":"sceneview/io.github.sceneview.node/-geometry-node/update-geometry.html","searchKeys":["updateGeometry","fun updateGeometry(vertices: List<Geometry.Vertex> = geometry.vertices, indices: List<Geometry.PrimitiveIndices> = geometry.indices)","io.github.sceneview.node.GeometryNode.updateGeometry"]},{"name":"fun updateProjection()","description":"io.github.sceneview.node.CameraNode.updateProjection","location":"sceneview/io.github.sceneview.node/-camera-node/update-projection.html","searchKeys":["updateProjection","fun updateProjection()","io.github.sceneview.node.CameraNode.updateProjection"]},{"name":"fun vertices(vertices: List<Geometry.Vertex>): Geometry.Builder","description":"io.github.sceneview.geometries.Geometry.Builder.vertices","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/vertices.html","searchKeys":["vertices","fun vertices(vertices: List<Geometry.Vertex>): Geometry.Builder","io.github.sceneview.geometries.Geometry.Builder.vertices"]},{"name":"fun worldToScreenPoint(point: Vector3): Vector3","description":"io.github.sceneview.node.CameraNode.worldToScreenPoint","location":"sceneview/io.github.sceneview.node/-camera-node/world-to-screen-point.html","searchKeys":["worldToScreenPoint","fun worldToScreenPoint(point: Vector3): Vector3","io.github.sceneview.node.CameraNode.worldToScreenPoint"]},{"name":"inline fun <T : Node> rememberNode(crossinline creator: () -> T): T","description":"io.github.sceneview.rememberNode","location":"sceneview/io.github.sceneview/remember-node.html","searchKeys":["rememberNode","inline fun <T : Node> rememberNode(crossinline creator: () -> T): T","io.github.sceneview.rememberNode"]},{"name":"inline operator fun <T : ModelNode.ChildNode> List<T>.get(name: String): T?","description":"io.github.sceneview.node.get","location":"sceneview/io.github.sceneview.node/get.html","searchKeys":["get","inline operator fun <T : ModelNode.ChildNode> List<T>.get(name: String): T?","io.github.sceneview.node.get"]},{"name":"inner class CameraGestureListener : CameraGestureDetector.OnCameraGestureListener","description":"io.github.sceneview.SceneView.CameraGestureListener","location":"sceneview/io.github.sceneview/-scene-view/-camera-gesture-listener/index.html","searchKeys":["CameraGestureListener","inner class CameraGestureListener : CameraGestureDetector.OnCameraGestureListener","io.github.sceneview.SceneView.CameraGestureListener"]},{"name":"interface AnimatableModel","description":"io.github.sceneview.animation.AnimatableModel","location":"sceneview/io.github.sceneview.animation/-animatable-model/index.html","searchKeys":["AnimatableModel","interface AnimatableModel","io.github.sceneview.animation.AnimatableModel"]},{"name":"interface CameraComponent : Component","description":"io.github.sceneview.components.CameraComponent","location":"sceneview/io.github.sceneview.components/-camera-component/index.html","searchKeys":["CameraComponent","interface CameraComponent : Component","io.github.sceneview.components.CameraComponent"]},{"name":"interface ChildNode","description":"io.github.sceneview.node.ModelNode.ChildNode","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/index.html","searchKeys":["ChildNode","interface ChildNode","io.github.sceneview.node.ModelNode.ChildNode"]},{"name":"interface Component","description":"io.github.sceneview.components.Component","location":"sceneview/io.github.sceneview.components/-component/index.html","searchKeys":["Component","interface Component","io.github.sceneview.components.Component"]},{"name":"interface LightComponent : Component","description":"io.github.sceneview.components.LightComponent","location":"sceneview/io.github.sceneview.components/-light-component/index.html","searchKeys":["LightComponent","interface LightComponent : Component","io.github.sceneview.components.LightComponent"]},{"name":"interface LoadGltfListener","description":"com.google.ar.sceneform.rendering.LoadGltfListener","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/index.html","searchKeys":["LoadGltfListener","interface LoadGltfListener","com.google.ar.sceneform.rendering.LoadGltfListener"]},{"name":"interface OnCameraGestureListener","description":"io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-on-camera-gesture-listener/index.html","searchKeys":["OnCameraGestureListener","interface OnCameraGestureListener","io.github.sceneview.gesture.CameraGestureDetector.OnCameraGestureListener"]},{"name":"interface OnGestureListener","description":"io.github.sceneview.gesture.GestureDetector.OnGestureListener","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-on-gesture-listener/index.html","searchKeys":["OnGestureListener","interface OnGestureListener","io.github.sceneview.gesture.GestureDetector.OnGestureListener"]},{"name":"interface OnMoveListener","description":"io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-on-move-listener/index.html","searchKeys":["OnMoveListener","interface OnMoveListener","io.github.sceneview.gesture.MoveGestureDetector.OnMoveListener"]},{"name":"interface OnNodeGestureListener : GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener, GestureDetector.OnContextClickListener, MoveGestureDetector.OnMoveListener, RotateGestureDetector.OnRotateListener, ScaleGestureDetector.OnScaleListener","description":"io.github.sceneview.node.OnNodeGestureListener","location":"sceneview/io.github.sceneview.node/-on-node-gesture-listener/index.html","searchKeys":["OnNodeGestureListener","interface OnNodeGestureListener : GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener, GestureDetector.OnContextClickListener, MoveGestureDetector.OnMoveListener, RotateGestureDetector.OnRotateListener, ScaleGestureDetector.OnScaleListener","io.github.sceneview.node.OnNodeGestureListener"]},{"name":"interface OnRotateListener","description":"io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-on-rotate-listener/index.html","searchKeys":["OnRotateListener","interface OnRotateListener","io.github.sceneview.gesture.RotateGestureDetector.OnRotateListener"]},{"name":"interface OnScaleListener","description":"io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-on-scale-listener/index.html","searchKeys":["OnScaleListener","interface OnScaleListener","io.github.sceneview.gesture.ScaleGestureDetector.OnScaleListener"]},{"name":"interface OnViewSizeChangedListener","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.OnViewSizeChangedListener","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/-on-view-size-changed-listener/index.html","searchKeys":["OnViewSizeChangedListener","interface OnViewSizeChangedListener","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.OnViewSizeChangedListener"]},{"name":"interface RenderableComponent : Component","description":"io.github.sceneview.components.RenderableComponent","location":"sceneview/io.github.sceneview.components/-renderable-component/index.html","searchKeys":["RenderableComponent","interface RenderableComponent : Component","io.github.sceneview.components.RenderableComponent"]},{"name":"interface ResourceHolder","description":"com.google.ar.sceneform.resources.ResourceHolder","location":"sceneview/com.google.ar.sceneform.resources/-resource-holder/index.html","searchKeys":["ResourceHolder","interface ResourceHolder","com.google.ar.sceneform.resources.ResourceHolder"]},{"name":"interface SimpleOnMoveListener : MoveGestureDetector.OnMoveListener","description":"io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-simple-on-move-listener/index.html","searchKeys":["SimpleOnMoveListener","interface SimpleOnMoveListener : MoveGestureDetector.OnMoveListener","io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener"]},{"name":"interface SimpleOnRotateListener : RotateGestureDetector.OnRotateListener","description":"io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-simple-on-rotate-listener/index.html","searchKeys":["SimpleOnRotateListener","interface SimpleOnRotateListener : RotateGestureDetector.OnRotateListener","io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener"]},{"name":"interface SimpleOnScaleListener : ScaleGestureDetector.OnScaleListener","description":"io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-simple-on-scale-listener/index.html","searchKeys":["SimpleOnScaleListener","interface SimpleOnScaleListener : ScaleGestureDetector.OnScaleListener","io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener"]},{"name":"interface SkinningModifier","description":"com.google.ar.sceneform.rendering.RenderableInstance.SkinningModifier","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/-skinning-modifier/index.html","searchKeys":["SkinningModifier","interface SkinningModifier","com.google.ar.sceneform.rendering.RenderableInstance.SkinningModifier"]},{"name":"interface TransformProvider","description":"io.github.sceneview.collision.TransformProvider","location":"sceneview/io.github.sceneview.collision/-transform-provider/index.html","searchKeys":["TransformProvider","interface TransformProvider","io.github.sceneview.collision.TransformProvider"]},{"name":"interface ViewSizer","description":"com.google.ar.sceneform.rendering.ViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-view-sizer/index.html","searchKeys":["ViewSizer","interface ViewSizer","com.google.ar.sceneform.rendering.ViewSizer"]},{"name":"lateinit var event: MotionEvent","description":"io.github.sceneview.gesture.ScaleGestureDetector.event","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/event.html","searchKeys":["event","lateinit var event: MotionEvent","io.github.sceneview.gesture.ScaleGestureDetector.event"]},{"name":"lateinit var view: View","description":"io.github.sceneview.node.CameraNode.view","location":"sceneview/io.github.sceneview.node/-camera-node/view.html","searchKeys":["view","lateinit var view: View","io.github.sceneview.node.CameraNode.view"]},{"name":"object Companion","description":"io.github.sceneview.SceneView.Companion","location":"sceneview/io.github.sceneview/-scene-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.SceneView.Companion"]},{"name":"object Companion","description":"io.github.sceneview.collision.CollisionSystem.Companion","location":"sceneview/io.github.sceneview.collision/-collision-system/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.collision.CollisionSystem.Companion"]},{"name":"object Companion","description":"io.github.sceneview.geometries.Cube.Companion","location":"sceneview/io.github.sceneview.geometries/-cube/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.geometries.Cube.Companion"]},{"name":"object Companion","description":"io.github.sceneview.geometries.Cylinder.Companion","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.geometries.Cylinder.Companion"]},{"name":"object Companion","description":"io.github.sceneview.geometries.Plane.Companion","location":"sceneview/io.github.sceneview.geometries/-plane/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.geometries.Plane.Companion"]},{"name":"object Companion","description":"io.github.sceneview.geometries.Polygon.Companion","location":"sceneview/io.github.sceneview.geometries/-polygon/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.geometries.Polygon.Companion"]},{"name":"object Companion","description":"io.github.sceneview.geometries.Sphere.Companion","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.geometries.Sphere.Companion"]},{"name":"object Companion","description":"io.github.sceneview.loaders.ModelLoader.Companion","location":"sceneview/io.github.sceneview.loaders/-model-loader/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.loaders.ModelLoader.Companion"]},{"name":"object Companion","description":"io.github.sceneview.node.ViewNode.Companion","location":"sceneview/io.github.sceneview.node/-view-node/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.node.ViewNode.Companion"]},{"name":"object Companion","description":"io.github.sceneview.texture.ImageTexture.Companion","location":"sceneview/io.github.sceneview.texture/-image-texture/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.texture.ImageTexture.Companion"]},{"name":"object FileLoader","description":"io.github.sceneview.utils.FileLoader","location":"sceneview/io.github.sceneview.utils/-file-loader/index.html","searchKeys":["FileLoader","object FileLoader","io.github.sceneview.utils.FileLoader"]},{"name":"object NodeAnimator","description":"io.github.sceneview.animation.NodeAnimator","location":"sceneview/io.github.sceneview.animation/-node-animator/index.html","searchKeys":["NodeAnimator","object NodeAnimator","io.github.sceneview.animation.NodeAnimator"]},{"name":"object OpenGL","description":"io.github.sceneview.utils.OpenGL","location":"sceneview/io.github.sceneview.utils/-open-g-l/index.html","searchKeys":["OpenGL","object OpenGL","io.github.sceneview.utils.OpenGL"]},{"name":"open class AndroidPreconditions","description":"com.google.ar.sceneform.utilities.AndroidPreconditions","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/index.html","searchKeys":["AndroidPreconditions","open class AndroidPreconditions","com.google.ar.sceneform.utilities.AndroidPreconditions"]},{"name":"open class Box : CollisionShape","description":"io.github.sceneview.collision.Box","location":"sceneview/io.github.sceneview.collision/-box/index.html","searchKeys":["Box","open class Box : CollisionShape","io.github.sceneview.collision.Box"]},{"name":"open class BufferHelper","description":"com.google.ar.sceneform.utilities.BufferHelper","location":"sceneview/com.google.ar.sceneform.utilities/-buffer-helper/index.html","searchKeys":["BufferHelper","open class BufferHelper","com.google.ar.sceneform.utilities.BufferHelper"]},{"name":"open class Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/index.html","searchKeys":["Builder","open class Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder"]},{"name":"open class Builder(val primitiveType: RenderableManager.PrimitiveType = PrimitiveType.TRIANGLES)","description":"io.github.sceneview.geometries.Geometry.Builder","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/index.html","searchKeys":["Builder","open class Builder(val primitiveType: RenderableManager.PrimitiveType = PrimitiveType.TRIANGLES)","io.github.sceneview.geometries.Geometry.Builder"]},{"name":"open class CameraGestureDetector(sceneView: SceneView, listener: CameraGestureDetector.OnCameraGestureListener)","description":"io.github.sceneview.gesture.CameraGestureDetector","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/index.html","searchKeys":["CameraGestureDetector","open class CameraGestureDetector(sceneView: SceneView, listener: CameraGestureDetector.OnCameraGestureListener)","io.github.sceneview.gesture.CameraGestureDetector"]},{"name":"open class CameraNode(val engine: Engine, val entity: Entity, parent: Node? = null) : Node, CameraComponent","description":"io.github.sceneview.node.CameraNode","location":"sceneview/io.github.sceneview.node/-camera-node/index.html","searchKeys":["CameraNode","open class CameraNode(val engine: Engine, val entity: Entity, parent: Node? = null) : Node, CameraComponent","io.github.sceneview.node.CameraNode"]},{"name":"open class ChangeId","description":"io.github.sceneview.collision.ChangeId","location":"sceneview/io.github.sceneview.collision/-change-id/index.html","searchKeys":["ChangeId","open class ChangeId","io.github.sceneview.collision.ChangeId"]},{"name":"open class Collider","description":"io.github.sceneview.collision.Collider","location":"sceneview/io.github.sceneview.collision/-collider/index.html","searchKeys":["Collider","open class Collider","io.github.sceneview.collision.Collider"]},{"name":"open class Color","description":"com.google.ar.sceneform.rendering.Color","location":"sceneview/com.google.ar.sceneform.rendering/-color/index.html","searchKeys":["Color","open class Color","com.google.ar.sceneform.rendering.Color"]},{"name":"open class Constants","description":"com.google.flatbuffers.Constants","location":"sceneview/com.google.flatbuffers/-constants/index.html","searchKeys":["Constants","open class Constants","com.google.flatbuffers.Constants"]},{"name":"open class CubeNode : GeometryNode","description":"io.github.sceneview.node.CubeNode","location":"sceneview/io.github.sceneview.node/-cube-node/index.html","searchKeys":["CubeNode","open class CubeNode : GeometryNode","io.github.sceneview.node.CubeNode"]},{"name":"open class CylinderNode : GeometryNode","description":"io.github.sceneview.node.CylinderNode","location":"sceneview/io.github.sceneview.node/-cylinder-node/index.html","searchKeys":["CylinderNode","open class CylinderNode : GeometryNode","io.github.sceneview.node.CylinderNode"]},{"name":"open class DpToMetersViewSizer : ViewSizer","description":"com.google.ar.sceneform.rendering.DpToMetersViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-dp-to-meters-view-sizer/index.html","searchKeys":["DpToMetersViewSizer","open class DpToMetersViewSizer : ViewSizer","com.google.ar.sceneform.rendering.DpToMetersViewSizer"]},{"name":"open class Environment(val engine: Engine, val indirectLight: IndirectLight? = null, val skybox: Skybox? = null, val sphericalHarmonics: FloatArray? = null) : Closeable","description":"io.github.sceneview.environment.Environment","location":"sceneview/io.github.sceneview.environment/-environment/index.html","searchKeys":["Environment","open class Environment(val engine: Engine, val indirectLight: IndirectLight? = null, val skybox: Skybox? = null, val sphericalHarmonics: FloatArray? = null) : Closeable","io.github.sceneview.environment.Environment"]},{"name":"open class ExternalTexture","description":"com.google.ar.sceneform.rendering.ExternalTexture","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/index.html","searchKeys":["ExternalTexture","open class ExternalTexture","com.google.ar.sceneform.rendering.ExternalTexture"]},{"name":"open class FixedHeightViewSizer : ViewSizer","description":"com.google.ar.sceneform.rendering.FixedHeightViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-height-view-sizer/index.html","searchKeys":["FixedHeightViewSizer","open class FixedHeightViewSizer : ViewSizer","com.google.ar.sceneform.rendering.FixedHeightViewSizer"]},{"name":"open class FixedWidthViewSizer : ViewSizer","description":"com.google.ar.sceneform.rendering.FixedWidthViewSizer","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-width-view-sizer/index.html","searchKeys":["FixedWidthViewSizer","open class FixedWidthViewSizer : ViewSizer","com.google.ar.sceneform.rendering.FixedWidthViewSizer"]},{"name":"open class FlatBufferBuilder","description":"com.google.flatbuffers.FlatBufferBuilder","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/index.html","searchKeys":["FlatBufferBuilder","open class FlatBufferBuilder","com.google.flatbuffers.FlatBufferBuilder"]},{"name":"open class Geometry(engine: Engine, val primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, val vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, val indexBuffer: IndexBuffer, var primitivesOffsets: List<IntRange>, var boundingBox: Box)","description":"io.github.sceneview.geometries.Geometry","location":"sceneview/io.github.sceneview.geometries/-geometry/index.html","searchKeys":["Geometry","open class Geometry(engine: Engine, val primitiveType: RenderableManager.PrimitiveType, vertices: List<Geometry.Vertex>, val vertexBuffer: VertexBuffer, indices: List<Geometry.PrimitiveIndices>, val indexBuffer: IndexBuffer, var primitivesOffsets: List<IntRange>, var boundingBox: Box)","io.github.sceneview.geometries.Geometry"]},{"name":"open class GeometryNode(val engine: Engine, val entity: Entity = EntityManager.get().create(), parent: Node? = null, val geometry: Geometry, materialInstances: List<MaterialInstance?>, primitivesOffsets: List<IntRange> = geometry.primitivesOffsets, builder: RenderableManager.Builder.() -> Unit = {}) : RenderableNode","description":"io.github.sceneview.node.GeometryNode","location":"sceneview/io.github.sceneview.node/-geometry-node/index.html","searchKeys":["GeometryNode","open class GeometryNode(val engine: Engine, val entity: Entity = EntityManager.get().create(), parent: Node? = null, val geometry: Geometry, materialInstances: List<MaterialInstance?>, primitivesOffsets: List<IntRange> = geometry.primitivesOffsets, builder: RenderableManager.Builder.() -> Unit = {}) : RenderableNode","io.github.sceneview.node.GeometryNode"]},{"name":"open class GestureDetector(context: Context, var nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit)","description":"io.github.sceneview.gesture.GestureDetector","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/index.html","searchKeys":["GestureDetector","open class GestureDetector(context: Context, var nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit)","io.github.sceneview.gesture.GestureDetector"]},{"name":"open class HDREnvironment(val engine: Engine, iblPrefilter: IBLPrefilter, cubemap: Texture? = null, indirectLightIrradiance: FloatArray? = null, indirectLightIntensity: Float? = null, indirectLightSpecularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox, val sharedCubemap: Boolean = false) : Environment","description":"io.github.sceneview.environment.HDREnvironment","location":"sceneview/io.github.sceneview.environment/-h-d-r-environment/index.html","searchKeys":["HDREnvironment","open class HDREnvironment(val engine: Engine, iblPrefilter: IBLPrefilter, cubemap: Texture? = null, indirectLightIrradiance: FloatArray? = null, indirectLightIntensity: Float? = null, indirectLightSpecularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox, val sharedCubemap: Boolean = false) : Environment","io.github.sceneview.environment.HDREnvironment"]},{"name":"open class HitTestGestureDetector(context: Context, collisionSystem: CollisionSystem) : GestureDetector","description":"io.github.sceneview.gesture.HitTestGestureDetector","location":"sceneview/io.github.sceneview.gesture/-hit-test-gesture-detector/index.html","searchKeys":["HitTestGestureDetector","open class HitTestGestureDetector(context: Context, collisionSystem: CollisionSystem) : GestureDetector","io.github.sceneview.gesture.HitTestGestureDetector"]},{"name":"open class ImageNode : PlaneNode","description":"io.github.sceneview.node.ImageNode","location":"sceneview/io.github.sceneview.node/-image-node/index.html","searchKeys":["ImageNode","open class ImageNode : PlaneNode","io.github.sceneview.node.ImageNode"]},{"name":"open class LightNode(val engine: Engine, val entity: Entity, parent: Node? = null) : Node, LightComponent","description":"io.github.sceneview.node.LightNode","location":"sceneview/io.github.sceneview.node/-light-node/index.html","searchKeys":["LightNode","open class LightNode(val engine: Engine, val entity: Entity, parent: Node? = null) : Node, LightComponent","io.github.sceneview.node.LightNode"]},{"name":"open class LoadHelper","description":"com.google.ar.sceneform.utilities.LoadHelper","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/index.html","searchKeys":["LoadHelper","open class LoadHelper","com.google.ar.sceneform.utilities.LoadHelper"]},{"name":"open class LoadRenderableFromFilamentGltfTask<T : Renderable?>","description":"com.google.ar.sceneform.rendering.LoadRenderableFromFilamentGltfTask","location":"sceneview/com.google.ar.sceneform.rendering/-load-renderable-from-filament-gltf-task/index.html","searchKeys":["LoadRenderableFromFilamentGltfTask","open class LoadRenderableFromFilamentGltfTask<T : Renderable?>","com.google.ar.sceneform.rendering.LoadRenderableFromFilamentGltfTask"]},{"name":"open class LullModel","description":"com.google.ar.sceneform.rendering.LullModel","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/index.html","searchKeys":["LullModel","open class LullModel","com.google.ar.sceneform.rendering.LullModel"]},{"name":"open class Material","description":"com.google.ar.sceneform.rendering.Material","location":"sceneview/com.google.ar.sceneform.rendering/-material/index.html","searchKeys":["Material","open class Material","com.google.ar.sceneform.rendering.Material"]},{"name":"open class MathHelper","description":"io.github.sceneview.collision.MathHelper","location":"sceneview/io.github.sceneview.collision/-math-helper/index.html","searchKeys":["MathHelper","open class MathHelper","io.github.sceneview.collision.MathHelper"]},{"name":"open class Matrix","description":"io.github.sceneview.collision.Matrix","location":"sceneview/io.github.sceneview.collision/-matrix/index.html","searchKeys":["Matrix","open class Matrix","io.github.sceneview.collision.Matrix"]},{"name":"open class MeshNode(val engine: Engine, primitiveType: RenderableManager.PrimitiveType, val vertexBuffer: VertexBuffer, val indexBuffer: IndexBuffer, val boundingBox: Box? = null, materialInstance: MaterialInstance? = null, parent: Node? = null, builder: RenderableManager.Builder.() -> Unit = {}) : RenderableNode","description":"io.github.sceneview.node.MeshNode","location":"sceneview/io.github.sceneview.node/-mesh-node/index.html","searchKeys":["MeshNode","open class MeshNode(val engine: Engine, primitiveType: RenderableManager.PrimitiveType, val vertexBuffer: VertexBuffer, val indexBuffer: IndexBuffer, val boundingBox: Box? = null, materialInstance: MaterialInstance? = null, parent: Node? = null, builder: RenderableManager.Builder.() -> Unit = {}) : RenderableNode","io.github.sceneview.node.MeshNode"]},{"name":"open class ModelAnimation","description":"io.github.sceneview.animation.ModelAnimation","location":"sceneview/io.github.sceneview.animation/-model-animation/index.html","searchKeys":["ModelAnimation","open class ModelAnimation","io.github.sceneview.animation.ModelAnimation"]},{"name":"open class ModelAnimator","description":"io.github.sceneview.animation.ModelAnimator","location":"sceneview/io.github.sceneview.animation/-model-animator/index.html","searchKeys":["ModelAnimator","open class ModelAnimator","io.github.sceneview.animation.ModelAnimator"]},{"name":"open class ModelNode(val modelInstance: ModelInstance, parent: Node? = null, autoAnimate: Boolean = true, scaleToUnits: Float? = null, centerOrigin: Position? = null) : Node","description":"io.github.sceneview.node.ModelNode","location":"sceneview/io.github.sceneview.node/-model-node/index.html","searchKeys":["ModelNode","open class ModelNode(val modelInstance: ModelInstance, parent: Node? = null, autoAnimate: Boolean = true, scaleToUnits: Float? = null, centerOrigin: Position? = null) : Node","io.github.sceneview.node.ModelNode"]},{"name":"open class ModelRenderable : Renderable","description":"com.google.ar.sceneform.rendering.ModelRenderable","location":"sceneview/com.google.ar.sceneform.rendering/-model-renderable/index.html","searchKeys":["ModelRenderable","open class ModelRenderable : Renderable","com.google.ar.sceneform.rendering.ModelRenderable"]},{"name":"open class MoveGestureDetector(context: Context, listener: MoveGestureDetector.OnMoveListener)","description":"io.github.sceneview.gesture.MoveGestureDetector","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/index.html","searchKeys":["MoveGestureDetector","open class MoveGestureDetector(context: Context, listener: MoveGestureDetector.OnMoveListener)","io.github.sceneview.gesture.MoveGestureDetector"]},{"name":"open class MovingAverage","description":"com.google.ar.sceneform.utilities.MovingAverage","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average/index.html","searchKeys":["MovingAverage","open class MovingAverage","com.google.ar.sceneform.utilities.MovingAverage"]},{"name":"open class MovingAverageMillisecondsTracker","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/index.html","searchKeys":["MovingAverageMillisecondsTracker","open class MovingAverageMillisecondsTracker","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker"]},{"name":"open class Node(val engine: Engine, val entity: Entity = EntityManager.get().create(), parent: Node? = null) : GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener, GestureDetector.OnContextClickListener, MoveGestureDetector.OnMoveListener, RotateGestureDetector.OnRotateListener, ScaleGestureDetector.OnScaleListener, TransformProvider","description":"io.github.sceneview.node.Node","location":"sceneview/io.github.sceneview.node/-node/index.html","searchKeys":["Node","open class Node(val engine: Engine, val entity: Entity = EntityManager.get().create(), parent: Node? = null) : GestureDetector.OnGestureListener, GestureDetector.OnDoubleTapListener, GestureDetector.OnContextClickListener, MoveGestureDetector.OnMoveListener, RotateGestureDetector.OnRotateListener, ScaleGestureDetector.OnScaleListener, TransformProvider","io.github.sceneview.node.Node"]},{"name":"open class PickGestureDetector(context: Context, view: View, nodes: () -> List<Node>) : GestureDetector","description":"io.github.sceneview.gesture.PickGestureDetector","location":"sceneview/io.github.sceneview.gesture/-pick-gesture-detector/index.html","searchKeys":["PickGestureDetector","open class PickGestureDetector(context: Context, view: View, nodes: () -> List<Node>) : GestureDetector","io.github.sceneview.gesture.PickGestureDetector"]},{"name":"open class Plane","description":"io.github.sceneview.collision.Plane","location":"sceneview/io.github.sceneview.collision/-plane/index.html","searchKeys":["Plane","open class Plane","io.github.sceneview.collision.Plane"]},{"name":"open class PlaneFactory","description":"com.google.ar.sceneform.rendering.PlaneFactory","location":"sceneview/com.google.ar.sceneform.rendering/-plane-factory/index.html","searchKeys":["PlaneFactory","open class PlaneFactory","com.google.ar.sceneform.rendering.PlaneFactory"]},{"name":"open class PlaneNode : GeometryNode","description":"io.github.sceneview.node.PlaneNode","location":"sceneview/io.github.sceneview.node/-plane-node/index.html","searchKeys":["PlaneNode","open class PlaneNode : GeometryNode","io.github.sceneview.node.PlaneNode"]},{"name":"open class PolygonNode : GeometryNode","description":"io.github.sceneview.node.PolygonNode","location":"sceneview/io.github.sceneview.node/-polygon-node/index.html","searchKeys":["PolygonNode","open class PolygonNode : GeometryNode","io.github.sceneview.node.PolygonNode"]},{"name":"open class Preconditions","description":"io.github.sceneview.collision.Preconditions","location":"sceneview/io.github.sceneview.collision/-preconditions/index.html","searchKeys":["Preconditions","open class Preconditions","io.github.sceneview.collision.Preconditions"]},{"name":"open class PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder","location":"sceneview/io.github.sceneview.animation/-model-animation/-property-values-holder/index.html","searchKeys":["PropertyValuesHolder","open class PropertyValuesHolder","io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder"]},{"name":"open class PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/index.html","searchKeys":["PropertyValuesHolder","open class PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder"]},{"name":"open class Quaternion","description":"io.github.sceneview.collision.Quaternion","location":"sceneview/io.github.sceneview.collision/-quaternion/index.html","searchKeys":["Quaternion","open class Quaternion","io.github.sceneview.collision.Quaternion"]},{"name":"open class QuaternionEvaluator : TypeEvaluator<T> ","description":"io.github.sceneview.collision.QuaternionEvaluator","location":"sceneview/io.github.sceneview.collision/-quaternion-evaluator/index.html","searchKeys":["QuaternionEvaluator","open class QuaternionEvaluator : TypeEvaluator<T> ","io.github.sceneview.collision.QuaternionEvaluator"]},{"name":"open class Ray","description":"io.github.sceneview.collision.Ray","location":"sceneview/io.github.sceneview.collision/-ray/index.html","searchKeys":["Ray","open class Ray","io.github.sceneview.collision.Ray"]},{"name":"open class RayHit","description":"io.github.sceneview.collision.RayHit","location":"sceneview/io.github.sceneview.collision/-ray-hit/index.html","searchKeys":["RayHit","open class RayHit","io.github.sceneview.collision.RayHit"]},{"name":"open class RenderViewToExternalTexture : FrameLayout","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/index.html","searchKeys":["RenderViewToExternalTexture","open class RenderViewToExternalTexture : FrameLayout","com.google.ar.sceneform.rendering.RenderViewToExternalTexture"]},{"name":"open class RenderableDefinition","description":"com.google.ar.sceneform.rendering.RenderableDefinition","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/index.html","searchKeys":["RenderableDefinition","open class RenderableDefinition","com.google.ar.sceneform.rendering.RenderableDefinition"]},{"name":"open class RenderableInstance : AnimatableModel","description":"com.google.ar.sceneform.rendering.RenderableInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/index.html","searchKeys":["RenderableInstance","open class RenderableInstance : AnimatableModel","com.google.ar.sceneform.rendering.RenderableInstance"]},{"name":"open class RenderableInternalFilamentAssetData : IRenderableInternalData","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/index.html","searchKeys":["RenderableInternalFilamentAssetData","open class RenderableInternalFilamentAssetData : IRenderableInternalData","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData"]},{"name":"open class RenderableNode(val engine: Engine, val entity: Entity = EntityManager.get().create(), parent: Node? = null) : Node, RenderableComponent","description":"io.github.sceneview.node.RenderableNode","location":"sceneview/io.github.sceneview.node/-renderable-node/index.html","searchKeys":["RenderableNode","open class RenderableNode(val engine: Engine, val entity: Entity = EntityManager.get().create(), parent: Node? = null) : Node, RenderableComponent","io.github.sceneview.node.RenderableNode"]},{"name":"open class ResourceManager","description":"com.google.ar.sceneform.rendering.ResourceManager","location":"sceneview/com.google.ar.sceneform.rendering/-resource-manager/index.html","searchKeys":["ResourceManager","open class ResourceManager","com.google.ar.sceneform.rendering.ResourceManager"]},{"name":"open class ResourceRegistry<T> : ResourceHolder","description":"com.google.ar.sceneform.resources.ResourceRegistry","location":"sceneview/com.google.ar.sceneform.resources/-resource-registry/index.html","searchKeys":["ResourceRegistry","open class ResourceRegistry<T> : ResourceHolder","com.google.ar.sceneform.resources.ResourceRegistry"]},{"name":"open class RotateGestureDetector(context: Context, listener: RotateGestureDetector.OnRotateListener)","description":"io.github.sceneview.gesture.RotateGestureDetector","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/index.html","searchKeys":["RotateGestureDetector","open class RotateGestureDetector(context: Context, listener: RotateGestureDetector.OnRotateListener)","io.github.sceneview.gesture.RotateGestureDetector"]},{"name":"open class Sampler","description":"com.google.ar.sceneform.rendering.Texture.Sampler","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/index.html","searchKeys":["Sampler","open class Sampler","com.google.ar.sceneform.rendering.Texture.Sampler"]},{"name":"open class ScaleGestureDetector(context: Context, listener: ScaleGestureDetector.OnScaleListener) : ScaleGestureDetector","description":"io.github.sceneview.gesture.ScaleGestureDetector","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/index.html","searchKeys":["ScaleGestureDetector","open class ScaleGestureDetector(context: Context, listener: ScaleGestureDetector.OnScaleListener) : ScaleGestureDetector","io.github.sceneview.gesture.ScaleGestureDetector"]},{"name":"open class SceneView constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: CameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null) : SurfaceView","description":"io.github.sceneview.SceneView","location":"sceneview/io.github.sceneview/-scene-view/index.html","searchKeys":["SceneView","open class SceneView constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: CameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null) : SurfaceView","io.github.sceneview.SceneView"]},{"name":"open class Sceneform","description":"com.google.ar.sceneform.Sceneform","location":"sceneview/com.google.ar.sceneform/-sceneform/index.html","searchKeys":["Sceneform","open class Sceneform","com.google.ar.sceneform.Sceneform"]},{"name":"open class SelectedNodeGestureDetector(context: Context, var selectedNode: Node?) : GestureDetector","description":"io.github.sceneview.gesture.SelectedNodeGestureDetector","location":"sceneview/io.github.sceneview.gesture/-selected-node-gesture-detector/index.html","searchKeys":["SelectedNodeGestureDetector","open class SelectedNodeGestureDetector(context: Context, var selectedNode: Node?) : GestureDetector","io.github.sceneview.gesture.SelectedNodeGestureDetector"]},{"name":"open class SimpleOnNodeGestureListener : GestureDetector.SimpleOnGestureListener, MoveGestureDetector.SimpleOnMoveListener, RotateGestureDetector.SimpleOnRotateListener, ScaleGestureDetector.SimpleOnScaleListener, OnNodeGestureListener","description":"io.github.sceneview.node.SimpleOnNodeGestureListener","location":"sceneview/io.github.sceneview.node/-simple-on-node-gesture-listener/index.html","searchKeys":["SimpleOnNodeGestureListener","open class SimpleOnNodeGestureListener : GestureDetector.SimpleOnGestureListener, MoveGestureDetector.SimpleOnMoveListener, RotateGestureDetector.SimpleOnRotateListener, ScaleGestureDetector.SimpleOnScaleListener, OnNodeGestureListener","io.github.sceneview.node.SimpleOnNodeGestureListener"]},{"name":"open class Sphere : CollisionShape","description":"io.github.sceneview.collision.Sphere","location":"sceneview/io.github.sceneview.collision/-sphere/index.html","searchKeys":["Sphere","open class Sphere : CollisionShape","io.github.sceneview.collision.Sphere"]},{"name":"open class SphereNode : GeometryNode","description":"io.github.sceneview.node.SphereNode","location":"sceneview/io.github.sceneview.node/-sphere-node/index.html","searchKeys":["SphereNode","open class SphereNode : GeometryNode","io.github.sceneview.node.SphereNode"]},{"name":"open class Struct","description":"com.google.flatbuffers.Struct","location":"sceneview/com.google.flatbuffers/-struct/index.html","searchKeys":["Struct","open class Struct","com.google.flatbuffers.Struct"]},{"name":"open class Submesh","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/index.html","searchKeys":["Submesh","open class Submesh","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh"]},{"name":"open class Table","description":"com.google.flatbuffers.Table","location":"sceneview/com.google.flatbuffers/-table/index.html","searchKeys":["Table","open class Table","com.google.flatbuffers.Table"]},{"name":"open class Texture","description":"com.google.ar.sceneform.rendering.Texture","location":"sceneview/com.google.ar.sceneform.rendering/-texture/index.html","searchKeys":["Texture","open class Texture","com.google.ar.sceneform.rendering.Texture"]},{"name":"open class TextureInternalData","description":"com.google.ar.sceneform.rendering.TextureInternalData","location":"sceneview/com.google.ar.sceneform.rendering/-texture-internal-data/index.html","searchKeys":["TextureInternalData","open class TextureInternalData","com.google.ar.sceneform.rendering.TextureInternalData"]},{"name":"open class ThreadPools","description":"com.google.ar.sceneform.rendering.ThreadPools","location":"sceneview/com.google.ar.sceneform.rendering/-thread-pools/index.html","searchKeys":["ThreadPools","open class ThreadPools","com.google.ar.sceneform.rendering.ThreadPools"]},{"name":"open class TimeAccumulator","description":"com.google.ar.sceneform.utilities.TimeAccumulator","location":"sceneview/com.google.ar.sceneform.utilities/-time-accumulator/index.html","searchKeys":["TimeAccumulator","open class TimeAccumulator","com.google.ar.sceneform.utilities.TimeAccumulator"]},{"name":"open class Vector3","description":"io.github.sceneview.collision.Vector3","location":"sceneview/io.github.sceneview.collision/-vector3/index.html","searchKeys":["Vector3","open class Vector3","io.github.sceneview.collision.Vector3"]},{"name":"open class Vector3Evaluator : TypeEvaluator<T> ","description":"io.github.sceneview.collision.Vector3Evaluator","location":"sceneview/io.github.sceneview.collision/-vector3-evaluator/index.html","searchKeys":["Vector3Evaluator","open class Vector3Evaluator : TypeEvaluator<T> ","io.github.sceneview.collision.Vector3Evaluator"]},{"name":"open class Vertex","description":"com.google.ar.sceneform.rendering.Vertex","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/index.html","searchKeys":["Vertex","open class Vertex","com.google.ar.sceneform.rendering.Vertex"]},{"name":"open class ViewAttachmentManager","description":"com.google.ar.sceneform.rendering.ViewAttachmentManager","location":"sceneview/com.google.ar.sceneform.rendering/-view-attachment-manager/index.html","searchKeys":["ViewAttachmentManager","open class ViewAttachmentManager","com.google.ar.sceneform.rendering.ViewAttachmentManager"]},{"name":"open class ViewNode(val engine: Engine, val modelLoader: ModelLoader, val viewAttachmentManager: ViewAttachmentManager, parent: Node? = null) : Node","description":"io.github.sceneview.node.ViewNode","location":"sceneview/io.github.sceneview.node/-view-node/index.html","searchKeys":["ViewNode","open class ViewNode(val engine: Engine, val modelLoader: ModelLoader, val viewAttachmentManager: ViewAttachmentManager, parent: Node? = null) : Node","io.github.sceneview.node.ViewNode"]},{"name":"open class ViewRenderable : Renderable","description":"com.google.ar.sceneform.rendering.ViewRenderable","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/index.html","searchKeys":["ViewRenderable","open class ViewRenderable : Renderable","com.google.ar.sceneform.rendering.ViewRenderable"]},{"name":"open class ViewRenderableHelpers","description":"com.google.ar.sceneform.rendering.ViewRenderableHelpers","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable-helpers/index.html","searchKeys":["ViewRenderableHelpers","open class ViewRenderableHelpers","com.google.ar.sceneform.rendering.ViewRenderableHelpers"]},{"name":"open class ViewRenderableInternalData","description":"com.google.ar.sceneform.rendering.ViewRenderableInternalData","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable-internal-data/index.html","searchKeys":["ViewRenderableInternalData","open class ViewRenderableInternalData","com.google.ar.sceneform.rendering.ViewRenderableInternalData"]},{"name":"open fun <T : Table?> createSortedVectorOfTables(obj: T, offsets: Array<Int>): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createSortedVectorOfTables","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-sorted-vector-of-tables.html","searchKeys":["createSortedVectorOfTables","open fun <T : Table?> createSortedVectorOfTables(obj: T, offsets: Array<Int>): Int","com.google.flatbuffers.FlatBufferBuilder.createSortedVectorOfTables"]},{"name":"open fun <T> checkNotNull(reference: T): T","description":"io.github.sceneview.collision.Preconditions.checkNotNull","location":"sceneview/io.github.sceneview.collision/-preconditions/check-not-null.html","searchKeys":["checkNotNull","open fun <T> checkNotNull(reference: T): T","io.github.sceneview.collision.Preconditions.checkNotNull"]},{"name":"open fun <T> checkNotNull(reference: T, errorMessage: Any): T","description":"io.github.sceneview.collision.Preconditions.checkNotNull","location":"sceneview/io.github.sceneview.collision/-preconditions/check-not-null.html","searchKeys":["checkNotNull","open fun <T> checkNotNull(reference: T, errorMessage: Any): T","io.github.sceneview.collision.Preconditions.checkNotNull"]},{"name":"open fun Nested(obj: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.Nested","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-nested.html","searchKeys":["Nested","open fun Nested(obj: Int)","com.google.flatbuffers.FlatBufferBuilder.Nested"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): AabbDef","description":"com.google.ar.sceneform.lullmodel.AabbDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): AabbDef","com.google.ar.sceneform.lullmodel.AabbDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ArcDef","description":"com.google.ar.sceneform.lullmodel.ArcDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ArcDef","com.google.ar.sceneform.lullmodel.ArcDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): BlendShape","description":"com.google.ar.sceneform.lullmodel.BlendShape.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): BlendShape","com.google.ar.sceneform.lullmodel.BlendShape.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Color","description":"com.google.ar.sceneform.lullmodel.Color.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Color","com.google.ar.sceneform.lullmodel.Color.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataBool","description":"com.google.ar.sceneform.lullmodel.DataBool.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataBool","com.google.ar.sceneform.lullmodel.DataBool.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataBytes","description":"com.google.ar.sceneform.lullmodel.DataBytes.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataBytes","com.google.ar.sceneform.lullmodel.DataBytes.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataFloat","description":"com.google.ar.sceneform.lullmodel.DataFloat.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataFloat","com.google.ar.sceneform.lullmodel.DataFloat.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataHashValue","description":"com.google.ar.sceneform.lullmodel.DataHashValue.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataHashValue","com.google.ar.sceneform.lullmodel.DataHashValue.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataInt","description":"com.google.ar.sceneform.lullmodel.DataInt.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataInt","com.google.ar.sceneform.lullmodel.DataInt.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataQuat","description":"com.google.ar.sceneform.lullmodel.DataQuat.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataQuat","com.google.ar.sceneform.lullmodel.DataQuat.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataString","description":"com.google.ar.sceneform.lullmodel.DataString.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataString","com.google.ar.sceneform.lullmodel.DataString.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataVec2","description":"com.google.ar.sceneform.lullmodel.DataVec2.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataVec2","com.google.ar.sceneform.lullmodel.DataVec2.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataVec3","description":"com.google.ar.sceneform.lullmodel.DataVec3.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataVec3","com.google.ar.sceneform.lullmodel.DataVec3.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): DataVec4","description":"com.google.ar.sceneform.lullmodel.DataVec4.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): DataVec4","com.google.ar.sceneform.lullmodel.DataVec4.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): KeyVariantPairDef","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): KeyVariantPairDef","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Mat4x3","description":"com.google.ar.sceneform.lullmodel.Mat4x3.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Mat4x3","com.google.ar.sceneform.lullmodel.Mat4x3.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): MaterialDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): MaterialDef","com.google.ar.sceneform.lullmodel.MaterialDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): MaterialTextureDef","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): MaterialTextureDef","com.google.ar.sceneform.lullmodel.MaterialTextureDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelDef","com.google.ar.sceneform.lullmodel.ModelDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelIndexRange","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelIndexRange","com.google.ar.sceneform.lullmodel.ModelIndexRange.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelInstanceDef","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelInstanceDef","com.google.ar.sceneform.lullmodel.ModelInstanceDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineCollidableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineCollidableDef","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineImportDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineImportDef","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineMaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineMaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineRenderableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineRenderableDef","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineSkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): ModelPipelineSkeletonDef","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Quat","description":"com.google.ar.sceneform.lullmodel.Quat.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Quat","com.google.ar.sceneform.lullmodel.Quat.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Rect","description":"com.google.ar.sceneform.lullmodel.Rect.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Rect","com.google.ar.sceneform.lullmodel.Rect.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Recti","description":"com.google.ar.sceneform.lullmodel.Recti.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Recti","com.google.ar.sceneform.lullmodel.Recti.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): SkeletonDef","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): SkeletonDef","com.google.ar.sceneform.lullmodel.SkeletonDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): SubmeshAabb","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): SubmeshAabb","com.google.ar.sceneform.lullmodel.SubmeshAabb.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): TextureDef","description":"com.google.ar.sceneform.lullmodel.TextureDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): TextureDef","com.google.ar.sceneform.lullmodel.TextureDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): VariantArrayDef","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): VariantArrayDef","com.google.ar.sceneform.lullmodel.VariantArrayDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): VariantArrayDefImpl","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): VariantArrayDefImpl","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): VariantMapDef","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): VariantMapDef","com.google.ar.sceneform.lullmodel.VariantMapDef.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Vec2","description":"com.google.ar.sceneform.lullmodel.Vec2.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Vec2","com.google.ar.sceneform.lullmodel.Vec2.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Vec2i","description":"com.google.ar.sceneform.lullmodel.Vec2i.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Vec2i","com.google.ar.sceneform.lullmodel.Vec2i.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Vec3","description":"com.google.ar.sceneform.lullmodel.Vec3.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Vec3","com.google.ar.sceneform.lullmodel.Vec3.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): Vec4","description":"com.google.ar.sceneform.lullmodel.Vec4.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): Vec4","com.google.ar.sceneform.lullmodel.Vec4.__assign"]},{"name":"open fun __assign(_i: Int, _bb: ByteBuffer): VertexAttribute","description":"com.google.ar.sceneform.lullmodel.VertexAttribute.__assign","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/__assign.html","searchKeys":["__assign","open fun __assign(_i: Int, _bb: ByteBuffer): VertexAttribute","com.google.ar.sceneform.lullmodel.VertexAttribute.__assign"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.AabbDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.AabbDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ArcDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ArcDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.BlendShape.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.BlendShape.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Color.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Color.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataBool.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataBool.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataBytes.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataBytes.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataFloat.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataFloat.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataHashValue.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataHashValue.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataInt.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataInt.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataQuat.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataQuat.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataString.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataString.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataVec2.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataVec2.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataVec3.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataVec3.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.DataVec4.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.DataVec4.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Mat4x3.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Mat4x3.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.MaterialDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.MaterialDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.MaterialTextureDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelIndexRange.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Quat.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Quat.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Rect.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Rect.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Recti.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Recti.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.SkeletonDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.SubmeshAabb.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.TextureDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.TextureDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.VariantArrayDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.VariantMapDef.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Vec2.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Vec2.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Vec2i.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Vec2i.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Vec3.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Vec3.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.Vec4.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.Vec4.__init"]},{"name":"open fun __init(_i: Int, _bb: ByteBuffer)","description":"com.google.ar.sceneform.lullmodel.VertexAttribute.__init","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/__init.html","searchKeys":["__init","open fun __init(_i: Int, _bb: ByteBuffer)","com.google.ar.sceneform.lullmodel.VertexAttribute.__init"]},{"name":"open fun __reset()","description":"com.google.flatbuffers.Struct.__reset","location":"sceneview/com.google.flatbuffers/-struct/__reset.html","searchKeys":["__reset","open fun __reset()","com.google.flatbuffers.Struct.__reset"]},{"name":"open fun __reset()","description":"com.google.flatbuffers.Table.__reset","location":"sceneview/com.google.flatbuffers/-table/__reset.html","searchKeys":["__reset","open fun __reset()","com.google.flatbuffers.Table.__reset"]},{"name":"open fun a(): Float","description":"com.google.ar.sceneform.lullmodel.Color.a","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/a.html","searchKeys":["a","open fun a(): Float","com.google.ar.sceneform.lullmodel.Color.a"]},{"name":"open fun aabbs(j: Int): SubmeshAabb","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.aabbs","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/aabbs.html","searchKeys":["aabbs","open fun aabbs(j: Int): SubmeshAabb","com.google.ar.sceneform.lullmodel.ModelInstanceDef.aabbs"]},{"name":"open fun aabbs(obj: SubmeshAabb, j: Int): SubmeshAabb","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.aabbs","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/aabbs.html","searchKeys":["aabbs","open fun aabbs(obj: SubmeshAabb, j: Int): SubmeshAabb","com.google.ar.sceneform.lullmodel.ModelInstanceDef.aabbs"]},{"name":"open fun aabbsLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.aabbsLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/aabbs-length.html","searchKeys":["aabbsLength","open fun aabbsLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.aabbsLength"]},{"name":"open fun add(lhs: Quaternion, rhs: Quaternion): Quaternion","description":"io.github.sceneview.collision.Quaternion.add","location":"sceneview/io.github.sceneview.collision/-quaternion/add.html","searchKeys":["add","open fun add(lhs: Quaternion, rhs: Quaternion): Quaternion","io.github.sceneview.collision.Quaternion.add"]},{"name":"open fun add(lhs: Vector3, rhs: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3.add","location":"sceneview/io.github.sceneview.collision/-vector3/add.html","searchKeys":["add","open fun add(lhs: Vector3, rhs: Vector3): Vector3","io.github.sceneview.collision.Vector3.add"]},{"name":"open fun addAabbs(builder: FlatBufferBuilder, aabbsOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addAabbs","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-aabbs.html","searchKeys":["addAabbs","open fun addAabbs(builder: FlatBufferBuilder, aabbsOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addAabbs"]},{"name":"open fun addAttributes(builder: FlatBufferBuilder, attributesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.addAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/add-attributes.html","searchKeys":["addAttributes","open fun addAttributes(builder: FlatBufferBuilder, attributesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.addAttributes"]},{"name":"open fun addAxisSystem(builder: FlatBufferBuilder, axisSystem: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addAxisSystem","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-axis-system.html","searchKeys":["addAxisSystem","open fun addAxisSystem(builder: FlatBufferBuilder, axisSystem: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addAxisSystem"]},{"name":"open fun addBlendAttributes(builder: FlatBufferBuilder, blendAttributesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addBlendAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-blend-attributes.html","searchKeys":["addBlendAttributes","open fun addBlendAttributes(builder: FlatBufferBuilder, blendAttributesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addBlendAttributes"]},{"name":"open fun addBlendShapes(builder: FlatBufferBuilder, blendShapesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addBlendShapes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-blend-shapes.html","searchKeys":["addBlendShapes","open fun addBlendShapes(builder: FlatBufferBuilder, blendShapesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addBlendShapes"]},{"name":"open fun addBoneNames(builder: FlatBufferBuilder, boneNamesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.addBoneNames","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/add-bone-names.html","searchKeys":["addBoneNames","open fun addBoneNames(builder: FlatBufferBuilder, boneNamesOffset: Int)","com.google.ar.sceneform.lullmodel.SkeletonDef.addBoneNames"]},{"name":"open fun addBoneParents(builder: FlatBufferBuilder, boneParentsOffset: Int)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.addBoneParents","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/add-bone-parents.html","searchKeys":["addBoneParents","open fun addBoneParents(builder: FlatBufferBuilder, boneParentsOffset: Int)","com.google.ar.sceneform.lullmodel.SkeletonDef.addBoneParents"]},{"name":"open fun addBoneTransforms(builder: FlatBufferBuilder, boneTransformsOffset: Int)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.addBoneTransforms","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/add-bone-transforms.html","searchKeys":["addBoneTransforms","open fun addBoneTransforms(builder: FlatBufferBuilder, boneTransformsOffset: Int)","com.google.ar.sceneform.lullmodel.SkeletonDef.addBoneTransforms"]},{"name":"open fun addBoolean(o: Int, x: Boolean, d: Boolean)","description":"com.google.flatbuffers.FlatBufferBuilder.addBoolean","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-boolean.html","searchKeys":["addBoolean","open fun addBoolean(o: Int, x: Boolean, d: Boolean)","com.google.flatbuffers.FlatBufferBuilder.addBoolean"]},{"name":"open fun addBoolean(x: Boolean)","description":"com.google.flatbuffers.FlatBufferBuilder.addBoolean","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-boolean.html","searchKeys":["addBoolean","open fun addBoolean(x: Boolean)","com.google.flatbuffers.FlatBufferBuilder.addBoolean"]},{"name":"open fun addBoundingBox(builder: FlatBufferBuilder, boundingBoxOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.addBoundingBox","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/add-bounding-box.html","searchKeys":["addBoundingBox","open fun addBoundingBox(builder: FlatBufferBuilder, boundingBoxOffset: Int)","com.google.ar.sceneform.lullmodel.ModelDef.addBoundingBox"]},{"name":"open fun addByte(o: Int, x: Byte, d: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addByte","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-byte.html","searchKeys":["addByte","open fun addByte(o: Int, x: Byte, d: Int)","com.google.flatbuffers.FlatBufferBuilder.addByte"]},{"name":"open fun addByte(x: Byte)","description":"com.google.flatbuffers.FlatBufferBuilder.addByte","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-byte.html","searchKeys":["addByte","open fun addByte(x: Byte)","com.google.flatbuffers.FlatBufferBuilder.addByte"]},{"name":"open fun addCmPerUnit(builder: FlatBufferBuilder, cmPerUnit: Float)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addCmPerUnit","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-cm-per-unit.html","searchKeys":["addCmPerUnit","open fun addCmPerUnit(builder: FlatBufferBuilder, cmPerUnit: Float)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addCmPerUnit"]},{"name":"open fun addCollidable(builder: FlatBufferBuilder, collidableOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.addCollidable","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/add-collidable.html","searchKeys":["addCollidable","open fun addCollidable(builder: FlatBufferBuilder, collidableOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.addCollidable"]},{"name":"open fun addData(builder: FlatBufferBuilder, dataOffset: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addData","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-data.html","searchKeys":["addData","open fun addData(builder: FlatBufferBuilder, dataOffset: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addData"]},{"name":"open fun addDouble(o: Int, x: Double, d: Double)","description":"com.google.flatbuffers.FlatBufferBuilder.addDouble","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-double.html","searchKeys":["addDouble","open fun addDouble(o: Int, x: Double, d: Double)","com.google.flatbuffers.FlatBufferBuilder.addDouble"]},{"name":"open fun addDouble(x: Double)","description":"com.google.flatbuffers.FlatBufferBuilder.addDouble","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-double.html","searchKeys":["addDouble","open fun addDouble(x: Double)","com.google.flatbuffers.FlatBufferBuilder.addDouble"]},{"name":"open fun addEnsureVertexOrientationWNotZero(builder: FlatBufferBuilder, ensureVertexOrientationWNotZero: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addEnsureVertexOrientationWNotZero","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-ensure-vertex-orientation-w-not-zero.html","searchKeys":["addEnsureVertexOrientationWNotZero","open fun addEnsureVertexOrientationWNotZero(builder: FlatBufferBuilder, ensureVertexOrientationWNotZero: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addEnsureVertexOrientationWNotZero"]},{"name":"open fun addFile(builder: FlatBufferBuilder, fileOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFile","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-file.html","searchKeys":["addFile","open fun addFile(builder: FlatBufferBuilder, fileOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFile"]},{"name":"open fun addFile(builder: FlatBufferBuilder, fileOffset: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addFile","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-file.html","searchKeys":["addFile","open fun addFile(builder: FlatBufferBuilder, fileOffset: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addFile"]},{"name":"open fun addFixInfacingNormals(builder: FlatBufferBuilder, fixInfacingNormals: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFixInfacingNormals","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-fix-infacing-normals.html","searchKeys":["addFixInfacingNormals","open fun addFixInfacingNormals(builder: FlatBufferBuilder, fixInfacingNormals: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFixInfacingNormals"]},{"name":"open fun addFlattenHierarchyAndTransformVerticesToRootSpace(builder: FlatBufferBuilder, flattenHierarchyAndTransformVerticesToRootSpace: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFlattenHierarchyAndTransformVerticesToRootSpace","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-flatten-hierarchy-and-transform-vertices-to-root-space.html","searchKeys":["addFlattenHierarchyAndTransformVerticesToRootSpace","open fun addFlattenHierarchyAndTransformVerticesToRootSpace(builder: FlatBufferBuilder, flattenHierarchyAndTransformVerticesToRootSpace: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFlattenHierarchyAndTransformVerticesToRootSpace"]},{"name":"open fun addFlipTextureCoordinates(builder: FlatBufferBuilder, flipTextureCoordinates: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFlipTextureCoordinates","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-flip-texture-coordinates.html","searchKeys":["addFlipTextureCoordinates","open fun addFlipTextureCoordinates(builder: FlatBufferBuilder, flipTextureCoordinates: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addFlipTextureCoordinates"]},{"name":"open fun addFloat(o: Int, x: Float, d: Double)","description":"com.google.flatbuffers.FlatBufferBuilder.addFloat","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-float.html","searchKeys":["addFloat","open fun addFloat(o: Int, x: Float, d: Double)","com.google.flatbuffers.FlatBufferBuilder.addFloat"]},{"name":"open fun addFloat(x: Float)","description":"com.google.flatbuffers.FlatBufferBuilder.addFloat","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-float.html","searchKeys":["addFloat","open fun addFloat(x: Float)","com.google.flatbuffers.FlatBufferBuilder.addFloat"]},{"name":"open fun addGenerateMipmaps(builder: FlatBufferBuilder, generateMipmaps: Boolean)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addGenerateMipmaps","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-generate-mipmaps.html","searchKeys":["addGenerateMipmaps","open fun addGenerateMipmaps(builder: FlatBufferBuilder, generateMipmaps: Boolean)","com.google.ar.sceneform.lullmodel.TextureDef.addGenerateMipmaps"]},{"name":"open fun addHashKey(builder: FlatBufferBuilder, hashKey: Long)","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addHashKey","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/add-hash-key.html","searchKeys":["addHashKey","open fun addHashKey(builder: FlatBufferBuilder, hashKey: Long)","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addHashKey"]},{"name":"open fun addIndices16(builder: FlatBufferBuilder, indices16Offset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addIndices16","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-indices16.html","searchKeys":["addIndices16","open fun addIndices16(builder: FlatBufferBuilder, indices16Offset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addIndices16"]},{"name":"open fun addIndices32(builder: FlatBufferBuilder, indices32Offset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addIndices32","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-indices32.html","searchKeys":["addIndices32","open fun addIndices32(builder: FlatBufferBuilder, indices32Offset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addIndices32"]},{"name":"open fun addInt(o: Int, x: Int, d: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addInt","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-int.html","searchKeys":["addInt","open fun addInt(o: Int, x: Int, d: Int)","com.google.flatbuffers.FlatBufferBuilder.addInt"]},{"name":"open fun addInt(x: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addInt","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-int.html","searchKeys":["addInt","open fun addInt(x: Int)","com.google.flatbuffers.FlatBufferBuilder.addInt"]},{"name":"open fun addInterleaved(builder: FlatBufferBuilder, interleaved: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addInterleaved","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-interleaved.html","searchKeys":["addInterleaved","open fun addInterleaved(builder: FlatBufferBuilder, interleaved: Boolean)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addInterleaved"]},{"name":"open fun addIsRgbm(builder: FlatBufferBuilder, isRgbm: Boolean)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addIsRgbm","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-is-rgbm.html","searchKeys":["addIsRgbm","open fun addIsRgbm(builder: FlatBufferBuilder, isRgbm: Boolean)","com.google.ar.sceneform.lullmodel.TextureDef.addIsRgbm"]},{"name":"open fun addKey(builder: FlatBufferBuilder, keyOffset: Int)","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addKey","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/add-key.html","searchKeys":["addKey","open fun addKey(builder: FlatBufferBuilder, keyOffset: Int)","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addKey"]},{"name":"open fun addLods(builder: FlatBufferBuilder, lodsOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.addLods","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/add-lods.html","searchKeys":["addLods","open fun addLods(builder: FlatBufferBuilder, lodsOffset: Int)","com.google.ar.sceneform.lullmodel.ModelDef.addLods"]},{"name":"open fun addLong(o: Int, x: Long, d: Long)","description":"com.google.flatbuffers.FlatBufferBuilder.addLong","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-long.html","searchKeys":["addLong","open fun addLong(o: Int, x: Long, d: Long)","com.google.flatbuffers.FlatBufferBuilder.addLong"]},{"name":"open fun addLong(x: Long)","description":"com.google.flatbuffers.FlatBufferBuilder.addLong","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-long.html","searchKeys":["addLong","open fun addLong(x: Long)","com.google.flatbuffers.FlatBufferBuilder.addLong"]},{"name":"open fun addMagFilter(builder: FlatBufferBuilder, magFilter: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addMagFilter","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-mag-filter.html","searchKeys":["addMagFilter","open fun addMagFilter(builder: FlatBufferBuilder, magFilter: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addMagFilter"]},{"name":"open fun addMaterial(builder: FlatBufferBuilder, materialOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.addMaterial","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/add-material.html","searchKeys":["addMaterial","open fun addMaterial(builder: FlatBufferBuilder, materialOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.addMaterial"]},{"name":"open fun addMaterials(builder: FlatBufferBuilder, materialsOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addMaterials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-materials.html","searchKeys":["addMaterials","open fun addMaterials(builder: FlatBufferBuilder, materialsOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addMaterials"]},{"name":"open fun addMaterials(builder: FlatBufferBuilder, materialsOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.addMaterials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/add-materials.html","searchKeys":["addMaterials","open fun addMaterials(builder: FlatBufferBuilder, materialsOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.addMaterials"]},{"name":"open fun addMaxBoneWeights(builder: FlatBufferBuilder, maxBoneWeights: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addMaxBoneWeights","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-max-bone-weights.html","searchKeys":["addMaxBoneWeights","open fun addMaxBoneWeights(builder: FlatBufferBuilder, maxBoneWeights: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addMaxBoneWeights"]},{"name":"open fun addMaxPosition(builder: FlatBufferBuilder, maxPositionOffset: Int)","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.addMaxPosition","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/add-max-position.html","searchKeys":["addMaxPosition","open fun addMaxPosition(builder: FlatBufferBuilder, maxPositionOffset: Int)","com.google.ar.sceneform.lullmodel.SubmeshAabb.addMaxPosition"]},{"name":"open fun addMergeMaterials(builder: FlatBufferBuilder, mergeMaterials: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addMergeMaterials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-merge-materials.html","searchKeys":["addMergeMaterials","open fun addMergeMaterials(builder: FlatBufferBuilder, mergeMaterials: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addMergeMaterials"]},{"name":"open fun addMinFilter(builder: FlatBufferBuilder, minFilter: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addMinFilter","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-min-filter.html","searchKeys":["addMinFilter","open fun addMinFilter(builder: FlatBufferBuilder, minFilter: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addMinFilter"]},{"name":"open fun addMinPosition(builder: FlatBufferBuilder, minPositionOffset: Int)","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.addMinPosition","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/add-min-position.html","searchKeys":["addMinPosition","open fun addMinPosition(builder: FlatBufferBuilder, minPositionOffset: Int)","com.google.ar.sceneform.lullmodel.SubmeshAabb.addMinPosition"]},{"name":"open fun addName(builder: FlatBufferBuilder, name: Long)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addName","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-name.html","searchKeys":["addName","open fun addName(builder: FlatBufferBuilder, name: Long)","com.google.ar.sceneform.lullmodel.BlendShape.addName"]},{"name":"open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialDef.addName","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/add-name.html","searchKeys":["addName","open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","com.google.ar.sceneform.lullmodel.MaterialDef.addName"]},{"name":"open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.addName","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/add-name.html","searchKeys":["addName","open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","com.google.ar.sceneform.lullmodel.MaterialTextureDef.addName"]},{"name":"open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addName","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-name.html","searchKeys":["addName","open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addName"]},{"name":"open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addName","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-name.html","searchKeys":["addName","open fun addName(builder: FlatBufferBuilder, nameOffset: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addName"]},{"name":"open fun addNameOverride(builder: FlatBufferBuilder, nameOverrideOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.addNameOverride","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/add-name-override.html","searchKeys":["addNameOverride","open fun addNameOverride(builder: FlatBufferBuilder, nameOverrideOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.addNameOverride"]},{"name":"open fun addNumVertices(builder: FlatBufferBuilder, numVertices: Long)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addNumVertices","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-num-vertices.html","searchKeys":["addNumVertices","open fun addNumVertices(builder: FlatBufferBuilder, numVertices: Long)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addNumVertices"]},{"name":"open fun addOffset(o: Int, x: Int, d: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addOffset","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-offset.html","searchKeys":["addOffset","open fun addOffset(o: Int, x: Int, d: Int)","com.google.flatbuffers.FlatBufferBuilder.addOffset"]},{"name":"open fun addOffset(off: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addOffset","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-offset.html","searchKeys":["addOffset","open fun addOffset(off: Int)","com.google.flatbuffers.FlatBufferBuilder.addOffset"]},{"name":"open fun addPremultiplyAlpha(builder: FlatBufferBuilder, premultiplyAlpha: Boolean)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addPremultiplyAlpha","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-premultiply-alpha.html","searchKeys":["addPremultiplyAlpha","open fun addPremultiplyAlpha(builder: FlatBufferBuilder, premultiplyAlpha: Boolean)","com.google.ar.sceneform.lullmodel.TextureDef.addPremultiplyAlpha"]},{"name":"open fun addProperties(builder: FlatBufferBuilder, propertiesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialDef.addProperties","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/add-properties.html","searchKeys":["addProperties","open fun addProperties(builder: FlatBufferBuilder, propertiesOffset: Int)","com.google.ar.sceneform.lullmodel.MaterialDef.addProperties"]},{"name":"open fun addRanges(builder: FlatBufferBuilder, rangesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addRanges","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-ranges.html","searchKeys":["addRanges","open fun addRanges(builder: FlatBufferBuilder, rangesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addRanges"]},{"name":"open fun addRecenter(builder: FlatBufferBuilder, recenter: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addRecenter","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-recenter.html","searchKeys":["addRecenter","open fun addRecenter(builder: FlatBufferBuilder, recenter: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addRecenter"]},{"name":"open fun addRenderables(builder: FlatBufferBuilder, renderablesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.addRenderables","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/add-renderables.html","searchKeys":["addRenderables","open fun addRenderables(builder: FlatBufferBuilder, renderablesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.addRenderables"]},{"name":"open fun addReportErrorsToStdout(builder: FlatBufferBuilder, reportErrorsToStdout: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addReportErrorsToStdout","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-report-errors-to-stdout.html","searchKeys":["addReportErrorsToStdout","open fun addReportErrorsToStdout(builder: FlatBufferBuilder, reportErrorsToStdout: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addReportErrorsToStdout"]},{"name":"open fun addResourceHolder(resource: ResourceHolder)","description":"com.google.ar.sceneform.rendering.ResourceManager.addResourceHolder","location":"sceneview/com.google.ar.sceneform.rendering/-resource-manager/add-resource-holder.html","searchKeys":["addResourceHolder","open fun addResourceHolder(resource: ResourceHolder)","com.google.ar.sceneform.rendering.ResourceManager.addResourceHolder"]},{"name":"open fun addSample(sample: Double)","description":"com.google.ar.sceneform.utilities.MovingAverage.addSample","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average/add-sample.html","searchKeys":["addSample","open fun addSample(sample: Double)","com.google.ar.sceneform.utilities.MovingAverage.addSample"]},{"name":"open fun addScale(builder: FlatBufferBuilder, scale: Float)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addScale","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-scale.html","searchKeys":["addScale","open fun addScale(builder: FlatBufferBuilder, scale: Float)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addScale"]},{"name":"open fun addShaderToMeshBones(builder: FlatBufferBuilder, shaderToMeshBonesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addShaderToMeshBones","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-shader-to-mesh-bones.html","searchKeys":["addShaderToMeshBones","open fun addShaderToMeshBones(builder: FlatBufferBuilder, shaderToMeshBonesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addShaderToMeshBones"]},{"name":"open fun addShort(o: Int, x: Short, d: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addShort","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-short.html","searchKeys":["addShort","open fun addShort(o: Int, x: Short, d: Int)","com.google.flatbuffers.FlatBufferBuilder.addShort"]},{"name":"open fun addShort(x: Short)","description":"com.google.flatbuffers.FlatBufferBuilder.addShort","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-short.html","searchKeys":["addShort","open fun addShort(x: Short)","com.google.flatbuffers.FlatBufferBuilder.addShort"]},{"name":"open fun addSkeleton(builder: FlatBufferBuilder, skeletonOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.addSkeleton","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/add-skeleton.html","searchKeys":["addSkeleton","open fun addSkeleton(builder: FlatBufferBuilder, skeletonOffset: Int)","com.google.ar.sceneform.lullmodel.ModelDef.addSkeleton"]},{"name":"open fun addSkeleton(builder: FlatBufferBuilder, skeletonOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.addSkeleton","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/add-skeleton.html","searchKeys":["addSkeleton","open fun addSkeleton(builder: FlatBufferBuilder, skeletonOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.addSkeleton"]},{"name":"open fun addSmoothingAngle(builder: FlatBufferBuilder, smoothingAngle: Float)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addSmoothingAngle","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-smoothing-angle.html","searchKeys":["addSmoothingAngle","open fun addSmoothingAngle(builder: FlatBufferBuilder, smoothingAngle: Float)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addSmoothingAngle"]},{"name":"open fun addSource(builder: FlatBufferBuilder, sourceOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.addSource","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/add-source.html","searchKeys":["addSource","open fun addSource(builder: FlatBufferBuilder, sourceOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.addSource"]},{"name":"open fun addSource(builder: FlatBufferBuilder, sourceOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.addSource","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/add-source.html","searchKeys":["addSource","open fun addSource(builder: FlatBufferBuilder, sourceOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.addSource"]},{"name":"open fun addSource(builder: FlatBufferBuilder, sourceOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.addSource","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/add-source.html","searchKeys":["addSource","open fun addSource(builder: FlatBufferBuilder, sourceOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.addSource"]},{"name":"open fun addSources(builder: FlatBufferBuilder, sourcesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.addSources","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/add-sources.html","searchKeys":["addSources","open fun addSources(builder: FlatBufferBuilder, sourcesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.addSources"]},{"name":"open fun addStruct(voffset: Int, x: Int, d: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.addStruct","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/add-struct.html","searchKeys":["addStruct","open fun addStruct(voffset: Int, x: Int, d: Int)","com.google.flatbuffers.FlatBufferBuilder.addStruct"]},{"name":"open fun addTangentData(builder: FlatBufferBuilder, tangentDataOffset: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addTangentData","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-tangent-data.html","searchKeys":["addTangentData","open fun addTangentData(builder: FlatBufferBuilder, tangentDataOffset: Int)","com.google.ar.sceneform.lullmodel.BlendShape.addTangentData"]},{"name":"open fun addTangentIndices16(builder: FlatBufferBuilder, tangentIndices16Offset: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addTangentIndices16","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-tangent-indices16.html","searchKeys":["addTangentIndices16","open fun addTangentIndices16(builder: FlatBufferBuilder, tangentIndices16Offset: Int)","com.google.ar.sceneform.lullmodel.BlendShape.addTangentIndices16"]},{"name":"open fun addTangentIndices32(builder: FlatBufferBuilder, tangentIndices32Offset: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addTangentIndices32","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-tangent-indices32.html","searchKeys":["addTangentIndices32","open fun addTangentIndices32(builder: FlatBufferBuilder, tangentIndices32Offset: Int)","com.google.ar.sceneform.lullmodel.BlendShape.addTangentIndices32"]},{"name":"open fun addTargetMeshes(builder: FlatBufferBuilder, targetMeshesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addTargetMeshes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-target-meshes.html","searchKeys":["addTargetMeshes","open fun addTargetMeshes(builder: FlatBufferBuilder, targetMeshesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addTargetMeshes"]},{"name":"open fun addTargetType(builder: FlatBufferBuilder, targetType: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addTargetType","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-target-type.html","searchKeys":["addTargetType","open fun addTargetType(builder: FlatBufferBuilder, targetType: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addTargetType"]},{"name":"open fun addTextures(builder: FlatBufferBuilder, texturesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialDef.addTextures","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/add-textures.html","searchKeys":["addTextures","open fun addTextures(builder: FlatBufferBuilder, texturesOffset: Int)","com.google.ar.sceneform.lullmodel.MaterialDef.addTextures"]},{"name":"open fun addTextures(builder: FlatBufferBuilder, texturesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.addTextures","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/add-textures.html","searchKeys":["addTextures","open fun addTextures(builder: FlatBufferBuilder, texturesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelDef.addTextures"]},{"name":"open fun addTextures(builder: FlatBufferBuilder, texturesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.addTextures","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/add-textures.html","searchKeys":["addTextures","open fun addTextures(builder: FlatBufferBuilder, texturesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.addTextures"]},{"name":"open fun addUsage(builder: FlatBufferBuilder, usage: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.addUsage","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/add-usage.html","searchKeys":["addUsage","open fun addUsage(builder: FlatBufferBuilder, usage: Int)","com.google.ar.sceneform.lullmodel.MaterialTextureDef.addUsage"]},{"name":"open fun addUsagePerChannel(builder: FlatBufferBuilder, usagePerChannelOffset: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.addUsagePerChannel","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/add-usage-per-channel.html","searchKeys":["addUsagePerChannel","open fun addUsagePerChannel(builder: FlatBufferBuilder, usagePerChannelOffset: Int)","com.google.ar.sceneform.lullmodel.MaterialTextureDef.addUsagePerChannel"]},{"name":"open fun addUseSpecularGlossinessTexturesIfPresent(builder: FlatBufferBuilder, useSpecularGlossinessTexturesIfPresent: Boolean)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addUseSpecularGlossinessTexturesIfPresent","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/add-use-specular-glossiness-textures-if-present.html","searchKeys":["addUseSpecularGlossinessTexturesIfPresent","open fun addUseSpecularGlossinessTexturesIfPresent(builder: FlatBufferBuilder, useSpecularGlossinessTexturesIfPresent: Boolean)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.addUseSpecularGlossinessTexturesIfPresent"]},{"name":"open fun addValue(builder: FlatBufferBuilder, value: Boolean)","description":"com.google.ar.sceneform.lullmodel.DataBool.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, value: Boolean)","com.google.ar.sceneform.lullmodel.DataBool.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, value: Float)","description":"com.google.ar.sceneform.lullmodel.DataFloat.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, value: Float)","com.google.ar.sceneform.lullmodel.DataFloat.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, value: Int)","description":"com.google.ar.sceneform.lullmodel.DataInt.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, value: Int)","com.google.ar.sceneform.lullmodel.DataInt.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, value: Long)","description":"com.google.ar.sceneform.lullmodel.DataHashValue.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, value: Long)","com.google.ar.sceneform.lullmodel.DataHashValue.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.DataBytes.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.DataBytes.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.DataQuat.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.DataQuat.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.DataString.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.DataString.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.DataVec2.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.DataVec2.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.DataVec3.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.DataVec3.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.DataVec4.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.DataVec4.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addValue"]},{"name":"open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.addValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/add-value.html","searchKeys":["addValue","open fun addValue(builder: FlatBufferBuilder, valueOffset: Int)","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.addValue"]},{"name":"open fun addValueType(builder: FlatBufferBuilder, valueType: Byte)","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addValueType","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/add-value-type.html","searchKeys":["addValueType","open fun addValueType(builder: FlatBufferBuilder, valueType: Byte)","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.addValueType"]},{"name":"open fun addValueType(builder: FlatBufferBuilder, valueType: Byte)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.addValueType","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/add-value-type.html","searchKeys":["addValueType","open fun addValueType(builder: FlatBufferBuilder, valueType: Byte)","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.addValueType"]},{"name":"open fun addValues(builder: FlatBufferBuilder, valuesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.addValues","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/add-values.html","searchKeys":["addValues","open fun addValues(builder: FlatBufferBuilder, valuesOffset: Int)","com.google.ar.sceneform.lullmodel.VariantArrayDef.addValues"]},{"name":"open fun addValues(builder: FlatBufferBuilder, valuesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.addValues","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/add-values.html","searchKeys":["addValues","open fun addValues(builder: FlatBufferBuilder, valuesOffset: Int)","com.google.ar.sceneform.lullmodel.VariantMapDef.addValues"]},{"name":"open fun addVersion(builder: FlatBufferBuilder, version: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.addVersion","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/add-version.html","searchKeys":["addVersion","open fun addVersion(builder: FlatBufferBuilder, version: Int)","com.google.ar.sceneform.lullmodel.ModelDef.addVersion"]},{"name":"open fun addVertexAttributes(builder: FlatBufferBuilder, vertexAttributesOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addVertexAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-vertex-attributes.html","searchKeys":["addVertexAttributes","open fun addVertexAttributes(builder: FlatBufferBuilder, vertexAttributesOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addVertexAttributes"]},{"name":"open fun addVertexData(builder: FlatBufferBuilder, vertexDataOffset: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addVertexData","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-vertex-data.html","searchKeys":["addVertexData","open fun addVertexData(builder: FlatBufferBuilder, vertexDataOffset: Int)","com.google.ar.sceneform.lullmodel.BlendShape.addVertexData"]},{"name":"open fun addVertexData(builder: FlatBufferBuilder, vertexDataOffset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.addVertexData","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/add-vertex-data.html","searchKeys":["addVertexData","open fun addVertexData(builder: FlatBufferBuilder, vertexDataOffset: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.addVertexData"]},{"name":"open fun addVertexIndices16(builder: FlatBufferBuilder, vertexIndices16Offset: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addVertexIndices16","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-vertex-indices16.html","searchKeys":["addVertexIndices16","open fun addVertexIndices16(builder: FlatBufferBuilder, vertexIndices16Offset: Int)","com.google.ar.sceneform.lullmodel.BlendShape.addVertexIndices16"]},{"name":"open fun addVertexIndices32(builder: FlatBufferBuilder, vertexIndices32Offset: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.addVertexIndices32","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/add-vertex-indices32.html","searchKeys":["addVertexIndices32","open fun addVertexIndices32(builder: FlatBufferBuilder, vertexIndices32Offset: Int)","com.google.ar.sceneform.lullmodel.BlendShape.addVertexIndices32"]},{"name":"open fun addView(view: View)","description":"com.google.ar.sceneform.rendering.ViewAttachmentManager.addView","location":"sceneview/com.google.ar.sceneform.rendering/-view-attachment-manager/add-view.html","searchKeys":["addView","open fun addView(view: View)","com.google.ar.sceneform.rendering.ViewAttachmentManager.addView"]},{"name":"open fun addWrapR(builder: FlatBufferBuilder, wrapR: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addWrapR","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-wrap-r.html","searchKeys":["addWrapR","open fun addWrapR(builder: FlatBufferBuilder, wrapR: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addWrapR"]},{"name":"open fun addWrapS(builder: FlatBufferBuilder, wrapS: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addWrapS","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-wrap-s.html","searchKeys":["addWrapS","open fun addWrapS(builder: FlatBufferBuilder, wrapS: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addWrapS"]},{"name":"open fun addWrapT(builder: FlatBufferBuilder, wrapT: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.addWrapT","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/add-wrap-t.html","searchKeys":["addWrapT","open fun addWrapT(builder: FlatBufferBuilder, wrapT: Int)","com.google.ar.sceneform.lullmodel.TextureDef.addWrapT"]},{"name":"open fun almostEqualRelativeAndAbs(a: Float, b: Float): Boolean","description":"io.github.sceneview.collision.MathHelper.almostEqualRelativeAndAbs","location":"sceneview/io.github.sceneview.collision/-math-helper/almost-equal-relative-and-abs.html","searchKeys":["almostEqualRelativeAndAbs","open fun almostEqualRelativeAndAbs(a: Float, b: Float): Boolean","io.github.sceneview.collision.MathHelper.almostEqualRelativeAndAbs"]},{"name":"open fun angleBetweenVectors(a: Vector3, b: Vector3): Float","description":"io.github.sceneview.collision.Vector3.angleBetweenVectors","location":"sceneview/io.github.sceneview.collision/-vector3/angle-between-vectors.html","searchKeys":["angleBetweenVectors","open fun angleBetweenVectors(a: Vector3, b: Vector3): Float","io.github.sceneview.collision.Vector3.angleBetweenVectors"]},{"name":"open fun angleSize(): Float","description":"com.google.ar.sceneform.lullmodel.ArcDef.angleSize","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/angle-size.html","searchKeys":["angleSize","open fun angleSize(): Float","com.google.ar.sceneform.lullmodel.ArcDef.angleSize"]},{"name":"open fun animate(animationIndexes: Array<Int>): ObjectAnimator","description":"io.github.sceneview.animation.AnimatableModel.animate","location":"sceneview/io.github.sceneview.animation/-animatable-model/animate.html","searchKeys":["animate","open fun animate(animationIndexes: Array<Int>): ObjectAnimator","io.github.sceneview.animation.AnimatableModel.animate"]},{"name":"open fun animate(animationNames: Array<String>): ObjectAnimator","description":"io.github.sceneview.animation.AnimatableModel.animate","location":"sceneview/io.github.sceneview.animation/-animatable-model/animate.html","searchKeys":["animate","open fun animate(animationNames: Array<String>): ObjectAnimator","io.github.sceneview.animation.AnimatableModel.animate"]},{"name":"open fun animate(animations: Array<ModelAnimation>): ObjectAnimator","description":"io.github.sceneview.animation.AnimatableModel.animate","location":"sceneview/io.github.sceneview.animation/-animatable-model/animate.html","searchKeys":["animate","open fun animate(animations: Array<ModelAnimation>): ObjectAnimator","io.github.sceneview.animation.AnimatableModel.animate"]},{"name":"open fun animate(repeat: Boolean): ObjectAnimator","description":"io.github.sceneview.animation.AnimatableModel.animate","location":"sceneview/io.github.sceneview.animation/-animatable-model/animate.html","searchKeys":["animate","open fun animate(repeat: Boolean): ObjectAnimator","io.github.sceneview.animation.AnimatableModel.animate"]},{"name":"open fun applyAnimationChange(animation: ModelAnimation): Boolean","description":"com.google.ar.sceneform.rendering.RenderableInstance.applyAnimationChange","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/apply-animation-change.html","searchKeys":["applyAnimationChange","open fun applyAnimationChange(animation: ModelAnimation): Boolean","com.google.ar.sceneform.rendering.RenderableInstance.applyAnimationChange"]},{"name":"open fun attachView(attachmentManager: ViewAttachmentManager)","description":"com.google.ar.sceneform.rendering.ViewRenderable.attachView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/attach-view.html","searchKeys":["attachView","open fun attachView(attachmentManager: ViewAttachmentManager)","com.google.ar.sceneform.rendering.ViewRenderable.attachView"]},{"name":"open fun attachView(viewAttachmentManager: ViewAttachmentManager)","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.attachView","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/attach-view.html","searchKeys":["attachView","open fun attachView(viewAttachmentManager: ViewAttachmentManager)","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.attachView"]},{"name":"open fun attributes(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/attributes.html","searchKeys":["attributes","open fun attributes(j: Int): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributes"]},{"name":"open fun attributesAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributesAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/attributes-as-byte-buffer.html","searchKeys":["attributesAsByteBuffer","open fun attributesAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributesAsByteBuffer"]},{"name":"open fun attributesInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributesInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/attributes-in-byte-buffer.html","searchKeys":["attributesInByteBuffer","open fun attributesInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributesInByteBuffer"]},{"name":"open fun attributesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/attributes-length.html","searchKeys":["attributesLength","open fun attributesLength(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.attributesLength"]},{"name":"open fun axisAngle(axis: Vector3, degrees: Float): Quaternion","description":"io.github.sceneview.collision.Quaternion.axisAngle","location":"sceneview/io.github.sceneview.collision/-quaternion/axis-angle.html","searchKeys":["axisAngle","open fun axisAngle(axis: Vector3, degrees: Float): Quaternion","io.github.sceneview.collision.Quaternion.axisAngle"]},{"name":"open fun axisSystem(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.axisSystem","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/axis-system.html","searchKeys":["axisSystem","open fun axisSystem(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.axisSystem"]},{"name":"open fun b(): Float","description":"com.google.ar.sceneform.lullmodel.Color.b","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/b.html","searchKeys":["b","open fun b(): Float","com.google.ar.sceneform.lullmodel.Color.b"]},{"name":"open fun back(): Vector3","description":"io.github.sceneview.collision.Vector3.back","location":"sceneview/io.github.sceneview.collision/-vector3/back.html","searchKeys":["back","open fun back(): Vector3","io.github.sceneview.collision.Vector3.back"]},{"name":"open fun beginSample()","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.beginSample","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/begin-sample.html","searchKeys":["beginSample","open fun beginSample()","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.beginSample"]},{"name":"open fun beginSample()","description":"com.google.ar.sceneform.utilities.TimeAccumulator.beginSample","location":"sceneview/com.google.ar.sceneform.utilities/-time-accumulator/begin-sample.html","searchKeys":["beginSample","open fun beginSample()","com.google.ar.sceneform.utilities.TimeAccumulator.beginSample"]},{"name":"open fun blendAttributes(j: Int): VertexAttribute","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/blend-attributes.html","searchKeys":["blendAttributes","open fun blendAttributes(j: Int): VertexAttribute","com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendAttributes"]},{"name":"open fun blendAttributes(obj: VertexAttribute, j: Int): VertexAttribute","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/blend-attributes.html","searchKeys":["blendAttributes","open fun blendAttributes(obj: VertexAttribute, j: Int): VertexAttribute","com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendAttributes"]},{"name":"open fun blendAttributesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendAttributesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/blend-attributes-length.html","searchKeys":["blendAttributesLength","open fun blendAttributesLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendAttributesLength"]},{"name":"open fun blendShapes(j: Int): BlendShape","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendShapes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/blend-shapes.html","searchKeys":["blendShapes","open fun blendShapes(j: Int): BlendShape","com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendShapes"]},{"name":"open fun blendShapes(obj: BlendShape, j: Int): BlendShape","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendShapes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/blend-shapes.html","searchKeys":["blendShapes","open fun blendShapes(obj: BlendShape, j: Int): BlendShape","com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendShapes"]},{"name":"open fun blendShapesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendShapesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/blend-shapes-length.html","searchKeys":["blendShapesLength","open fun blendShapesLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.blendShapesLength"]},{"name":"open fun boneNames(j: Int): String","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneNames","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-names.html","searchKeys":["boneNames","open fun boneNames(j: Int): String","com.google.ar.sceneform.lullmodel.SkeletonDef.boneNames"]},{"name":"open fun boneNamesLength(): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneNamesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-names-length.html","searchKeys":["boneNamesLength","open fun boneNamesLength(): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.boneNamesLength"]},{"name":"open fun boneParents(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneParents","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-parents.html","searchKeys":["boneParents","open fun boneParents(j: Int): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.boneParents"]},{"name":"open fun boneParentsAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneParentsAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-parents-as-byte-buffer.html","searchKeys":["boneParentsAsByteBuffer","open fun boneParentsAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.SkeletonDef.boneParentsAsByteBuffer"]},{"name":"open fun boneParentsInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneParentsInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-parents-in-byte-buffer.html","searchKeys":["boneParentsInByteBuffer","open fun boneParentsInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.SkeletonDef.boneParentsInByteBuffer"]},{"name":"open fun boneParentsLength(): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneParentsLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-parents-length.html","searchKeys":["boneParentsLength","open fun boneParentsLength(): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.boneParentsLength"]},{"name":"open fun boneTransforms(j: Int): Mat4x3","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneTransforms","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-transforms.html","searchKeys":["boneTransforms","open fun boneTransforms(j: Int): Mat4x3","com.google.ar.sceneform.lullmodel.SkeletonDef.boneTransforms"]},{"name":"open fun boneTransforms(obj: Mat4x3, j: Int): Mat4x3","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneTransforms","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-transforms.html","searchKeys":["boneTransforms","open fun boneTransforms(obj: Mat4x3, j: Int): Mat4x3","com.google.ar.sceneform.lullmodel.SkeletonDef.boneTransforms"]},{"name":"open fun boneTransformsLength(): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.boneTransformsLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/bone-transforms-length.html","searchKeys":["boneTransformsLength","open fun boneTransformsLength(): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.boneTransformsLength"]},{"name":"open fun boundingBox(): AabbDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.boundingBox","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/bounding-box.html","searchKeys":["boundingBox","open fun boundingBox(): AabbDef","com.google.ar.sceneform.lullmodel.ModelDef.boundingBox"]},{"name":"open fun boundingBox(obj: AabbDef): AabbDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.boundingBox","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/bounding-box.html","searchKeys":["boundingBox","open fun boundingBox(obj: AabbDef): AabbDef","com.google.ar.sceneform.lullmodel.ModelDef.boundingBox"]},{"name":"open fun build(): Texture.Sampler","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/build.html","searchKeys":["build","open fun build(): Texture.Sampler","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.build"]},{"name":"open fun build(): Vertex","description":"com.google.ar.sceneform.rendering.Vertex.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/build.html","searchKeys":["build","open fun build(): Vertex","com.google.ar.sceneform.rendering.Vertex.Builder.build"]},{"name":"open fun build(engine: Engine): CompletableFuture<Material>","description":"com.google.ar.sceneform.rendering.Material.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): CompletableFuture<Material>","com.google.ar.sceneform.rendering.Material.Builder.build"]},{"name":"open fun build(engine: Engine): CompletableFuture<T>","description":"com.google.ar.sceneform.rendering.Renderable.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): CompletableFuture<T>","com.google.ar.sceneform.rendering.Renderable.Builder.build"]},{"name":"open fun build(engine: Engine): CompletableFuture<Texture>","description":"com.google.ar.sceneform.rendering.Texture.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): CompletableFuture<Texture>","com.google.ar.sceneform.rendering.Texture.Builder.build"]},{"name":"open fun build(engine: Engine): CompletableFuture<ViewRenderable>","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): CompletableFuture<ViewRenderable>","com.google.ar.sceneform.rendering.ViewRenderable.Builder.build"]},{"name":"open fun build(engine: Engine): Geometry","description":"io.github.sceneview.geometries.Geometry.Builder.build","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): Geometry","io.github.sceneview.geometries.Geometry.Builder.build"]},{"name":"open fun build(engine: Engine): RenderableDefinition","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): RenderableDefinition","com.google.ar.sceneform.rendering.RenderableDefinition.Builder.build"]},{"name":"open fun build(engine: Engine): RenderableDefinition.Submesh","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.build","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/-builder/build.html","searchKeys":["build","open fun build(engine: Engine): RenderableDefinition.Submesh","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.build"]},{"name":"open fun buildInstanceData(engine: Engine, instance: RenderableInstance, renderedEntity: Int)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.buildInstanceData","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/build-instance-data.html","searchKeys":["buildInstanceData","open fun buildInstanceData(engine: Engine, instance: RenderableInstance, renderedEntity: Int)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.buildInstanceData"]},{"name":"open fun builder(): Material.Builder","description":"com.google.ar.sceneform.rendering.Material.builder","location":"sceneview/com.google.ar.sceneform.rendering/-material/builder.html","searchKeys":["builder","open fun builder(): Material.Builder","com.google.ar.sceneform.rendering.Material.builder"]},{"name":"open fun builder(): ModelRenderable.Builder","description":"com.google.ar.sceneform.rendering.ModelRenderable.builder","location":"sceneview/com.google.ar.sceneform.rendering/-model-renderable/builder.html","searchKeys":["builder","open fun builder(): ModelRenderable.Builder","com.google.ar.sceneform.rendering.ModelRenderable.builder"]},{"name":"open fun builder(): RenderableDefinition.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/builder.html","searchKeys":["builder","open fun builder(): RenderableDefinition.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.builder"]},{"name":"open fun builder(): RenderableDefinition.Submesh.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.builder","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/builder.html","searchKeys":["builder","open fun builder(): RenderableDefinition.Submesh.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.builder"]},{"name":"open fun builder(): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.builder","location":"sceneview/com.google.ar.sceneform.rendering/-texture/builder.html","searchKeys":["builder","open fun builder(): Texture.Builder","com.google.ar.sceneform.rendering.Texture.builder"]},{"name":"open fun builder(): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.builder","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/builder.html","searchKeys":["builder","open fun builder(): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.builder"]},{"name":"open fun builder(): Vertex.Builder","description":"com.google.ar.sceneform.rendering.Vertex.builder","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/builder.html","searchKeys":["builder","open fun builder(): Vertex.Builder","com.google.ar.sceneform.rendering.Vertex.builder"]},{"name":"open fun builder(): ViewRenderable.Builder","description":"com.google.ar.sceneform.rendering.ViewRenderable.builder","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/builder.html","searchKeys":["builder","open fun builder(): ViewRenderable.Builder","com.google.ar.sceneform.rendering.ViewRenderable.builder"]},{"name":"open fun c0(): Vec4","description":"com.google.ar.sceneform.lullmodel.Mat4x3.c0","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/c0.html","searchKeys":["c0","open fun c0(): Vec4","com.google.ar.sceneform.lullmodel.Mat4x3.c0"]},{"name":"open fun c0(obj: Vec4): Vec4","description":"com.google.ar.sceneform.lullmodel.Mat4x3.c0","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/c0.html","searchKeys":["c0","open fun c0(obj: Vec4): Vec4","com.google.ar.sceneform.lullmodel.Mat4x3.c0"]},{"name":"open fun c1(): Vec4","description":"com.google.ar.sceneform.lullmodel.Mat4x3.c1","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/c1.html","searchKeys":["c1","open fun c1(): Vec4","com.google.ar.sceneform.lullmodel.Mat4x3.c1"]},{"name":"open fun c1(obj: Vec4): Vec4","description":"com.google.ar.sceneform.lullmodel.Mat4x3.c1","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/c1.html","searchKeys":["c1","open fun c1(obj: Vec4): Vec4","com.google.ar.sceneform.lullmodel.Mat4x3.c1"]},{"name":"open fun c2(): Vec4","description":"com.google.ar.sceneform.lullmodel.Mat4x3.c2","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/c2.html","searchKeys":["c2","open fun c2(): Vec4","com.google.ar.sceneform.lullmodel.Mat4x3.c2"]},{"name":"open fun c2(obj: Vec4): Vec4","description":"com.google.ar.sceneform.lullmodel.Mat4x3.c2","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/c2.html","searchKeys":["c2","open fun c2(obj: Vec4): Vec4","com.google.ar.sceneform.lullmodel.Mat4x3.c2"]},{"name":"open fun checkChanged(id: Int): Boolean","description":"io.github.sceneview.collision.ChangeId.checkChanged","location":"sceneview/io.github.sceneview.collision/-change-id/check-changed.html","searchKeys":["checkChanged","open fun checkChanged(id: Int): Boolean","io.github.sceneview.collision.ChangeId.checkChanged"]},{"name":"open fun checkElementIndex(index: Int, size: Int)","description":"io.github.sceneview.collision.Preconditions.checkElementIndex","location":"sceneview/io.github.sceneview.collision/-preconditions/check-element-index.html","searchKeys":["checkElementIndex","open fun checkElementIndex(index: Int, size: Int)","io.github.sceneview.collision.Preconditions.checkElementIndex"]},{"name":"open fun checkElementIndex(index: Int, size: Int, desc: String)","description":"io.github.sceneview.collision.Preconditions.checkElementIndex","location":"sceneview/io.github.sceneview.collision/-preconditions/check-element-index.html","searchKeys":["checkElementIndex","open fun checkElementIndex(index: Int, size: Int, desc: String)","io.github.sceneview.collision.Preconditions.checkElementIndex"]},{"name":"open fun checkMinAndroidApiLevel()","description":"com.google.ar.sceneform.utilities.AndroidPreconditions.checkMinAndroidApiLevel","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/check-min-android-api-level.html","searchKeys":["checkMinAndroidApiLevel","open fun checkMinAndroidApiLevel()","com.google.ar.sceneform.utilities.AndroidPreconditions.checkMinAndroidApiLevel"]},{"name":"open fun checkState(expression: Boolean)","description":"io.github.sceneview.collision.Preconditions.checkState","location":"sceneview/io.github.sceneview.collision/-preconditions/check-state.html","searchKeys":["checkState","open fun checkState(expression: Boolean)","io.github.sceneview.collision.Preconditions.checkState"]},{"name":"open fun checkState(expression: Boolean, errorMessage: Any)","description":"io.github.sceneview.collision.Preconditions.checkState","location":"sceneview/io.github.sceneview.collision/-preconditions/check-state.html","searchKeys":["checkState","open fun checkState(expression: Boolean, errorMessage: Any)","io.github.sceneview.collision.Preconditions.checkState"]},{"name":"open fun checkUiThread()","description":"com.google.ar.sceneform.utilities.AndroidPreconditions.checkUiThread","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/check-ui-thread.html","searchKeys":["checkUiThread","open fun checkUiThread()","com.google.ar.sceneform.utilities.AndroidPreconditions.checkUiThread"]},{"name":"open fun clamp(value: Float, min: Float, max: Float): Float","description":"io.github.sceneview.collision.MathHelper.clamp","location":"sceneview/io.github.sceneview.collision/-math-helper/clamp.html","searchKeys":["clamp","open fun clamp(value: Float, min: Float, max: Float): Float","io.github.sceneview.collision.MathHelper.clamp"]},{"name":"open fun clear()","description":"com.google.flatbuffers.FlatBufferBuilder.clear","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/clear.html","searchKeys":["clear","open fun clear()","com.google.flatbuffers.FlatBufferBuilder.clear"]},{"name":"open fun cloneByteBuffer(original: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.utilities.BufferHelper.cloneByteBuffer","location":"sceneview/com.google.ar.sceneform.utilities/-buffer-helper/clone-byte-buffer.html","searchKeys":["cloneByteBuffer","open fun cloneByteBuffer(original: ByteBuffer): ByteBuffer","com.google.ar.sceneform.utilities.BufferHelper.cloneByteBuffer"]},{"name":"open fun cmPerUnit(): Float","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.cmPerUnit","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/cm-per-unit.html","searchKeys":["cmPerUnit","open fun cmPerUnit(): Float","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.cmPerUnit"]},{"name":"open fun collidable(): ModelPipelineCollidableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.collidable","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/collidable.html","searchKeys":["collidable","open fun collidable(): ModelPipelineCollidableDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.collidable"]},{"name":"open fun collidable(obj: ModelPipelineCollidableDef): ModelPipelineCollidableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.collidable","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/collidable.html","searchKeys":["collidable","open fun collidable(obj: ModelPipelineCollidableDef): ModelPipelineCollidableDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.collidable"]},{"name":"open fun convertPxToDp(px: Int): Float","description":"com.google.ar.sceneform.rendering.ViewRenderableHelpers.convertPxToDp","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable-helpers/convert-px-to-dp.html","searchKeys":["convertPxToDp","open fun convertPxToDp(px: Int): Float","com.google.ar.sceneform.rendering.ViewRenderableHelpers.convertPxToDp"]},{"name":"open fun convertWorldPositionToLocalView(node: ViewNode, worldPos: Vector3): Vector3","description":"com.google.ar.sceneform.rendering.ViewRenderable.convertWorldPositionToLocalView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/convert-world-position-to-local-view.html","searchKeys":["convertWorldPositionToLocalView","open fun convertWorldPositionToLocalView(node: ViewNode, worldPos: Vector3): Vector3","com.google.ar.sceneform.rendering.ViewRenderable.convertWorldPositionToLocalView"]},{"name":"open fun copyByteBuffer(in: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.copyByteBuffer","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/copy-byte-buffer.html","searchKeys":["copyByteBuffer","open fun copyByteBuffer(in: ByteBuffer): ByteBuffer","com.google.ar.sceneform.utilities.SceneformBufferUtils.copyByteBuffer"]},{"name":"open fun copyByteBufferToArray(in: ByteBuffer): Array<Byte>","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.copyByteBufferToArray","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/copy-byte-buffer-to-array.html","searchKeys":["copyByteBufferToArray","open fun copyByteBufferToArray(in: ByteBuffer): Array<Byte>","com.google.ar.sceneform.utilities.SceneformBufferUtils.copyByteBufferToArray"]},{"name":"open fun createAabbDef(builder: FlatBufferBuilder, min_x: Float, min_y: Float, min_z: Float, max_x: Float, max_y: Float, max_z: Float): Int","description":"com.google.ar.sceneform.lullmodel.AabbDef.createAabbDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/create-aabb-def.html","searchKeys":["createAabbDef","open fun createAabbDef(builder: FlatBufferBuilder, min_x: Float, min_y: Float, min_z: Float, max_x: Float, max_y: Float, max_z: Float): Int","com.google.ar.sceneform.lullmodel.AabbDef.createAabbDef"]},{"name":"open fun createAabbsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createAabbsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-aabbs-vector.html","searchKeys":["createAabbsVector","open fun createAabbsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createAabbsVector"]},{"name":"open fun createArcDef(builder: FlatBufferBuilder, startAngle: Float, angleSize: Float, innerRadius: Float, outerRadius: Float, numSamples: Int): Int","description":"com.google.ar.sceneform.lullmodel.ArcDef.createArcDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/create-arc-def.html","searchKeys":["createArcDef","open fun createArcDef(builder: FlatBufferBuilder, startAngle: Float, angleSize: Float, innerRadius: Float, outerRadius: Float, numSamples: Int): Int","com.google.ar.sceneform.lullmodel.ArcDef.createArcDef"]},{"name":"open fun createAttributesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.createAttributesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/create-attributes-vector.html","searchKeys":["createAttributesVector","open fun createAttributesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.createAttributesVector"]},{"name":"open fun createBlendShape(builder: FlatBufferBuilder, name: Long, vertex_dataOffset: Int, vertex_indices32Offset: Int, vertex_indices16Offset: Int, tangent_dataOffset: Int, tangent_indices32Offset: Int, tangent_indices16Offset: Int): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createBlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-blend-shape.html","searchKeys":["createBlendShape","open fun createBlendShape(builder: FlatBufferBuilder, name: Long, vertex_dataOffset: Int, vertex_indices32Offset: Int, vertex_indices16Offset: Int, tangent_dataOffset: Int, tangent_indices32Offset: Int, tangent_indices16Offset: Int): Int","com.google.ar.sceneform.lullmodel.BlendShape.createBlendShape"]},{"name":"open fun createBlendShapesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createBlendShapesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-blend-shapes-vector.html","searchKeys":["createBlendShapesVector","open fun createBlendShapesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createBlendShapesVector"]},{"name":"open fun createBoneNamesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.createBoneNamesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/create-bone-names-vector.html","searchKeys":["createBoneNamesVector","open fun createBoneNamesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.createBoneNamesVector"]},{"name":"open fun createBoneParentsVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.createBoneParentsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/create-bone-parents-vector.html","searchKeys":["createBoneParentsVector","open fun createBoneParentsVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.createBoneParentsVector"]},{"name":"open fun createBoneParentsVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.createBoneParentsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/create-bone-parents-vector.html","searchKeys":["createBoneParentsVector","open fun createBoneParentsVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.createBoneParentsVector"]},{"name":"open fun createByteVector(arr: Array<Byte>): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createByteVector","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-byte-vector.html","searchKeys":["createByteVector","open fun createByteVector(arr: Array<Byte>): Int","com.google.flatbuffers.FlatBufferBuilder.createByteVector"]},{"name":"open fun createByteVector(arr: Array<Byte>, offset: Int, length: Int): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createByteVector","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-byte-vector.html","searchKeys":["createByteVector","open fun createByteVector(arr: Array<Byte>, offset: Int, length: Int): Int","com.google.flatbuffers.FlatBufferBuilder.createByteVector"]},{"name":"open fun createByteVector(byteBuffer: ByteBuffer): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createByteVector","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-byte-vector.html","searchKeys":["createByteVector","open fun createByteVector(byteBuffer: ByteBuffer): Int","com.google.flatbuffers.FlatBufferBuilder.createByteVector"]},{"name":"open fun createColor(builder: FlatBufferBuilder, r: Float, g: Float, b: Float, a: Float): Int","description":"com.google.ar.sceneform.lullmodel.Color.createColor","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/create-color.html","searchKeys":["createColor","open fun createColor(builder: FlatBufferBuilder, r: Float, g: Float, b: Float, a: Float): Int","com.google.ar.sceneform.lullmodel.Color.createColor"]},{"name":"open fun createDataBool(builder: FlatBufferBuilder, value: Boolean): Int","description":"com.google.ar.sceneform.lullmodel.DataBool.createDataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/create-data-bool.html","searchKeys":["createDataBool","open fun createDataBool(builder: FlatBufferBuilder, value: Boolean): Int","com.google.ar.sceneform.lullmodel.DataBool.createDataBool"]},{"name":"open fun createDataBytes(builder: FlatBufferBuilder, valueOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.DataBytes.createDataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/create-data-bytes.html","searchKeys":["createDataBytes","open fun createDataBytes(builder: FlatBufferBuilder, valueOffset: Int): Int","com.google.ar.sceneform.lullmodel.DataBytes.createDataBytes"]},{"name":"open fun createDataFloat(builder: FlatBufferBuilder, value: Float): Int","description":"com.google.ar.sceneform.lullmodel.DataFloat.createDataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/create-data-float.html","searchKeys":["createDataFloat","open fun createDataFloat(builder: FlatBufferBuilder, value: Float): Int","com.google.ar.sceneform.lullmodel.DataFloat.createDataFloat"]},{"name":"open fun createDataHashValue(builder: FlatBufferBuilder, value: Long): Int","description":"com.google.ar.sceneform.lullmodel.DataHashValue.createDataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/create-data-hash-value.html","searchKeys":["createDataHashValue","open fun createDataHashValue(builder: FlatBufferBuilder, value: Long): Int","com.google.ar.sceneform.lullmodel.DataHashValue.createDataHashValue"]},{"name":"open fun createDataInt(builder: FlatBufferBuilder, value: Int): Int","description":"com.google.ar.sceneform.lullmodel.DataInt.createDataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/create-data-int.html","searchKeys":["createDataInt","open fun createDataInt(builder: FlatBufferBuilder, value: Int): Int","com.google.ar.sceneform.lullmodel.DataInt.createDataInt"]},{"name":"open fun createDataString(builder: FlatBufferBuilder, valueOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.DataString.createDataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/create-data-string.html","searchKeys":["createDataString","open fun createDataString(builder: FlatBufferBuilder, valueOffset: Int): Int","com.google.ar.sceneform.lullmodel.DataString.createDataString"]},{"name":"open fun createDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.createDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/create-data-vector.html","searchKeys":["createDataVector","open fun createDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.TextureDef.createDataVector"]},{"name":"open fun createDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.createDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/create-data-vector.html","searchKeys":["createDataVector","open fun createDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.TextureDef.createDataVector"]},{"name":"open fun createIndices16Vector(builder: FlatBufferBuilder, data: Array<Short>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createIndices16Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-indices16-vector.html","searchKeys":["createIndices16Vector","open fun createIndices16Vector(builder: FlatBufferBuilder, data: Array<Short>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createIndices16Vector"]},{"name":"open fun createIndices32Vector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createIndices32Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-indices32-vector.html","searchKeys":["createIndices32Vector","open fun createIndices32Vector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createIndices32Vector"]},{"name":"open fun createInstance(engine: Engine, assetLoader: AssetLoader, resourceLoader: ResourceLoader, transformProvider: TransformProvider): RenderableInstance","description":"com.google.ar.sceneform.rendering.Renderable.createInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/create-instance.html","searchKeys":["createInstance","open fun createInstance(engine: Engine, assetLoader: AssetLoader, resourceLoader: ResourceLoader, transformProvider: TransformProvider): RenderableInstance","com.google.ar.sceneform.rendering.Renderable.createInstance"]},{"name":"open fun createKeyVariantPairDef(builder: FlatBufferBuilder, keyOffset: Int, hash_key: Long, value_type: Byte, valueOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.createKeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/create-key-variant-pair-def.html","searchKeys":["createKeyVariantPairDef","open fun createKeyVariantPairDef(builder: FlatBufferBuilder, keyOffset: Int, hash_key: Long, value_type: Byte, valueOffset: Int): Int","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.createKeyVariantPairDef"]},{"name":"open fun createLodsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelDef.createLodsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/create-lods-vector.html","searchKeys":["createLodsVector","open fun createLodsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelDef.createLodsVector"]},{"name":"open fun createMat4x3(builder: FlatBufferBuilder, c0_x: Float, c0_y: Float, c0_z: Float, c0_w: Float, c1_x: Float, c1_y: Float, c1_z: Float, c1_w: Float, c2_x: Float, c2_y: Float, c2_z: Float, c2_w: Float): Int","description":"com.google.ar.sceneform.lullmodel.Mat4x3.createMat4x3","location":"sceneview/com.google.ar.sceneform.lullmodel/-mat4x3/create-mat4x3.html","searchKeys":["createMat4x3","open fun createMat4x3(builder: FlatBufferBuilder, c0_x: Float, c0_y: Float, c0_z: Float, c0_w: Float, c1_x: Float, c1_y: Float, c1_z: Float, c1_w: Float, c2_x: Float, c2_y: Float, c2_z: Float, c2_w: Float): Int","com.google.ar.sceneform.lullmodel.Mat4x3.createMat4x3"]},{"name":"open fun createMaterialDef(builder: FlatBufferBuilder, nameOffset: Int, propertiesOffset: Int, texturesOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.MaterialDef.createMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/create-material-def.html","searchKeys":["createMaterialDef","open fun createMaterialDef(builder: FlatBufferBuilder, nameOffset: Int, propertiesOffset: Int, texturesOffset: Int): Int","com.google.ar.sceneform.lullmodel.MaterialDef.createMaterialDef"]},{"name":"open fun createMaterialTextureDef(builder: FlatBufferBuilder, nameOffset: Int, usage: Int, usage_per_channelOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.createMaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/create-material-texture-def.html","searchKeys":["createMaterialTextureDef","open fun createMaterialTextureDef(builder: FlatBufferBuilder, nameOffset: Int, usage: Int, usage_per_channelOffset: Int): Int","com.google.ar.sceneform.lullmodel.MaterialTextureDef.createMaterialTextureDef"]},{"name":"open fun createMaterialsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createMaterialsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-materials-vector.html","searchKeys":["createMaterialsVector","open fun createMaterialsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createMaterialsVector"]},{"name":"open fun createMaterialsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.createMaterialsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/create-materials-vector.html","searchKeys":["createMaterialsVector","open fun createMaterialsVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.createMaterialsVector"]},{"name":"open fun createModelIndexRange(builder: FlatBufferBuilder, start: Long, end: Long): Int","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange.createModelIndexRange","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/create-model-index-range.html","searchKeys":["createModelIndexRange","open fun createModelIndexRange(builder: FlatBufferBuilder, start: Long, end: Long): Int","com.google.ar.sceneform.lullmodel.ModelIndexRange.createModelIndexRange"]},{"name":"open fun createModelInstanceDef(builder: FlatBufferBuilder, vertex_dataOffset: Int, indices16Offset: Int, indices32Offset: Int, rangesOffset: Int, materialsOffset: Int, vertex_attributesOffset: Int, num_vertices: Long, interleaved: Boolean, shader_to_mesh_bonesOffset: Int, blend_shapesOffset: Int, blend_attributesOffset: Int, aabbsOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-model-instance-def.html","searchKeys":["createModelInstanceDef","open fun createModelInstanceDef(builder: FlatBufferBuilder, vertex_dataOffset: Int, indices16Offset: Int, indices32Offset: Int, rangesOffset: Int, materialsOffset: Int, vertex_attributesOffset: Int, num_vertices: Long, interleaved: Boolean, shader_to_mesh_bonesOffset: Int, blend_shapesOffset: Int, blend_attributesOffset: Int, aabbsOffset: Int): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createModelInstanceDef"]},{"name":"open fun createModelPipelineCollidableDef(builder: FlatBufferBuilder, sourceOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.createModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/create-model-pipeline-collidable-def.html","searchKeys":["createModelPipelineCollidableDef","open fun createModelPipelineCollidableDef(builder: FlatBufferBuilder, sourceOffset: Int): Int","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.createModelPipelineCollidableDef"]},{"name":"open fun createModelPipelineDef(builder: FlatBufferBuilder, sourcesOffset: Int, renderablesOffset: Int, collidableOffset: Int, skeletonOffset: Int, texturesOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.createModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/create-model-pipeline-def.html","searchKeys":["createModelPipelineDef","open fun createModelPipelineDef(builder: FlatBufferBuilder, sourcesOffset: Int, renderablesOffset: Int, collidableOffset: Int, skeletonOffset: Int, texturesOffset: Int): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.createModelPipelineDef"]},{"name":"open fun createModelPipelineImportDef(builder: FlatBufferBuilder, nameOffset: Int, fileOffset: Int, recenter: Boolean, scale: Float, axis_system: Int, smoothing_angle: Float, max_bone_weights: Int, report_errors_to_stdout: Boolean, flip_texture_coordinates: Boolean, flatten_hierarchy_and_transform_vertices_to_root_space: Boolean, use_specular_glossiness_textures_if_present: Boolean, fix_infacing_normals: Boolean, ensure_vertex_orientation_w_not_zero: Boolean, cm_per_unit: Float, target_meshesOffset: Int, merge_materials: Boolean): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.createModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/create-model-pipeline-import-def.html","searchKeys":["createModelPipelineImportDef","open fun createModelPipelineImportDef(builder: FlatBufferBuilder, nameOffset: Int, fileOffset: Int, recenter: Boolean, scale: Float, axis_system: Int, smoothing_angle: Float, max_bone_weights: Int, report_errors_to_stdout: Boolean, flip_texture_coordinates: Boolean, flatten_hierarchy_and_transform_vertices_to_root_space: Boolean, use_specular_glossiness_textures_if_present: Boolean, fix_infacing_normals: Boolean, ensure_vertex_orientation_w_not_zero: Boolean, cm_per_unit: Float, target_meshesOffset: Int, merge_materials: Boolean): Int","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.createModelPipelineImportDef"]},{"name":"open fun createModelPipelineMaterialDef(builder: FlatBufferBuilder, materialOffset: Int, name_overrideOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.createModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/create-model-pipeline-material-def.html","searchKeys":["createModelPipelineMaterialDef","open fun createModelPipelineMaterialDef(builder: FlatBufferBuilder, materialOffset: Int, name_overrideOffset: Int): Int","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.createModelPipelineMaterialDef"]},{"name":"open fun createModelPipelineRenderableDef(builder: FlatBufferBuilder, sourceOffset: Int, materialsOffset: Int, attributesOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.createModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/create-model-pipeline-renderable-def.html","searchKeys":["createModelPipelineRenderableDef","open fun createModelPipelineRenderableDef(builder: FlatBufferBuilder, sourceOffset: Int, materialsOffset: Int, attributesOffset: Int): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.createModelPipelineRenderableDef"]},{"name":"open fun createModelPipelineSkeletonDef(builder: FlatBufferBuilder, sourceOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.createModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/create-model-pipeline-skeleton-def.html","searchKeys":["createModelPipelineSkeletonDef","open fun createModelPipelineSkeletonDef(builder: FlatBufferBuilder, sourceOffset: Int): Int","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.createModelPipelineSkeletonDef"]},{"name":"open fun createQuat(builder: FlatBufferBuilder, x: Float, y: Float, z: Float, w: Float): Int","description":"com.google.ar.sceneform.lullmodel.Quat.createQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/create-quat.html","searchKeys":["createQuat","open fun createQuat(builder: FlatBufferBuilder, x: Float, y: Float, z: Float, w: Float): Int","com.google.ar.sceneform.lullmodel.Quat.createQuat"]},{"name":"open fun createRect(builder: FlatBufferBuilder, x: Float, y: Float, w: Float, h: Float): Int","description":"com.google.ar.sceneform.lullmodel.Rect.createRect","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/create-rect.html","searchKeys":["createRect","open fun createRect(builder: FlatBufferBuilder, x: Float, y: Float, w: Float, h: Float): Int","com.google.ar.sceneform.lullmodel.Rect.createRect"]},{"name":"open fun createRecti(builder: FlatBufferBuilder, x: Int, y: Int, w: Int, h: Int): Int","description":"com.google.ar.sceneform.lullmodel.Recti.createRecti","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/create-recti.html","searchKeys":["createRecti","open fun createRecti(builder: FlatBufferBuilder, x: Int, y: Int, w: Int, h: Int): Int","com.google.ar.sceneform.lullmodel.Recti.createRecti"]},{"name":"open fun createRenderablesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.createRenderablesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/create-renderables-vector.html","searchKeys":["createRenderablesVector","open fun createRenderablesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.createRenderablesVector"]},{"name":"open fun createShaderToMeshBonesVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createShaderToMeshBonesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-shader-to-mesh-bones-vector.html","searchKeys":["createShaderToMeshBonesVector","open fun createShaderToMeshBonesVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createShaderToMeshBonesVector"]},{"name":"open fun createShaderToMeshBonesVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createShaderToMeshBonesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-shader-to-mesh-bones-vector.html","searchKeys":["createShaderToMeshBonesVector","open fun createShaderToMeshBonesVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createShaderToMeshBonesVector"]},{"name":"open fun createSkeletonDef(builder: FlatBufferBuilder, bone_namesOffset: Int, bone_parentsOffset: Int, bone_transformsOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.createSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/create-skeleton-def.html","searchKeys":["createSkeletonDef","open fun createSkeletonDef(builder: FlatBufferBuilder, bone_namesOffset: Int, bone_parentsOffset: Int, bone_transformsOffset: Int): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.createSkeletonDef"]},{"name":"open fun createSourcesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.createSourcesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/create-sources-vector.html","searchKeys":["createSourcesVector","open fun createSourcesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.createSourcesVector"]},{"name":"open fun createString(s: ByteBuffer): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createString","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-string.html","searchKeys":["createString","open fun createString(s: ByteBuffer): Int","com.google.flatbuffers.FlatBufferBuilder.createString"]},{"name":"open fun createString(s: CharSequence): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createString","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-string.html","searchKeys":["createString","open fun createString(s: CharSequence): Int","com.google.flatbuffers.FlatBufferBuilder.createString"]},{"name":"open fun createTangentDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createTangentDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-tangent-data-vector.html","searchKeys":["createTangentDataVector","open fun createTangentDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.BlendShape.createTangentDataVector"]},{"name":"open fun createTangentDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createTangentDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-tangent-data-vector.html","searchKeys":["createTangentDataVector","open fun createTangentDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.BlendShape.createTangentDataVector"]},{"name":"open fun createTangentIndices16Vector(builder: FlatBufferBuilder, data: Array<Short>): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createTangentIndices16Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-tangent-indices16-vector.html","searchKeys":["createTangentIndices16Vector","open fun createTangentIndices16Vector(builder: FlatBufferBuilder, data: Array<Short>): Int","com.google.ar.sceneform.lullmodel.BlendShape.createTangentIndices16Vector"]},{"name":"open fun createTangentIndices32Vector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createTangentIndices32Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-tangent-indices32-vector.html","searchKeys":["createTangentIndices32Vector","open fun createTangentIndices32Vector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.BlendShape.createTangentIndices32Vector"]},{"name":"open fun createTargetMeshesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.createTargetMeshesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/create-target-meshes-vector.html","searchKeys":["createTargetMeshesVector","open fun createTargetMeshesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.createTargetMeshesVector"]},{"name":"open fun createTextureDef(builder: FlatBufferBuilder, nameOffset: Int, fileOffset: Int, dataOffset: Int, generate_mipmaps: Boolean, premultiply_alpha: Boolean, min_filter: Int, mag_filter: Int, wrap_s: Int, wrap_t: Int, wrap_r: Int, target_type: Int, is_rgbm: Boolean): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.createTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/create-texture-def.html","searchKeys":["createTextureDef","open fun createTextureDef(builder: FlatBufferBuilder, nameOffset: Int, fileOffset: Int, dataOffset: Int, generate_mipmaps: Boolean, premultiply_alpha: Boolean, min_filter: Int, mag_filter: Int, wrap_s: Int, wrap_t: Int, wrap_r: Int, target_type: Int, is_rgbm: Boolean): Int","com.google.ar.sceneform.lullmodel.TextureDef.createTextureDef"]},{"name":"open fun createTexturesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.MaterialDef.createTexturesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/create-textures-vector.html","searchKeys":["createTexturesVector","open fun createTexturesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.MaterialDef.createTexturesVector"]},{"name":"open fun createTexturesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelDef.createTexturesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/create-textures-vector.html","searchKeys":["createTexturesVector","open fun createTexturesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelDef.createTexturesVector"]},{"name":"open fun createTexturesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.createTexturesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/create-textures-vector.html","searchKeys":["createTexturesVector","open fun createTexturesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.createTexturesVector"]},{"name":"open fun createUnintializedVector(elem_size: Int, num_elems: Int, alignment: Int): ByteBuffer","description":"com.google.flatbuffers.FlatBufferBuilder.createUnintializedVector","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-unintialized-vector.html","searchKeys":["createUnintializedVector","open fun createUnintializedVector(elem_size: Int, num_elems: Int, alignment: Int): ByteBuffer","com.google.flatbuffers.FlatBufferBuilder.createUnintializedVector"]},{"name":"open fun createUsagePerChannelVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.createUsagePerChannelVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/create-usage-per-channel-vector.html","searchKeys":["createUsagePerChannelVector","open fun createUsagePerChannelVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.MaterialTextureDef.createUsagePerChannelVector"]},{"name":"open fun createValueVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.DataBytes.createValueVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/create-value-vector.html","searchKeys":["createValueVector","open fun createValueVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.DataBytes.createValueVector"]},{"name":"open fun createValueVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.DataBytes.createValueVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/create-value-vector.html","searchKeys":["createValueVector","open fun createValueVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.DataBytes.createValueVector"]},{"name":"open fun createValuesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.createValuesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/create-values-vector.html","searchKeys":["createValuesVector","open fun createValuesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.VariantArrayDef.createValuesVector"]},{"name":"open fun createValuesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.createValuesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/create-values-vector.html","searchKeys":["createValuesVector","open fun createValuesVector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.VariantMapDef.createValuesVector"]},{"name":"open fun createVariantArrayDef(builder: FlatBufferBuilder, valuesOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.createVariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/create-variant-array-def.html","searchKeys":["createVariantArrayDef","open fun createVariantArrayDef(builder: FlatBufferBuilder, valuesOffset: Int): Int","com.google.ar.sceneform.lullmodel.VariantArrayDef.createVariantArrayDef"]},{"name":"open fun createVariantArrayDefImpl(builder: FlatBufferBuilder, value_type: Byte, valueOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.createVariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/create-variant-array-def-impl.html","searchKeys":["createVariantArrayDefImpl","open fun createVariantArrayDefImpl(builder: FlatBufferBuilder, value_type: Byte, valueOffset: Int): Int","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.createVariantArrayDefImpl"]},{"name":"open fun createVariantMapDef(builder: FlatBufferBuilder, valuesOffset: Int): Int","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.createVariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/create-variant-map-def.html","searchKeys":["createVariantMapDef","open fun createVariantMapDef(builder: FlatBufferBuilder, valuesOffset: Int): Int","com.google.ar.sceneform.lullmodel.VariantMapDef.createVariantMapDef"]},{"name":"open fun createVec2(builder: FlatBufferBuilder, x: Float, y: Float): Int","description":"com.google.ar.sceneform.lullmodel.Vec2.createVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/create-vec2.html","searchKeys":["createVec2","open fun createVec2(builder: FlatBufferBuilder, x: Float, y: Float): Int","com.google.ar.sceneform.lullmodel.Vec2.createVec2"]},{"name":"open fun createVec2i(builder: FlatBufferBuilder, x: Int, y: Int): Int","description":"com.google.ar.sceneform.lullmodel.Vec2i.createVec2i","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/create-vec2i.html","searchKeys":["createVec2i","open fun createVec2i(builder: FlatBufferBuilder, x: Int, y: Int): Int","com.google.ar.sceneform.lullmodel.Vec2i.createVec2i"]},{"name":"open fun createVec3(builder: FlatBufferBuilder, x: Float, y: Float, z: Float): Int","description":"com.google.ar.sceneform.lullmodel.Vec3.createVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/create-vec3.html","searchKeys":["createVec3","open fun createVec3(builder: FlatBufferBuilder, x: Float, y: Float, z: Float): Int","com.google.ar.sceneform.lullmodel.Vec3.createVec3"]},{"name":"open fun createVec4(builder: FlatBufferBuilder, x: Float, y: Float, z: Float, w: Float): Int","description":"com.google.ar.sceneform.lullmodel.Vec4.createVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/create-vec4.html","searchKeys":["createVec4","open fun createVec4(builder: FlatBufferBuilder, x: Float, y: Float, z: Float, w: Float): Int","com.google.ar.sceneform.lullmodel.Vec4.createVec4"]},{"name":"open fun createVectorOfTables(offsets: Array<Int>): Int","description":"com.google.flatbuffers.FlatBufferBuilder.createVectorOfTables","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/create-vector-of-tables.html","searchKeys":["createVectorOfTables","open fun createVectorOfTables(offsets: Array<Int>): Int","com.google.flatbuffers.FlatBufferBuilder.createVectorOfTables"]},{"name":"open fun createVertexAttribute(builder: FlatBufferBuilder, usage: Int, type: Int): Int","description":"com.google.ar.sceneform.lullmodel.VertexAttribute.createVertexAttribute","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/create-vertex-attribute.html","searchKeys":["createVertexAttribute","open fun createVertexAttribute(builder: FlatBufferBuilder, usage: Int, type: Int): Int","com.google.ar.sceneform.lullmodel.VertexAttribute.createVertexAttribute"]},{"name":"open fun createVertexDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createVertexDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-vertex-data-vector.html","searchKeys":["createVertexDataVector","open fun createVertexDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.BlendShape.createVertexDataVector"]},{"name":"open fun createVertexDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createVertexDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-vertex-data-vector.html","searchKeys":["createVertexDataVector","open fun createVertexDataVector(builder: FlatBufferBuilder, data: Array<Byte>): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createVertexDataVector"]},{"name":"open fun createVertexDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createVertexDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-vertex-data-vector.html","searchKeys":["createVertexDataVector","open fun createVertexDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.BlendShape.createVertexDataVector"]},{"name":"open fun createVertexDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.createVertexDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/create-vertex-data-vector.html","searchKeys":["createVertexDataVector","open fun createVertexDataVector(builder: FlatBufferBuilder, data: ByteBuffer): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.createVertexDataVector"]},{"name":"open fun createVertexIndices16Vector(builder: FlatBufferBuilder, data: Array<Short>): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createVertexIndices16Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-vertex-indices16-vector.html","searchKeys":["createVertexIndices16Vector","open fun createVertexIndices16Vector(builder: FlatBufferBuilder, data: Array<Short>): Int","com.google.ar.sceneform.lullmodel.BlendShape.createVertexIndices16Vector"]},{"name":"open fun createVertexIndices32Vector(builder: FlatBufferBuilder, data: Array<Int>): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.createVertexIndices32Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/create-vertex-indices32-vector.html","searchKeys":["createVertexIndices32Vector","open fun createVertexIndices32Vector(builder: FlatBufferBuilder, data: Array<Int>): Int","com.google.ar.sceneform.lullmodel.BlendShape.createVertexIndices32Vector"]},{"name":"open fun cross(lhs: Vector3, rhs: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3.cross","location":"sceneview/io.github.sceneview.collision/-vector3/cross.html","searchKeys":["cross","open fun cross(lhs: Vector3, rhs: Vector3): Vector3","io.github.sceneview.collision.Vector3.cross"]},{"name":"open fun data(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.data","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/data.html","searchKeys":["data","open fun data(j: Int): Int","com.google.ar.sceneform.lullmodel.TextureDef.data"]},{"name":"open fun dataAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.TextureDef.dataAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/data-as-byte-buffer.html","searchKeys":["dataAsByteBuffer","open fun dataAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.TextureDef.dataAsByteBuffer"]},{"name":"open fun dataBuffer(): ByteBuffer","description":"com.google.flatbuffers.FlatBufferBuilder.dataBuffer","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/data-buffer.html","searchKeys":["dataBuffer","open fun dataBuffer(): ByteBuffer","com.google.flatbuffers.FlatBufferBuilder.dataBuffer"]},{"name":"open fun dataInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.TextureDef.dataInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/data-in-byte-buffer.html","searchKeys":["dataInByteBuffer","open fun dataInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.TextureDef.dataInByteBuffer"]},{"name":"open fun dataLength(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.dataLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/data-length.html","searchKeys":["dataLength","open fun dataLength(): Int","com.google.ar.sceneform.lullmodel.TextureDef.dataLength"]},{"name":"open fun decodeUtf8(buffer: ByteBuffer, offset: Int, length: Int): String","description":"com.google.flatbuffers.Utf8Safe.decodeUtf8","location":"sceneview/com.google.flatbuffers/-utf8-safe/decode-utf8.html","searchKeys":["decodeUtf8","open fun decodeUtf8(buffer: ByteBuffer, offset: Int, length: Int): String","com.google.flatbuffers.Utf8Safe.decodeUtf8"]},{"name":"open fun decomposeRotation(decomposedScale: Vector3, destMatrix: Matrix)","description":"io.github.sceneview.collision.Matrix.decomposeRotation","location":"sceneview/io.github.sceneview.collision/-matrix/decompose-rotation.html","searchKeys":["decomposeRotation","open fun decomposeRotation(decomposedScale: Vector3, destMatrix: Matrix)","io.github.sceneview.collision.Matrix.decomposeRotation"]},{"name":"open fun decomposeRotation(decomposedScale: Vector3, destRotation: Quaternion)","description":"io.github.sceneview.collision.Matrix.decomposeRotation","location":"sceneview/io.github.sceneview.collision/-matrix/decompose-rotation.html","searchKeys":["decomposeRotation","open fun decomposeRotation(decomposedScale: Vector3, destRotation: Quaternion)","io.github.sceneview.collision.Matrix.decomposeRotation"]},{"name":"open fun decomposeScale(destScale: Vector3)","description":"io.github.sceneview.collision.Matrix.decomposeScale","location":"sceneview/io.github.sceneview.collision/-matrix/decompose-scale.html","searchKeys":["decomposeScale","open fun decomposeScale(destScale: Vector3)","io.github.sceneview.collision.Matrix.decomposeScale"]},{"name":"open fun decomposeTranslation(destTranslation: Vector3)","description":"io.github.sceneview.collision.Matrix.decomposeTranslation","location":"sceneview/io.github.sceneview.collision/-matrix/decompose-translation.html","searchKeys":["decomposeTranslation","open fun decomposeTranslation(destTranslation: Vector3)","io.github.sceneview.collision.Matrix.decomposeTranslation"]},{"name":"open fun destroy()","description":"com.google.ar.sceneform.rendering.ExternalTexture.destroy","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/destroy.html","searchKeys":["destroy","open fun destroy()","com.google.ar.sceneform.rendering.ExternalTexture.destroy"]},{"name":"open fun destroy()","description":"com.google.ar.sceneform.rendering.RenderableInstance.destroy","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/destroy.html","searchKeys":["destroy","open fun destroy()","com.google.ar.sceneform.rendering.RenderableInstance.destroy"]},{"name":"open fun destroy()","description":"io.github.sceneview.SceneView.destroy","location":"sceneview/io.github.sceneview/-scene-view/destroy.html","searchKeys":["destroy","open fun destroy()","io.github.sceneview.SceneView.destroy"]},{"name":"open fun destroy()","description":"io.github.sceneview.environment.Environment.destroy","location":"sceneview/io.github.sceneview.environment/-environment/destroy.html","searchKeys":["destroy","open fun destroy()","io.github.sceneview.environment.Environment.destroy"]},{"name":"open fun destroy()","description":"io.github.sceneview.node.Node.destroy","location":"sceneview/io.github.sceneview.node/-node/destroy.html","searchKeys":["destroy","open fun destroy()","io.github.sceneview.node.Node.destroy"]},{"name":"open fun destroy(engine: Engine)","description":"com.google.ar.sceneform.rendering.TextureInternalData.destroy","location":"sceneview/com.google.ar.sceneform.rendering/-texture-internal-data/destroy.html","searchKeys":["destroy","open fun destroy(engine: Engine)","com.google.ar.sceneform.rendering.TextureInternalData.destroy"]},{"name":"open fun destroyAllResources()","description":"com.google.ar.sceneform.rendering.ResourceManager.destroyAllResources","location":"sceneview/com.google.ar.sceneform.rendering/-resource-manager/destroy-all-resources.html","searchKeys":["destroyAllResources","open fun destroyAllResources()","com.google.ar.sceneform.rendering.ResourceManager.destroyAllResources"]},{"name":"open fun destroyAllResources()","description":"com.google.ar.sceneform.resources.ResourceRegistry.destroyAllResources","location":"sceneview/com.google.ar.sceneform.resources/-resource-registry/destroy-all-resources.html","searchKeys":["destroyAllResources","open fun destroyAllResources()","com.google.ar.sceneform.resources.ResourceRegistry.destroyAllResources"]},{"name":"open fun detachView()","description":"com.google.ar.sceneform.rendering.ViewRenderable.detachView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/detach-view.html","searchKeys":["detachView","open fun detachView()","com.google.ar.sceneform.rendering.ViewRenderable.detachView"]},{"name":"open fun dispatchDraw(canvas: Canvas)","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.dispatchDraw","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/dispatch-draw.html","searchKeys":["dispatchDraw","open fun dispatchDraw(canvas: Canvas)","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.dispatchDraw"]},{"name":"open fun dispatchTouchEventToView(node: ViewNode, cameraNode: CameraNode, motionEvent: MotionEvent): Boolean","description":"com.google.ar.sceneform.rendering.ViewRenderable.dispatchTouchEventToView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/dispatch-touch-event-to-view.html","searchKeys":["dispatchTouchEventToView","open fun dispatchTouchEventToView(node: ViewNode, cameraNode: CameraNode, motionEvent: MotionEvent): Boolean","com.google.ar.sceneform.rendering.ViewRenderable.dispatchTouchEventToView"]},{"name":"open fun dot(lhs: Vector3, rhs: Vector3): Float","description":"io.github.sceneview.collision.Vector3.dot","location":"sceneview/io.github.sceneview.collision/-vector3/dot.html","searchKeys":["dot","open fun dot(lhs: Vector3, rhs: Vector3): Float","io.github.sceneview.collision.Vector3.dot"]},{"name":"open fun down(): Vector3","description":"io.github.sceneview.collision.Vector3.down","location":"sceneview/io.github.sceneview.collision/-vector3/down.html","searchKeys":["down","open fun down(): Vector3","io.github.sceneview.collision.Vector3.down"]},{"name":"open fun downloadAndProcessRenderable(inputStreamCreator: Callable<InputStream>): CompletableFuture<T>","description":"com.google.ar.sceneform.rendering.LoadRenderableFromFilamentGltfTask.downloadAndProcessRenderable","location":"sceneview/com.google.ar.sceneform.rendering/-load-renderable-from-filament-gltf-task/download-and-process-renderable.html","searchKeys":["downloadAndProcessRenderable","open fun downloadAndProcessRenderable(inputStreamCreator: Callable<InputStream>): CompletableFuture<T>","com.google.ar.sceneform.rendering.LoadRenderableFromFilamentGltfTask.downloadAndProcessRenderable"]},{"name":"open fun drawableResourceNameToIdentifier(context: Context, name: String): Int","description":"com.google.ar.sceneform.utilities.LoadHelper.drawableResourceNameToIdentifier","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/drawable-resource-name-to-identifier.html","searchKeys":["drawableResourceNameToIdentifier","open fun drawableResourceNameToIdentifier(context: Context, name: String): Int","com.google.ar.sceneform.utilities.LoadHelper.drawableResourceNameToIdentifier"]},{"name":"open fun enableCaching(cacheByteSize: Long, cacheBaseDir: File, cacheFolderName: String)","description":"com.google.ar.sceneform.utilities.LoadHelper.enableCaching","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/enable-caching.html","searchKeys":["enableCaching","open fun enableCaching(cacheByteSize: Long, cacheBaseDir: File, cacheFolderName: String)","com.google.ar.sceneform.utilities.LoadHelper.enableCaching"]},{"name":"open fun enableCaching(context: Context)","description":"com.google.ar.sceneform.utilities.LoadHelper.enableCaching","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/enable-caching.html","searchKeys":["enableCaching","open fun enableCaching(context: Context)","com.google.ar.sceneform.utilities.LoadHelper.enableCaching"]},{"name":"open fun encodeUtf8(in: CharSequence, out: ByteBuffer)","description":"com.google.flatbuffers.Utf8Safe.encodeUtf8","location":"sceneview/com.google.flatbuffers/-utf8-safe/encode-utf8.html","searchKeys":["encodeUtf8","open fun encodeUtf8(in: CharSequence, out: ByteBuffer)","com.google.flatbuffers.Utf8Safe.encodeUtf8"]},{"name":"open fun encodedLength(in: CharSequence): Int","description":"com.google.flatbuffers.Utf8Safe.encodedLength","location":"sceneview/com.google.flatbuffers/-utf8-safe/encoded-length.html","searchKeys":["encodedLength","open fun encodedLength(in: CharSequence): Int","com.google.flatbuffers.Utf8Safe.encodedLength"]},{"name":"open fun end(): Long","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange.end","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/end.html","searchKeys":["end","open fun end(): Long","com.google.ar.sceneform.lullmodel.ModelIndexRange.end"]},{"name":"open fun endBlendShape(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.endBlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/end-blend-shape.html","searchKeys":["endBlendShape","open fun endBlendShape(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.BlendShape.endBlendShape"]},{"name":"open fun endDataBool(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataBool.endDataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/end-data-bool.html","searchKeys":["endDataBool","open fun endDataBool(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataBool.endDataBool"]},{"name":"open fun endDataBytes(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataBytes.endDataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/end-data-bytes.html","searchKeys":["endDataBytes","open fun endDataBytes(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataBytes.endDataBytes"]},{"name":"open fun endDataFloat(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataFloat.endDataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/end-data-float.html","searchKeys":["endDataFloat","open fun endDataFloat(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataFloat.endDataFloat"]},{"name":"open fun endDataHashValue(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataHashValue.endDataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/end-data-hash-value.html","searchKeys":["endDataHashValue","open fun endDataHashValue(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataHashValue.endDataHashValue"]},{"name":"open fun endDataInt(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataInt.endDataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/end-data-int.html","searchKeys":["endDataInt","open fun endDataInt(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataInt.endDataInt"]},{"name":"open fun endDataQuat(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataQuat.endDataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/end-data-quat.html","searchKeys":["endDataQuat","open fun endDataQuat(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataQuat.endDataQuat"]},{"name":"open fun endDataString(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataString.endDataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/end-data-string.html","searchKeys":["endDataString","open fun endDataString(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataString.endDataString"]},{"name":"open fun endDataVec2(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataVec2.endDataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/end-data-vec2.html","searchKeys":["endDataVec2","open fun endDataVec2(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataVec2.endDataVec2"]},{"name":"open fun endDataVec3(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataVec3.endDataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/end-data-vec3.html","searchKeys":["endDataVec3","open fun endDataVec3(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataVec3.endDataVec3"]},{"name":"open fun endDataVec4(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.DataVec4.endDataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/end-data-vec4.html","searchKeys":["endDataVec4","open fun endDataVec4(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.DataVec4.endDataVec4"]},{"name":"open fun endKeyVariantPairDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.endKeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/end-key-variant-pair-def.html","searchKeys":["endKeyVariantPairDef","open fun endKeyVariantPairDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.endKeyVariantPairDef"]},{"name":"open fun endMaterialDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.MaterialDef.endMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/end-material-def.html","searchKeys":["endMaterialDef","open fun endMaterialDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.MaterialDef.endMaterialDef"]},{"name":"open fun endMaterialTextureDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.endMaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/end-material-texture-def.html","searchKeys":["endMaterialTextureDef","open fun endMaterialTextureDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.MaterialTextureDef.endMaterialTextureDef"]},{"name":"open fun endModelDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelDef.endModelDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/end-model-def.html","searchKeys":["endModelDef","open fun endModelDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelDef.endModelDef"]},{"name":"open fun endModelInstanceDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.endModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/end-model-instance-def.html","searchKeys":["endModelInstanceDef","open fun endModelInstanceDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.endModelInstanceDef"]},{"name":"open fun endModelPipelineCollidableDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.endModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/end-model-pipeline-collidable-def.html","searchKeys":["endModelPipelineCollidableDef","open fun endModelPipelineCollidableDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.endModelPipelineCollidableDef"]},{"name":"open fun endModelPipelineDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.endModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/end-model-pipeline-def.html","searchKeys":["endModelPipelineDef","open fun endModelPipelineDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.endModelPipelineDef"]},{"name":"open fun endModelPipelineImportDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.endModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/end-model-pipeline-import-def.html","searchKeys":["endModelPipelineImportDef","open fun endModelPipelineImportDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.endModelPipelineImportDef"]},{"name":"open fun endModelPipelineMaterialDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.endModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/end-model-pipeline-material-def.html","searchKeys":["endModelPipelineMaterialDef","open fun endModelPipelineMaterialDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.endModelPipelineMaterialDef"]},{"name":"open fun endModelPipelineRenderableDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.endModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/end-model-pipeline-renderable-def.html","searchKeys":["endModelPipelineRenderableDef","open fun endModelPipelineRenderableDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.endModelPipelineRenderableDef"]},{"name":"open fun endModelPipelineSkeletonDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.endModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/end-model-pipeline-skeleton-def.html","searchKeys":["endModelPipelineSkeletonDef","open fun endModelPipelineSkeletonDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.endModelPipelineSkeletonDef"]},{"name":"open fun endObject(): Int","description":"com.google.flatbuffers.FlatBufferBuilder.endObject","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/end-object.html","searchKeys":["endObject","open fun endObject(): Int","com.google.flatbuffers.FlatBufferBuilder.endObject"]},{"name":"open fun endSample()","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.endSample","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/end-sample.html","searchKeys":["endSample","open fun endSample()","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.endSample"]},{"name":"open fun endSample()","description":"com.google.ar.sceneform.utilities.TimeAccumulator.endSample","location":"sceneview/com.google.ar.sceneform.utilities/-time-accumulator/end-sample.html","searchKeys":["endSample","open fun endSample()","com.google.ar.sceneform.utilities.TimeAccumulator.endSample"]},{"name":"open fun endSkeletonDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.endSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/end-skeleton-def.html","searchKeys":["endSkeletonDef","open fun endSkeletonDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.SkeletonDef.endSkeletonDef"]},{"name":"open fun endSubmeshAabb(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.endSubmeshAabb","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/end-submesh-aabb.html","searchKeys":["endSubmeshAabb","open fun endSubmeshAabb(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.SubmeshAabb.endSubmeshAabb"]},{"name":"open fun endTextureDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.endTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/end-texture-def.html","searchKeys":["endTextureDef","open fun endTextureDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.TextureDef.endTextureDef"]},{"name":"open fun endVariantArrayDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.endVariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/end-variant-array-def.html","searchKeys":["endVariantArrayDef","open fun endVariantArrayDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.VariantArrayDef.endVariantArrayDef"]},{"name":"open fun endVariantArrayDefImpl(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.endVariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/end-variant-array-def-impl.html","searchKeys":["endVariantArrayDefImpl","open fun endVariantArrayDefImpl(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.endVariantArrayDefImpl"]},{"name":"open fun endVariantMapDef(builder: FlatBufferBuilder): Int","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.endVariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/end-variant-map-def.html","searchKeys":["endVariantMapDef","open fun endVariantMapDef(builder: FlatBufferBuilder): Int","com.google.ar.sceneform.lullmodel.VariantMapDef.endVariantMapDef"]},{"name":"open fun endVector(): Int","description":"com.google.flatbuffers.FlatBufferBuilder.endVector","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/end-vector.html","searchKeys":["endVector","open fun endVector(): Int","com.google.flatbuffers.FlatBufferBuilder.endVector"]},{"name":"open fun ensureVertexOrientationWNotZero(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.ensureVertexOrientationWNotZero","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/ensure-vertex-orientation-w-not-zero.html","searchKeys":["ensureVertexOrientationWNotZero","open fun ensureVertexOrientationWNotZero(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.ensureVertexOrientationWNotZero"]},{"name":"open fun equals(lhs: Matrix, rhs: Matrix): Boolean","description":"io.github.sceneview.collision.Matrix.equals","location":"sceneview/io.github.sceneview.collision/-matrix/equals.html","searchKeys":["equals","open fun equals(lhs: Matrix, rhs: Matrix): Boolean","io.github.sceneview.collision.Matrix.equals"]},{"name":"open fun equals(lhs: Quaternion, rhs: Quaternion): Boolean","description":"io.github.sceneview.collision.Quaternion.equals","location":"sceneview/io.github.sceneview.collision/-quaternion/equals.html","searchKeys":["equals","open fun equals(lhs: Quaternion, rhs: Quaternion): Boolean","io.github.sceneview.collision.Quaternion.equals"]},{"name":"open fun equals(lhs: Vector3, rhs: Vector3): Boolean","description":"io.github.sceneview.collision.Vector3.equals","location":"sceneview/io.github.sceneview.collision/-vector3/equals.html","searchKeys":["equals","open fun equals(lhs: Vector3, rhs: Vector3): Boolean","io.github.sceneview.collision.Vector3.equals"]},{"name":"open fun equals(other: Any): Boolean","description":"io.github.sceneview.collision.Quaternion.equals","location":"sceneview/io.github.sceneview.collision/-quaternion/equals.html","searchKeys":["equals","open fun equals(other: Any): Boolean","io.github.sceneview.collision.Quaternion.equals"]},{"name":"open fun equals(other: Any): Boolean","description":"io.github.sceneview.collision.Vector3.equals","location":"sceneview/io.github.sceneview.collision/-vector3/equals.html","searchKeys":["equals","open fun equals(other: Any): Boolean","io.github.sceneview.collision.Vector3.equals"]},{"name":"open fun eulerAngles(eulerAngles: Vector3): Quaternion","description":"io.github.sceneview.collision.Quaternion.eulerAngles","location":"sceneview/io.github.sceneview.collision/-quaternion/euler-angles.html","searchKeys":["eulerAngles","open fun eulerAngles(eulerAngles: Vector3): Quaternion","io.github.sceneview.collision.Quaternion.eulerAngles"]},{"name":"open fun evaluate(fraction: Float, startValue: Quaternion, endValue: Quaternion): Quaternion","description":"io.github.sceneview.collision.QuaternionEvaluator.evaluate","location":"sceneview/io.github.sceneview.collision/-quaternion-evaluator/evaluate.html","searchKeys":["evaluate","open fun evaluate(fraction: Float, startValue: Quaternion, endValue: Quaternion): Quaternion","io.github.sceneview.collision.QuaternionEvaluator.evaluate"]},{"name":"open fun evaluate(fraction: Float, startValue: Vector3, endValue: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3Evaluator.evaluate","location":"sceneview/io.github.sceneview.collision/-vector3-evaluator/evaluate.html","searchKeys":["evaluate","open fun evaluate(fraction: Float, startValue: Vector3, endValue: Vector3): Vector3","io.github.sceneview.collision.Vector3Evaluator.evaluate"]},{"name":"open fun extractQuaternion(destQuaternion: Quaternion)","description":"io.github.sceneview.collision.Matrix.extractQuaternion","location":"sceneview/io.github.sceneview.collision/-matrix/extract-quaternion.html","searchKeys":["extractQuaternion","open fun extractQuaternion(destQuaternion: Quaternion)","io.github.sceneview.collision.Matrix.extractQuaternion"]},{"name":"open fun file(): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.file","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/file.html","searchKeys":["file","open fun file(): String","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.file"]},{"name":"open fun file(): String","description":"com.google.ar.sceneform.lullmodel.TextureDef.file","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/file.html","searchKeys":["file","open fun file(): String","com.google.ar.sceneform.lullmodel.TextureDef.file"]},{"name":"open fun fileAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.fileAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/file-as-byte-buffer.html","searchKeys":["fileAsByteBuffer","open fun fileAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.fileAsByteBuffer"]},{"name":"open fun fileAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.TextureDef.fileAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/file-as-byte-buffer.html","searchKeys":["fileAsByteBuffer","open fun fileAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.TextureDef.fileAsByteBuffer"]},{"name":"open fun fileInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.fileInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/file-in-byte-buffer.html","searchKeys":["fileInByteBuffer","open fun fileInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.fileInByteBuffer"]},{"name":"open fun fileInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.TextureDef.fileInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/file-in-byte-buffer.html","searchKeys":["fileInByteBuffer","open fun fileInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.TextureDef.fileInByteBuffer"]},{"name":"open fun finish(root_table: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.finish","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/finish.html","searchKeys":["finish","open fun finish(root_table: Int)","com.google.flatbuffers.FlatBufferBuilder.finish"]},{"name":"open fun finish(root_table: Int, file_identifier: String)","description":"com.google.flatbuffers.FlatBufferBuilder.finish","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/finish.html","searchKeys":["finish","open fun finish(root_table: Int, file_identifier: String)","com.google.flatbuffers.FlatBufferBuilder.finish"]},{"name":"open fun finishModelDefBuffer(builder: FlatBufferBuilder, offset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.finishModelDefBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/finish-model-def-buffer.html","searchKeys":["finishModelDefBuffer","open fun finishModelDefBuffer(builder: FlatBufferBuilder, offset: Int)","com.google.ar.sceneform.lullmodel.ModelDef.finishModelDefBuffer"]},{"name":"open fun finishSizePrefixed(root_table: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.finishSizePrefixed","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/finish-size-prefixed.html","searchKeys":["finishSizePrefixed","open fun finishSizePrefixed(root_table: Int)","com.google.flatbuffers.FlatBufferBuilder.finishSizePrefixed"]},{"name":"open fun finishSizePrefixed(root_table: Int, file_identifier: String)","description":"com.google.flatbuffers.FlatBufferBuilder.finishSizePrefixed","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/finish-size-prefixed.html","searchKeys":["finishSizePrefixed","open fun finishSizePrefixed(root_table: Int, file_identifier: String)","com.google.flatbuffers.FlatBufferBuilder.finishSizePrefixed"]},{"name":"open fun finishSizePrefixedModelDefBuffer(builder: FlatBufferBuilder, offset: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.finishSizePrefixedModelDefBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/finish-size-prefixed-model-def-buffer.html","searchKeys":["finishSizePrefixedModelDefBuffer","open fun finishSizePrefixedModelDefBuffer(builder: FlatBufferBuilder, offset: Int)","com.google.ar.sceneform.lullmodel.ModelDef.finishSizePrefixedModelDefBuffer"]},{"name":"open fun finished()","description":"com.google.flatbuffers.FlatBufferBuilder.finished","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/finished.html","searchKeys":["finished","open fun finished()","com.google.flatbuffers.FlatBufferBuilder.finished"]},{"name":"open fun fixInfacingNormals(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.fixInfacingNormals","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/fix-infacing-normals.html","searchKeys":["fixInfacingNormals","open fun fixInfacingNormals(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.fixInfacingNormals"]},{"name":"open fun flattenHierarchyAndTransformVerticesToRootSpace(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.flattenHierarchyAndTransformVerticesToRootSpace","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/flatten-hierarchy-and-transform-vertices-to-root-space.html","searchKeys":["flattenHierarchyAndTransformVerticesToRootSpace","open fun flattenHierarchyAndTransformVerticesToRootSpace(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.flattenHierarchyAndTransformVerticesToRootSpace"]},{"name":"open fun flipTextureCoordinates(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.flipTextureCoordinates","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/flip-texture-coordinates.html","searchKeys":["flipTextureCoordinates","open fun flipTextureCoordinates(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.flipTextureCoordinates"]},{"name":"open fun flushHttpCache()","description":"com.google.ar.sceneform.utilities.LoadHelper.flushHttpCache","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/flush-http-cache.html","searchKeys":["flushHttpCache","open fun flushHttpCache()","com.google.ar.sceneform.utilities.LoadHelper.flushHttpCache"]},{"name":"open fun forceDefaults(forceDefaults: Boolean): FlatBufferBuilder","description":"com.google.flatbuffers.FlatBufferBuilder.forceDefaults","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/force-defaults.html","searchKeys":["forceDefaults","open fun forceDefaults(forceDefaults: Boolean): FlatBufferBuilder","com.google.flatbuffers.FlatBufferBuilder.forceDefaults"]},{"name":"open fun forward(): Vector3","description":"io.github.sceneview.collision.Vector3.forward","location":"sceneview/io.github.sceneview.collision/-vector3/forward.html","searchKeys":["forward","open fun forward(): Vector3","io.github.sceneview.collision.Vector3.forward"]},{"name":"open fun fractionToTime(fraction: Float, duration: Float): Float","description":"io.github.sceneview.animation.ModelAnimation.fractionToTime","location":"sceneview/io.github.sceneview.animation/-model-animation/fraction-to-time.html","searchKeys":["fractionToTime","open fun fractionToTime(fraction: Float, duration: Float): Float","io.github.sceneview.animation.ModelAnimation.fractionToTime"]},{"name":"open fun frameToTime(frame: Int, frameRate: Int): Float","description":"io.github.sceneview.animation.ModelAnimation.frameToTime","location":"sceneview/io.github.sceneview.animation/-model-animation/frame-to-time.html","searchKeys":["frameToTime","open fun frameToTime(frame: Int, frameRate: Int): Float","io.github.sceneview.animation.ModelAnimation.frameToTime"]},{"name":"open fun fromLullToMagFilter(textureDef: TextureDef): TextureSampler.MagFilter","description":"com.google.ar.sceneform.rendering.LullModel.fromLullToMagFilter","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/from-lull-to-mag-filter.html","searchKeys":["fromLullToMagFilter","open fun fromLullToMagFilter(textureDef: TextureDef): TextureSampler.MagFilter","com.google.ar.sceneform.rendering.LullModel.fromLullToMagFilter"]},{"name":"open fun fromLullToMinFilter(textureDef: TextureDef): TextureSampler.MinFilter","description":"com.google.ar.sceneform.rendering.LullModel.fromLullToMinFilter","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/from-lull-to-min-filter.html","searchKeys":["fromLullToMinFilter","open fun fromLullToMinFilter(textureDef: TextureDef): TextureSampler.MinFilter","com.google.ar.sceneform.rendering.LullModel.fromLullToMinFilter"]},{"name":"open fun fromResource(context: Context, resId: Int): Callable<InputStream>","description":"com.google.ar.sceneform.utilities.LoadHelper.fromResource","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/from-resource.html","searchKeys":["fromResource","open fun fromResource(context: Context, resId: Int): Callable<InputStream>","com.google.ar.sceneform.utilities.LoadHelper.fromResource"]},{"name":"open fun fromUri(context: Context, sourceUri: Uri): Callable<InputStream>","description":"com.google.ar.sceneform.utilities.LoadHelper.fromUri","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/from-uri.html","searchKeys":["fromUri","open fun fromUri(context: Context, sourceUri: Uri): Callable<InputStream>","com.google.ar.sceneform.utilities.LoadHelper.fromUri"]},{"name":"open fun fromUri(context: Context, sourceUri: Uri, requestProperty: Map<String, String>): Callable<InputStream>","description":"com.google.ar.sceneform.utilities.LoadHelper.fromUri","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/from-uri.html","searchKeys":["fromUri","open fun fromUri(context: Context, sourceUri: Uri, requestProperty: Map<String, String>): Callable<InputStream>","com.google.ar.sceneform.utilities.LoadHelper.fromUri"]},{"name":"open fun g(): Float","description":"com.google.ar.sceneform.lullmodel.Color.g","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/g.html","searchKeys":["g","open fun g(): Float","com.google.ar.sceneform.lullmodel.Color.g"]},{"name":"open fun geIndex(): Int","description":"io.github.sceneview.animation.ModelAnimation.geIndex","location":"sceneview/io.github.sceneview.animation/-model-animation/ge-index.html","searchKeys":["geIndex","open fun geIndex(): Int","io.github.sceneview.animation.ModelAnimation.geIndex"]},{"name":"open fun generateMipmaps(): Boolean","description":"com.google.ar.sceneform.lullmodel.TextureDef.generateMipmaps","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/generate-mipmaps.html","searchKeys":["generateMipmaps","open fun generateMipmaps(): Boolean","com.google.ar.sceneform.lullmodel.TextureDef.generateMipmaps"]},{"name":"open fun get(): Int","description":"io.github.sceneview.collision.ChangeId.get","location":"sceneview/io.github.sceneview.collision/-change-id/get.html","searchKeys":["get","open fun get(): Int","io.github.sceneview.collision.ChangeId.get"]},{"name":"open fun get(id: Any): CompletableFuture<T>","description":"com.google.ar.sceneform.resources.ResourceRegistry.get","location":"sceneview/com.google.ar.sceneform.resources/-resource-registry/get.html","searchKeys":["get","open fun get(id: Any): CompletableFuture<T>","com.google.ar.sceneform.resources.ResourceRegistry.get"]},{"name":"open fun getAnimation(animationIndex: Int): ModelAnimation","description":"com.google.ar.sceneform.rendering.RenderableInstance.getAnimation","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-animation.html","searchKeys":["getAnimation","open fun getAnimation(animationIndex: Int): ModelAnimation","com.google.ar.sceneform.rendering.RenderableInstance.getAnimation"]},{"name":"open fun getAnimation(name: String): ModelAnimation","description":"io.github.sceneview.animation.AnimatableModel.getAnimation","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation.html","searchKeys":["getAnimation","open fun getAnimation(name: String): ModelAnimation","io.github.sceneview.animation.AnimatableModel.getAnimation"]},{"name":"open fun getAnimationCount(): Int","description":"com.google.ar.sceneform.rendering.RenderableInstance.getAnimationCount","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-animation-count.html","searchKeys":["getAnimationCount","open fun getAnimationCount(): Int","com.google.ar.sceneform.rendering.RenderableInstance.getAnimationCount"]},{"name":"open fun getAnimationIndex(name: String): Int","description":"io.github.sceneview.animation.AnimatableModel.getAnimationIndex","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation-index.html","searchKeys":["getAnimationIndex","open fun getAnimationIndex(name: String): Int","io.github.sceneview.animation.AnimatableModel.getAnimationIndex"]},{"name":"open fun getAnimationName(animationIndex: Int): String","description":"io.github.sceneview.animation.AnimatableModel.getAnimationName","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation-name.html","searchKeys":["getAnimationName","open fun getAnimationName(animationIndex: Int): String","io.github.sceneview.animation.AnimatableModel.getAnimationName"]},{"name":"open fun getAnimationNames(): List<String>","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getAnimationNames","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-animation-names.html","searchKeys":["getAnimationNames","open fun getAnimationNames(): List<String>","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getAnimationNames"]},{"name":"open fun getAnimationNames(): List<String>","description":"io.github.sceneview.animation.AnimatableModel.getAnimationNames","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation-names.html","searchKeys":["getAnimationNames","open fun getAnimationNames(): List<String>","io.github.sceneview.animation.AnimatableModel.getAnimationNames"]},{"name":"open fun getAnimationOrThrow(name: String): ModelAnimation","description":"io.github.sceneview.animation.AnimatableModel.getAnimationOrThrow","location":"sceneview/io.github.sceneview.animation/-animatable-model/get-animation-or-throw.html","searchKeys":["getAnimationOrThrow","open fun getAnimationOrThrow(name: String): ModelAnimation","io.github.sceneview.animation.AnimatableModel.getAnimationOrThrow"]},{"name":"open fun getAverage(): Double","description":"com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.getAverage","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average-milliseconds-tracker/get-average.html","searchKeys":["getAverage","open fun getAverage(): Double","com.google.ar.sceneform.utilities.MovingAverageMillisecondsTracker.getAverage"]},{"name":"open fun getByteBuffer(): ByteBuffer","description":"com.google.flatbuffers.Table.getByteBuffer","location":"sceneview/com.google.flatbuffers/-table/get-byte-buffer.html","searchKeys":["getByteBuffer","open fun getByteBuffer(): ByteBuffer","com.google.flatbuffers.Table.getByteBuffer"]},{"name":"open fun getByteCountPerVertex(modelInstanceDef: ModelInstanceDef): Int","description":"com.google.ar.sceneform.rendering.LullModel.getByteCountPerVertex","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/get-byte-count-per-vertex.html","searchKeys":["getByteCountPerVertex","open fun getByteCountPerVertex(modelInstanceDef: ModelInstanceDef): Int","com.google.ar.sceneform.rendering.LullModel.getByteCountPerVertex"]},{"name":"open fun getCenterAabb(): Vector3","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getCenterAabb","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-center-aabb.html","searchKeys":["getCenterAabb","open fun getCenterAabb(): Vector3","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getCenterAabb"]},{"name":"open fun getChildEntities(): Array<Int>","description":"com.google.ar.sceneform.rendering.RenderableInstance.getChildEntities","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-child-entities.html","searchKeys":["getChildEntities","open fun getChildEntities(): Array<Int>","com.google.ar.sceneform.rendering.RenderableInstance.getChildEntities"]},{"name":"open fun getCollisionShape(): CollisionShape","description":"com.google.ar.sceneform.rendering.Renderable.getCollisionShape","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-collision-shape.html","searchKeys":["getCollisionShape","open fun getCollisionShape(): CollisionShape","com.google.ar.sceneform.rendering.Renderable.getCollisionShape"]},{"name":"open fun getDefault(): Utf8","description":"com.google.flatbuffers.Utf8.getDefault","location":"sceneview/com.google.flatbuffers/-utf8/get-default.html","searchKeys":["getDefault","open fun getDefault(): Utf8","com.google.flatbuffers.Utf8.getDefault"]},{"name":"open fun getDurationMillis(): Long","description":"io.github.sceneview.animation.ModelAnimation.getDurationMillis","location":"sceneview/io.github.sceneview.animation/-model-animation/get-duration-millis.html","searchKeys":["getDurationMillis","open fun getDurationMillis(): Long","io.github.sceneview.animation.ModelAnimation.getDurationMillis"]},{"name":"open fun getEulerAngles(): Vector3","description":"io.github.sceneview.collision.Quaternion.getEulerAngles","location":"sceneview/io.github.sceneview.collision/-quaternion/get-euler-angles.html","searchKeys":["getEulerAngles","open fun getEulerAngles(): Vector3","io.github.sceneview.collision.Quaternion.getEulerAngles"]},{"name":"open fun getExtents(): Vector3","description":"io.github.sceneview.collision.Box.getExtents","location":"sceneview/io.github.sceneview.collision/-box/get-extents.html","searchKeys":["getExtents","open fun getExtents(): Vector3","io.github.sceneview.collision.Box.getExtents"]},{"name":"open fun getExtentsAabb(): Vector3","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getExtentsAabb","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-extents-aabb.html","searchKeys":["getExtentsAabb","open fun getExtentsAabb(): Vector3","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getExtentsAabb"]},{"name":"open fun getExternalTexture(name: String): ExternalTexture","description":"com.google.ar.sceneform.rendering.Material.getExternalTexture","location":"sceneview/com.google.ar.sceneform.rendering/-material/get-external-texture.html","searchKeys":["getExternalTexture","open fun getExternalTexture(name: String): ExternalTexture","com.google.ar.sceneform.rendering.Material.getExternalTexture"]},{"name":"open fun getFilamentMaterialInstance(): MaterialInstance","description":"com.google.ar.sceneform.rendering.Material.getFilamentMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-material/get-filament-material-instance.html","searchKeys":["getFilamentMaterialInstance","open fun getFilamentMaterialInstance(): MaterialInstance","com.google.ar.sceneform.rendering.Material.getFilamentMaterialInstance"]},{"name":"open fun getFinalModelMatrix(originalMatrix: Matrix): Matrix","description":"com.google.ar.sceneform.rendering.Renderable.getFinalModelMatrix","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-final-model-matrix.html","searchKeys":["getFinalModelMatrix","open fun getFinalModelMatrix(originalMatrix: Matrix): Matrix","com.google.ar.sceneform.rendering.Renderable.getFinalModelMatrix"]},{"name":"open fun getFinalModelMatrix(originalMatrix: Matrix): Matrix","description":"com.google.ar.sceneform.rendering.ViewRenderable.getFinalModelMatrix","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/get-final-model-matrix.html","searchKeys":["getFinalModelMatrix","open fun getFinalModelMatrix(originalMatrix: Matrix): Matrix","com.google.ar.sceneform.rendering.ViewRenderable.getFinalModelMatrix"]},{"name":"open fun getFractionAtTime(time: Float): Float","description":"io.github.sceneview.animation.ModelAnimation.getFractionAtTime","location":"sceneview/io.github.sceneview.animation/-model-animation/get-fraction-at-time.html","searchKeys":["getFractionAtTime","open fun getFractionAtTime(time: Float): Float","io.github.sceneview.animation.ModelAnimation.getFractionAtTime"]},{"name":"open fun getFractionPosition(): Float","description":"io.github.sceneview.animation.ModelAnimation.getFractionPosition","location":"sceneview/io.github.sceneview.animation/-model-animation/get-fraction-position.html","searchKeys":["getFractionPosition","open fun getFractionPosition(): Float","io.github.sceneview.animation.ModelAnimation.getFractionPosition"]},{"name":"open fun getFrameAtTime(time: Float): Int","description":"io.github.sceneview.animation.ModelAnimation.getFrameAtTime","location":"sceneview/io.github.sceneview.animation/-model-animation/get-frame-at-time.html","searchKeys":["getFrameAtTime","open fun getFrameAtTime(time: Float): Int","io.github.sceneview.animation.ModelAnimation.getFrameAtTime"]},{"name":"open fun getFrameCount(): Int","description":"io.github.sceneview.animation.ModelAnimation.getFrameCount","location":"sceneview/io.github.sceneview.animation/-model-animation/get-frame-count.html","searchKeys":["getFrameCount","open fun getFrameCount(): Int","io.github.sceneview.animation.ModelAnimation.getFrameCount"]},{"name":"open fun getFramePosition(): Int","description":"io.github.sceneview.animation.ModelAnimation.getFramePosition","location":"sceneview/io.github.sceneview.animation/-model-animation/get-frame-position.html","searchKeys":["getFramePosition","open fun getFramePosition(): Int","io.github.sceneview.animation.ModelAnimation.getFramePosition"]},{"name":"open fun getHeight(): Float","description":"com.google.ar.sceneform.rendering.FixedHeightViewSizer.getHeight","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-height-view-sizer/get-height.html","searchKeys":["getHeight","open fun getHeight(): Float","com.google.ar.sceneform.rendering.FixedHeightViewSizer.getHeight"]},{"name":"open fun getId(): ChangeId","description":"com.google.ar.sceneform.rendering.Renderable.getId","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-id.html","searchKeys":["getId","open fun getId(): ChangeId","com.google.ar.sceneform.rendering.Renderable.getId"]},{"name":"open fun getIndexBuffer(): IndexBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getIndexBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-index-buffer.html","searchKeys":["getIndexBuffer","open fun getIndexBuffer(): IndexBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getIndexBuffer"]},{"name":"open fun getJointCount(skinIndex: Int = 0): Int","description":"io.github.sceneview.node.ModelNode.getJointCount","location":"sceneview/io.github.sceneview.node/-model-node/get-joint-count.html","searchKeys":["getJointCount","open fun getJointCount(skinIndex: Int = 0): Int","io.github.sceneview.node.ModelNode.getJointCount"]},{"name":"open fun getLastPathSegment(uri: Uri): String","description":"com.google.ar.sceneform.utilities.LoadHelper.getLastPathSegment","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/get-last-path-segment.html","searchKeys":["getLastPathSegment","open fun getLastPathSegment(uri: Uri): String","com.google.ar.sceneform.utilities.LoadHelper.getLastPathSegment"]},{"name":"open fun getLightChannel(channel: Int): Boolean","description":"io.github.sceneview.components.LightComponent.getLightChannel","location":"sceneview/io.github.sceneview.components/-light-component/get-light-channel.html","searchKeys":["getLightChannel","open fun getLightChannel(channel: Int): Boolean","io.github.sceneview.components.LightComponent.getLightChannel"]},{"name":"open fun getLightChannel(channel: Int): Boolean","description":"io.github.sceneview.components.RenderableComponent.getLightChannel","location":"sceneview/io.github.sceneview.components/-renderable-component/get-light-channel.html","searchKeys":["getLightChannel","open fun getLightChannel(channel: Int): Boolean","io.github.sceneview.components.RenderableComponent.getLightChannel"]},{"name":"open fun getMaterial(): MaterialInstance","description":"com.google.ar.sceneform.rendering.Renderable.getMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-material.html","searchKeys":["getMaterial","open fun getMaterial(): MaterialInstance","com.google.ar.sceneform.rendering.Renderable.getMaterial"]},{"name":"open fun getMaterial(submeshIndex: Int): MaterialInstance","description":"com.google.ar.sceneform.rendering.Renderable.getMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-material.html","searchKeys":["getMaterial","open fun getMaterial(submeshIndex: Int): MaterialInstance","com.google.ar.sceneform.rendering.Renderable.getMaterial"]},{"name":"open fun getMaterialBindingIds(): ArrayList<Integer>","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getMaterialBindingIds","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-material-binding-ids.html","searchKeys":["getMaterialBindingIds","open fun getMaterialBindingIds(): ArrayList<Integer>","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getMaterialBindingIds"]},{"name":"open fun getMaterialInstance(): MaterialInstance","description":"com.google.ar.sceneform.rendering.RenderableInstance.getMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-material-instance.html","searchKeys":["getMaterialInstance","open fun getMaterialInstance(): MaterialInstance","com.google.ar.sceneform.rendering.RenderableInstance.getMaterialInstance"]},{"name":"open fun getMaterialInstance(index: Int): MaterialInstance","description":"com.google.ar.sceneform.rendering.RenderableInstance.getMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-material-instance.html","searchKeys":["getMaterialInstance","open fun getMaterialInstance(index: Int): MaterialInstance","com.google.ar.sceneform.rendering.RenderableInstance.getMaterialInstance"]},{"name":"open fun getMaterialInstance(name: String): MaterialInstance","description":"com.google.ar.sceneform.rendering.RenderableInstance.getMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-material-instance.html","searchKeys":["getMaterialInstance","open fun getMaterialInstance(name: String): MaterialInstance","com.google.ar.sceneform.rendering.RenderableInstance.getMaterialInstance"]},{"name":"open fun getMaterialInstanceAt(primitiveIndex: Int): MaterialInstance","description":"io.github.sceneview.components.RenderableComponent.getMaterialInstanceAt","location":"sceneview/io.github.sceneview.components/-renderable-component/get-material-instance-at.html","searchKeys":["getMaterialInstanceAt","open fun getMaterialInstanceAt(primitiveIndex: Int): MaterialInstance","io.github.sceneview.components.RenderableComponent.getMaterialInstanceAt"]},{"name":"open fun getMaterialName(index: Int): String","description":"com.google.ar.sceneform.rendering.RenderableInstance.getMaterialName","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-material-name.html","searchKeys":["getMaterialName","open fun getMaterialName(index: Int): String","com.google.ar.sceneform.rendering.RenderableInstance.getMaterialName"]},{"name":"open fun getMaterialsCount(): Int","description":"com.google.ar.sceneform.rendering.RenderableInstance.getMaterialsCount","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-materials-count.html","searchKeys":["getMaterialsCount","open fun getMaterialsCount(): Int","com.google.ar.sceneform.rendering.RenderableInstance.getMaterialsCount"]},{"name":"open fun getMeshes(): ArrayList<RenderableInternalData.MeshData>","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getMeshes","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-meshes.html","searchKeys":["getMeshes","open fun getMeshes(): ArrayList<RenderableInternalData.MeshData>","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getMeshes"]},{"name":"open fun getPoint(distance: Float): Vector3","description":"io.github.sceneview.collision.Ray.getPoint","location":"sceneview/io.github.sceneview.collision/-ray/get-point.html","searchKeys":["getPoint","open fun getPoint(distance: Float): Vector3","io.github.sceneview.collision.Ray.getPoint"]},{"name":"open fun getRawColorBuffer(): FloatBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawColorBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-raw-color-buffer.html","searchKeys":["getRawColorBuffer","open fun getRawColorBuffer(): FloatBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawColorBuffer"]},{"name":"open fun getRawIndexBuffer(): IntBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawIndexBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-raw-index-buffer.html","searchKeys":["getRawIndexBuffer","open fun getRawIndexBuffer(): IntBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawIndexBuffer"]},{"name":"open fun getRawPositionBuffer(): FloatBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawPositionBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-raw-position-buffer.html","searchKeys":["getRawPositionBuffer","open fun getRawPositionBuffer(): FloatBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawPositionBuffer"]},{"name":"open fun getRawTangentsBuffer(): FloatBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawTangentsBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-raw-tangents-buffer.html","searchKeys":["getRawTangentsBuffer","open fun getRawTangentsBuffer(): FloatBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawTangentsBuffer"]},{"name":"open fun getRawUvBuffer(): FloatBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawUvBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-raw-uv-buffer.html","searchKeys":["getRawUvBuffer","open fun getRawUvBuffer(): FloatBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getRawUvBuffer"]},{"name":"open fun getRelativeTransform(): Matrix","description":"com.google.ar.sceneform.rendering.RenderableInstance.getRelativeTransform","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-relative-transform.html","searchKeys":["getRelativeTransform","open fun getRelativeTransform(): Matrix","com.google.ar.sceneform.rendering.RenderableInstance.getRelativeTransform"]},{"name":"open fun getRelativeTransformInverse(): Matrix","description":"com.google.ar.sceneform.rendering.RenderableInstance.getRelativeTransformInverse","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-relative-transform-inverse.html","searchKeys":["getRelativeTransformInverse","open fun getRelativeTransformInverse(): Matrix","com.google.ar.sceneform.rendering.RenderableInstance.getRelativeTransformInverse"]},{"name":"open fun getRenderedEntity(): Int","description":"com.google.ar.sceneform.rendering.RenderableInstance.getRenderedEntity","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-rendered-entity.html","searchKeys":["getRenderedEntity","open fun getRenderedEntity(): Int","com.google.ar.sceneform.rendering.RenderableInstance.getRenderedEntity"]},{"name":"open fun getRootAsBlendShape(_bb: ByteBuffer): BlendShape","description":"com.google.ar.sceneform.lullmodel.BlendShape.getRootAsBlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/get-root-as-blend-shape.html","searchKeys":["getRootAsBlendShape","open fun getRootAsBlendShape(_bb: ByteBuffer): BlendShape","com.google.ar.sceneform.lullmodel.BlendShape.getRootAsBlendShape"]},{"name":"open fun getRootAsBlendShape(_bb: ByteBuffer, obj: BlendShape): BlendShape","description":"com.google.ar.sceneform.lullmodel.BlendShape.getRootAsBlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/get-root-as-blend-shape.html","searchKeys":["getRootAsBlendShape","open fun getRootAsBlendShape(_bb: ByteBuffer, obj: BlendShape): BlendShape","com.google.ar.sceneform.lullmodel.BlendShape.getRootAsBlendShape"]},{"name":"open fun getRootAsDataBool(_bb: ByteBuffer): DataBool","description":"com.google.ar.sceneform.lullmodel.DataBool.getRootAsDataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/get-root-as-data-bool.html","searchKeys":["getRootAsDataBool","open fun getRootAsDataBool(_bb: ByteBuffer): DataBool","com.google.ar.sceneform.lullmodel.DataBool.getRootAsDataBool"]},{"name":"open fun getRootAsDataBool(_bb: ByteBuffer, obj: DataBool): DataBool","description":"com.google.ar.sceneform.lullmodel.DataBool.getRootAsDataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/get-root-as-data-bool.html","searchKeys":["getRootAsDataBool","open fun getRootAsDataBool(_bb: ByteBuffer, obj: DataBool): DataBool","com.google.ar.sceneform.lullmodel.DataBool.getRootAsDataBool"]},{"name":"open fun getRootAsDataBytes(_bb: ByteBuffer): DataBytes","description":"com.google.ar.sceneform.lullmodel.DataBytes.getRootAsDataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/get-root-as-data-bytes.html","searchKeys":["getRootAsDataBytes","open fun getRootAsDataBytes(_bb: ByteBuffer): DataBytes","com.google.ar.sceneform.lullmodel.DataBytes.getRootAsDataBytes"]},{"name":"open fun getRootAsDataBytes(_bb: ByteBuffer, obj: DataBytes): DataBytes","description":"com.google.ar.sceneform.lullmodel.DataBytes.getRootAsDataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/get-root-as-data-bytes.html","searchKeys":["getRootAsDataBytes","open fun getRootAsDataBytes(_bb: ByteBuffer, obj: DataBytes): DataBytes","com.google.ar.sceneform.lullmodel.DataBytes.getRootAsDataBytes"]},{"name":"open fun getRootAsDataFloat(_bb: ByteBuffer): DataFloat","description":"com.google.ar.sceneform.lullmodel.DataFloat.getRootAsDataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/get-root-as-data-float.html","searchKeys":["getRootAsDataFloat","open fun getRootAsDataFloat(_bb: ByteBuffer): DataFloat","com.google.ar.sceneform.lullmodel.DataFloat.getRootAsDataFloat"]},{"name":"open fun getRootAsDataFloat(_bb: ByteBuffer, obj: DataFloat): DataFloat","description":"com.google.ar.sceneform.lullmodel.DataFloat.getRootAsDataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/get-root-as-data-float.html","searchKeys":["getRootAsDataFloat","open fun getRootAsDataFloat(_bb: ByteBuffer, obj: DataFloat): DataFloat","com.google.ar.sceneform.lullmodel.DataFloat.getRootAsDataFloat"]},{"name":"open fun getRootAsDataHashValue(_bb: ByteBuffer): DataHashValue","description":"com.google.ar.sceneform.lullmodel.DataHashValue.getRootAsDataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/get-root-as-data-hash-value.html","searchKeys":["getRootAsDataHashValue","open fun getRootAsDataHashValue(_bb: ByteBuffer): DataHashValue","com.google.ar.sceneform.lullmodel.DataHashValue.getRootAsDataHashValue"]},{"name":"open fun getRootAsDataHashValue(_bb: ByteBuffer, obj: DataHashValue): DataHashValue","description":"com.google.ar.sceneform.lullmodel.DataHashValue.getRootAsDataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/get-root-as-data-hash-value.html","searchKeys":["getRootAsDataHashValue","open fun getRootAsDataHashValue(_bb: ByteBuffer, obj: DataHashValue): DataHashValue","com.google.ar.sceneform.lullmodel.DataHashValue.getRootAsDataHashValue"]},{"name":"open fun getRootAsDataInt(_bb: ByteBuffer): DataInt","description":"com.google.ar.sceneform.lullmodel.DataInt.getRootAsDataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/get-root-as-data-int.html","searchKeys":["getRootAsDataInt","open fun getRootAsDataInt(_bb: ByteBuffer): DataInt","com.google.ar.sceneform.lullmodel.DataInt.getRootAsDataInt"]},{"name":"open fun getRootAsDataInt(_bb: ByteBuffer, obj: DataInt): DataInt","description":"com.google.ar.sceneform.lullmodel.DataInt.getRootAsDataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/get-root-as-data-int.html","searchKeys":["getRootAsDataInt","open fun getRootAsDataInt(_bb: ByteBuffer, obj: DataInt): DataInt","com.google.ar.sceneform.lullmodel.DataInt.getRootAsDataInt"]},{"name":"open fun getRootAsDataQuat(_bb: ByteBuffer): DataQuat","description":"com.google.ar.sceneform.lullmodel.DataQuat.getRootAsDataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/get-root-as-data-quat.html","searchKeys":["getRootAsDataQuat","open fun getRootAsDataQuat(_bb: ByteBuffer): DataQuat","com.google.ar.sceneform.lullmodel.DataQuat.getRootAsDataQuat"]},{"name":"open fun getRootAsDataQuat(_bb: ByteBuffer, obj: DataQuat): DataQuat","description":"com.google.ar.sceneform.lullmodel.DataQuat.getRootAsDataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/get-root-as-data-quat.html","searchKeys":["getRootAsDataQuat","open fun getRootAsDataQuat(_bb: ByteBuffer, obj: DataQuat): DataQuat","com.google.ar.sceneform.lullmodel.DataQuat.getRootAsDataQuat"]},{"name":"open fun getRootAsDataString(_bb: ByteBuffer): DataString","description":"com.google.ar.sceneform.lullmodel.DataString.getRootAsDataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/get-root-as-data-string.html","searchKeys":["getRootAsDataString","open fun getRootAsDataString(_bb: ByteBuffer): DataString","com.google.ar.sceneform.lullmodel.DataString.getRootAsDataString"]},{"name":"open fun getRootAsDataString(_bb: ByteBuffer, obj: DataString): DataString","description":"com.google.ar.sceneform.lullmodel.DataString.getRootAsDataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/get-root-as-data-string.html","searchKeys":["getRootAsDataString","open fun getRootAsDataString(_bb: ByteBuffer, obj: DataString): DataString","com.google.ar.sceneform.lullmodel.DataString.getRootAsDataString"]},{"name":"open fun getRootAsDataVec2(_bb: ByteBuffer): DataVec2","description":"com.google.ar.sceneform.lullmodel.DataVec2.getRootAsDataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/get-root-as-data-vec2.html","searchKeys":["getRootAsDataVec2","open fun getRootAsDataVec2(_bb: ByteBuffer): DataVec2","com.google.ar.sceneform.lullmodel.DataVec2.getRootAsDataVec2"]},{"name":"open fun getRootAsDataVec2(_bb: ByteBuffer, obj: DataVec2): DataVec2","description":"com.google.ar.sceneform.lullmodel.DataVec2.getRootAsDataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/get-root-as-data-vec2.html","searchKeys":["getRootAsDataVec2","open fun getRootAsDataVec2(_bb: ByteBuffer, obj: DataVec2): DataVec2","com.google.ar.sceneform.lullmodel.DataVec2.getRootAsDataVec2"]},{"name":"open fun getRootAsDataVec3(_bb: ByteBuffer): DataVec3","description":"com.google.ar.sceneform.lullmodel.DataVec3.getRootAsDataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/get-root-as-data-vec3.html","searchKeys":["getRootAsDataVec3","open fun getRootAsDataVec3(_bb: ByteBuffer): DataVec3","com.google.ar.sceneform.lullmodel.DataVec3.getRootAsDataVec3"]},{"name":"open fun getRootAsDataVec3(_bb: ByteBuffer, obj: DataVec3): DataVec3","description":"com.google.ar.sceneform.lullmodel.DataVec3.getRootAsDataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/get-root-as-data-vec3.html","searchKeys":["getRootAsDataVec3","open fun getRootAsDataVec3(_bb: ByteBuffer, obj: DataVec3): DataVec3","com.google.ar.sceneform.lullmodel.DataVec3.getRootAsDataVec3"]},{"name":"open fun getRootAsDataVec4(_bb: ByteBuffer): DataVec4","description":"com.google.ar.sceneform.lullmodel.DataVec4.getRootAsDataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/get-root-as-data-vec4.html","searchKeys":["getRootAsDataVec4","open fun getRootAsDataVec4(_bb: ByteBuffer): DataVec4","com.google.ar.sceneform.lullmodel.DataVec4.getRootAsDataVec4"]},{"name":"open fun getRootAsDataVec4(_bb: ByteBuffer, obj: DataVec4): DataVec4","description":"com.google.ar.sceneform.lullmodel.DataVec4.getRootAsDataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/get-root-as-data-vec4.html","searchKeys":["getRootAsDataVec4","open fun getRootAsDataVec4(_bb: ByteBuffer, obj: DataVec4): DataVec4","com.google.ar.sceneform.lullmodel.DataVec4.getRootAsDataVec4"]},{"name":"open fun getRootAsKeyVariantPairDef(_bb: ByteBuffer): KeyVariantPairDef","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.getRootAsKeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/get-root-as-key-variant-pair-def.html","searchKeys":["getRootAsKeyVariantPairDef","open fun getRootAsKeyVariantPairDef(_bb: ByteBuffer): KeyVariantPairDef","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.getRootAsKeyVariantPairDef"]},{"name":"open fun getRootAsKeyVariantPairDef(_bb: ByteBuffer, obj: KeyVariantPairDef): KeyVariantPairDef","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.getRootAsKeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/get-root-as-key-variant-pair-def.html","searchKeys":["getRootAsKeyVariantPairDef","open fun getRootAsKeyVariantPairDef(_bb: ByteBuffer, obj: KeyVariantPairDef): KeyVariantPairDef","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.getRootAsKeyVariantPairDef"]},{"name":"open fun getRootAsMaterialDef(_bb: ByteBuffer): MaterialDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.getRootAsMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/get-root-as-material-def.html","searchKeys":["getRootAsMaterialDef","open fun getRootAsMaterialDef(_bb: ByteBuffer): MaterialDef","com.google.ar.sceneform.lullmodel.MaterialDef.getRootAsMaterialDef"]},{"name":"open fun getRootAsMaterialDef(_bb: ByteBuffer, obj: MaterialDef): MaterialDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.getRootAsMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/get-root-as-material-def.html","searchKeys":["getRootAsMaterialDef","open fun getRootAsMaterialDef(_bb: ByteBuffer, obj: MaterialDef): MaterialDef","com.google.ar.sceneform.lullmodel.MaterialDef.getRootAsMaterialDef"]},{"name":"open fun getRootAsMaterialTextureDef(_bb: ByteBuffer): MaterialTextureDef","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.getRootAsMaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/get-root-as-material-texture-def.html","searchKeys":["getRootAsMaterialTextureDef","open fun getRootAsMaterialTextureDef(_bb: ByteBuffer): MaterialTextureDef","com.google.ar.sceneform.lullmodel.MaterialTextureDef.getRootAsMaterialTextureDef"]},{"name":"open fun getRootAsMaterialTextureDef(_bb: ByteBuffer, obj: MaterialTextureDef): MaterialTextureDef","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.getRootAsMaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/get-root-as-material-texture-def.html","searchKeys":["getRootAsMaterialTextureDef","open fun getRootAsMaterialTextureDef(_bb: ByteBuffer, obj: MaterialTextureDef): MaterialTextureDef","com.google.ar.sceneform.lullmodel.MaterialTextureDef.getRootAsMaterialTextureDef"]},{"name":"open fun getRootAsModelDef(_bb: ByteBuffer): ModelDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.getRootAsModelDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/get-root-as-model-def.html","searchKeys":["getRootAsModelDef","open fun getRootAsModelDef(_bb: ByteBuffer): ModelDef","com.google.ar.sceneform.lullmodel.ModelDef.getRootAsModelDef"]},{"name":"open fun getRootAsModelDef(_bb: ByteBuffer, obj: ModelDef): ModelDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.getRootAsModelDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/get-root-as-model-def.html","searchKeys":["getRootAsModelDef","open fun getRootAsModelDef(_bb: ByteBuffer, obj: ModelDef): ModelDef","com.google.ar.sceneform.lullmodel.ModelDef.getRootAsModelDef"]},{"name":"open fun getRootAsModelInstanceDef(_bb: ByteBuffer): ModelInstanceDef","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.getRootAsModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/get-root-as-model-instance-def.html","searchKeys":["getRootAsModelInstanceDef","open fun getRootAsModelInstanceDef(_bb: ByteBuffer): ModelInstanceDef","com.google.ar.sceneform.lullmodel.ModelInstanceDef.getRootAsModelInstanceDef"]},{"name":"open fun getRootAsModelInstanceDef(_bb: ByteBuffer, obj: ModelInstanceDef): ModelInstanceDef","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.getRootAsModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/get-root-as-model-instance-def.html","searchKeys":["getRootAsModelInstanceDef","open fun getRootAsModelInstanceDef(_bb: ByteBuffer, obj: ModelInstanceDef): ModelInstanceDef","com.google.ar.sceneform.lullmodel.ModelInstanceDef.getRootAsModelInstanceDef"]},{"name":"open fun getRootAsModelPipelineCollidableDef(_bb: ByteBuffer): ModelPipelineCollidableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.getRootAsModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/get-root-as-model-pipeline-collidable-def.html","searchKeys":["getRootAsModelPipelineCollidableDef","open fun getRootAsModelPipelineCollidableDef(_bb: ByteBuffer): ModelPipelineCollidableDef","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.getRootAsModelPipelineCollidableDef"]},{"name":"open fun getRootAsModelPipelineCollidableDef(_bb: ByteBuffer, obj: ModelPipelineCollidableDef): ModelPipelineCollidableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.getRootAsModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/get-root-as-model-pipeline-collidable-def.html","searchKeys":["getRootAsModelPipelineCollidableDef","open fun getRootAsModelPipelineCollidableDef(_bb: ByteBuffer, obj: ModelPipelineCollidableDef): ModelPipelineCollidableDef","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.getRootAsModelPipelineCollidableDef"]},{"name":"open fun getRootAsModelPipelineDef(_bb: ByteBuffer): ModelPipelineDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.getRootAsModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/get-root-as-model-pipeline-def.html","searchKeys":["getRootAsModelPipelineDef","open fun getRootAsModelPipelineDef(_bb: ByteBuffer): ModelPipelineDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.getRootAsModelPipelineDef"]},{"name":"open fun getRootAsModelPipelineDef(_bb: ByteBuffer, obj: ModelPipelineDef): ModelPipelineDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.getRootAsModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/get-root-as-model-pipeline-def.html","searchKeys":["getRootAsModelPipelineDef","open fun getRootAsModelPipelineDef(_bb: ByteBuffer, obj: ModelPipelineDef): ModelPipelineDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.getRootAsModelPipelineDef"]},{"name":"open fun getRootAsModelPipelineImportDef(_bb: ByteBuffer): ModelPipelineImportDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.getRootAsModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/get-root-as-model-pipeline-import-def.html","searchKeys":["getRootAsModelPipelineImportDef","open fun getRootAsModelPipelineImportDef(_bb: ByteBuffer): ModelPipelineImportDef","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.getRootAsModelPipelineImportDef"]},{"name":"open fun getRootAsModelPipelineImportDef(_bb: ByteBuffer, obj: ModelPipelineImportDef): ModelPipelineImportDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.getRootAsModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/get-root-as-model-pipeline-import-def.html","searchKeys":["getRootAsModelPipelineImportDef","open fun getRootAsModelPipelineImportDef(_bb: ByteBuffer, obj: ModelPipelineImportDef): ModelPipelineImportDef","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.getRootAsModelPipelineImportDef"]},{"name":"open fun getRootAsModelPipelineMaterialDef(_bb: ByteBuffer): ModelPipelineMaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.getRootAsModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/get-root-as-model-pipeline-material-def.html","searchKeys":["getRootAsModelPipelineMaterialDef","open fun getRootAsModelPipelineMaterialDef(_bb: ByteBuffer): ModelPipelineMaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.getRootAsModelPipelineMaterialDef"]},{"name":"open fun getRootAsModelPipelineMaterialDef(_bb: ByteBuffer, obj: ModelPipelineMaterialDef): ModelPipelineMaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.getRootAsModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/get-root-as-model-pipeline-material-def.html","searchKeys":["getRootAsModelPipelineMaterialDef","open fun getRootAsModelPipelineMaterialDef(_bb: ByteBuffer, obj: ModelPipelineMaterialDef): ModelPipelineMaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.getRootAsModelPipelineMaterialDef"]},{"name":"open fun getRootAsModelPipelineRenderableDef(_bb: ByteBuffer): ModelPipelineRenderableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.getRootAsModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/get-root-as-model-pipeline-renderable-def.html","searchKeys":["getRootAsModelPipelineRenderableDef","open fun getRootAsModelPipelineRenderableDef(_bb: ByteBuffer): ModelPipelineRenderableDef","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.getRootAsModelPipelineRenderableDef"]},{"name":"open fun getRootAsModelPipelineRenderableDef(_bb: ByteBuffer, obj: ModelPipelineRenderableDef): ModelPipelineRenderableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.getRootAsModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/get-root-as-model-pipeline-renderable-def.html","searchKeys":["getRootAsModelPipelineRenderableDef","open fun getRootAsModelPipelineRenderableDef(_bb: ByteBuffer, obj: ModelPipelineRenderableDef): ModelPipelineRenderableDef","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.getRootAsModelPipelineRenderableDef"]},{"name":"open fun getRootAsModelPipelineSkeletonDef(_bb: ByteBuffer): ModelPipelineSkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.getRootAsModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/get-root-as-model-pipeline-skeleton-def.html","searchKeys":["getRootAsModelPipelineSkeletonDef","open fun getRootAsModelPipelineSkeletonDef(_bb: ByteBuffer): ModelPipelineSkeletonDef","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.getRootAsModelPipelineSkeletonDef"]},{"name":"open fun getRootAsModelPipelineSkeletonDef(_bb: ByteBuffer, obj: ModelPipelineSkeletonDef): ModelPipelineSkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.getRootAsModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/get-root-as-model-pipeline-skeleton-def.html","searchKeys":["getRootAsModelPipelineSkeletonDef","open fun getRootAsModelPipelineSkeletonDef(_bb: ByteBuffer, obj: ModelPipelineSkeletonDef): ModelPipelineSkeletonDef","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.getRootAsModelPipelineSkeletonDef"]},{"name":"open fun getRootAsSkeletonDef(_bb: ByteBuffer): SkeletonDef","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.getRootAsSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/get-root-as-skeleton-def.html","searchKeys":["getRootAsSkeletonDef","open fun getRootAsSkeletonDef(_bb: ByteBuffer): SkeletonDef","com.google.ar.sceneform.lullmodel.SkeletonDef.getRootAsSkeletonDef"]},{"name":"open fun getRootAsSkeletonDef(_bb: ByteBuffer, obj: SkeletonDef): SkeletonDef","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.getRootAsSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/get-root-as-skeleton-def.html","searchKeys":["getRootAsSkeletonDef","open fun getRootAsSkeletonDef(_bb: ByteBuffer, obj: SkeletonDef): SkeletonDef","com.google.ar.sceneform.lullmodel.SkeletonDef.getRootAsSkeletonDef"]},{"name":"open fun getRootAsSubmeshAabb(_bb: ByteBuffer): SubmeshAabb","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.getRootAsSubmeshAabb","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/get-root-as-submesh-aabb.html","searchKeys":["getRootAsSubmeshAabb","open fun getRootAsSubmeshAabb(_bb: ByteBuffer): SubmeshAabb","com.google.ar.sceneform.lullmodel.SubmeshAabb.getRootAsSubmeshAabb"]},{"name":"open fun getRootAsSubmeshAabb(_bb: ByteBuffer, obj: SubmeshAabb): SubmeshAabb","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.getRootAsSubmeshAabb","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/get-root-as-submesh-aabb.html","searchKeys":["getRootAsSubmeshAabb","open fun getRootAsSubmeshAabb(_bb: ByteBuffer, obj: SubmeshAabb): SubmeshAabb","com.google.ar.sceneform.lullmodel.SubmeshAabb.getRootAsSubmeshAabb"]},{"name":"open fun getRootAsTextureDef(_bb: ByteBuffer): TextureDef","description":"com.google.ar.sceneform.lullmodel.TextureDef.getRootAsTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/get-root-as-texture-def.html","searchKeys":["getRootAsTextureDef","open fun getRootAsTextureDef(_bb: ByteBuffer): TextureDef","com.google.ar.sceneform.lullmodel.TextureDef.getRootAsTextureDef"]},{"name":"open fun getRootAsTextureDef(_bb: ByteBuffer, obj: TextureDef): TextureDef","description":"com.google.ar.sceneform.lullmodel.TextureDef.getRootAsTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/get-root-as-texture-def.html","searchKeys":["getRootAsTextureDef","open fun getRootAsTextureDef(_bb: ByteBuffer, obj: TextureDef): TextureDef","com.google.ar.sceneform.lullmodel.TextureDef.getRootAsTextureDef"]},{"name":"open fun getRootAsVariantArrayDef(_bb: ByteBuffer): VariantArrayDef","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.getRootAsVariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/get-root-as-variant-array-def.html","searchKeys":["getRootAsVariantArrayDef","open fun getRootAsVariantArrayDef(_bb: ByteBuffer): VariantArrayDef","com.google.ar.sceneform.lullmodel.VariantArrayDef.getRootAsVariantArrayDef"]},{"name":"open fun getRootAsVariantArrayDef(_bb: ByteBuffer, obj: VariantArrayDef): VariantArrayDef","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.getRootAsVariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/get-root-as-variant-array-def.html","searchKeys":["getRootAsVariantArrayDef","open fun getRootAsVariantArrayDef(_bb: ByteBuffer, obj: VariantArrayDef): VariantArrayDef","com.google.ar.sceneform.lullmodel.VariantArrayDef.getRootAsVariantArrayDef"]},{"name":"open fun getRootAsVariantArrayDefImpl(_bb: ByteBuffer): VariantArrayDefImpl","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.getRootAsVariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/get-root-as-variant-array-def-impl.html","searchKeys":["getRootAsVariantArrayDefImpl","open fun getRootAsVariantArrayDefImpl(_bb: ByteBuffer): VariantArrayDefImpl","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.getRootAsVariantArrayDefImpl"]},{"name":"open fun getRootAsVariantArrayDefImpl(_bb: ByteBuffer, obj: VariantArrayDefImpl): VariantArrayDefImpl","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.getRootAsVariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/get-root-as-variant-array-def-impl.html","searchKeys":["getRootAsVariantArrayDefImpl","open fun getRootAsVariantArrayDefImpl(_bb: ByteBuffer, obj: VariantArrayDefImpl): VariantArrayDefImpl","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.getRootAsVariantArrayDefImpl"]},{"name":"open fun getRootAsVariantMapDef(_bb: ByteBuffer): VariantMapDef","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.getRootAsVariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/get-root-as-variant-map-def.html","searchKeys":["getRootAsVariantMapDef","open fun getRootAsVariantMapDef(_bb: ByteBuffer): VariantMapDef","com.google.ar.sceneform.lullmodel.VariantMapDef.getRootAsVariantMapDef"]},{"name":"open fun getRootAsVariantMapDef(_bb: ByteBuffer, obj: VariantMapDef): VariantMapDef","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.getRootAsVariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/get-root-as-variant-map-def.html","searchKeys":["getRootAsVariantMapDef","open fun getRootAsVariantMapDef(_bb: ByteBuffer, obj: VariantMapDef): VariantMapDef","com.google.ar.sceneform.lullmodel.VariantMapDef.getRootAsVariantMapDef"]},{"name":"open fun getRotation(): Quaternion","description":"io.github.sceneview.collision.Box.getRotation","location":"sceneview/io.github.sceneview.collision/-box/get-rotation.html","searchKeys":["getRotation","open fun getRotation(): Quaternion","io.github.sceneview.collision.Box.getRotation"]},{"name":"open fun getShape(): CollisionShape","description":"io.github.sceneview.collision.Collider.getShape","location":"sceneview/io.github.sceneview.collision/-collider/get-shape.html","searchKeys":["getShape","open fun getShape(): CollisionShape","io.github.sceneview.collision.Collider.getShape"]},{"name":"open fun getSize(view: View): Vector3","description":"com.google.ar.sceneform.rendering.DpToMetersViewSizer.getSize","location":"sceneview/com.google.ar.sceneform.rendering/-dp-to-meters-view-sizer/get-size.html","searchKeys":["getSize","open fun getSize(view: View): Vector3","com.google.ar.sceneform.rendering.DpToMetersViewSizer.getSize"]},{"name":"open fun getSize(view: View): Vector3","description":"com.google.ar.sceneform.rendering.FixedHeightViewSizer.getSize","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-height-view-sizer/get-size.html","searchKeys":["getSize","open fun getSize(view: View): Vector3","com.google.ar.sceneform.rendering.FixedHeightViewSizer.getSize"]},{"name":"open fun getSize(view: View): Vector3","description":"com.google.ar.sceneform.rendering.FixedWidthViewSizer.getSize","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-width-view-sizer/get-size.html","searchKeys":["getSize","open fun getSize(view: View): Vector3","com.google.ar.sceneform.rendering.FixedWidthViewSizer.getSize"]},{"name":"open fun getSizeAabb(): Vector3","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getSizeAabb","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-size-aabb.html","searchKeys":["getSizeAabb","open fun getSizeAabb(): Vector3","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getSizeAabb"]},{"name":"open fun getSizer(): ViewSizer","description":"com.google.ar.sceneform.rendering.ViewRenderable.getSizer","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/get-sizer.html","searchKeys":["getSizer","open fun getSizer(): ViewSizer","com.google.ar.sceneform.rendering.ViewRenderable.getSizer"]},{"name":"open fun getSubmeshCount(): Int","description":"com.google.ar.sceneform.rendering.Renderable.getSubmeshCount","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-submesh-count.html","searchKeys":["getSubmeshCount","open fun getSubmeshCount(): Int","com.google.ar.sceneform.rendering.Renderable.getSubmeshCount"]},{"name":"open fun getSubmeshName(submeshIndex: Int): String","description":"com.google.ar.sceneform.rendering.Renderable.getSubmeshName","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/get-submesh-name.html","searchKeys":["getSubmeshName","open fun getSubmeshName(submeshIndex: Int): String","com.google.ar.sceneform.rendering.Renderable.getSubmeshName"]},{"name":"open fun getTimeAtFraction(fraction: Float): Float","description":"io.github.sceneview.animation.ModelAnimation.getTimeAtFraction","location":"sceneview/io.github.sceneview.animation/-model-animation/get-time-at-fraction.html","searchKeys":["getTimeAtFraction","open fun getTimeAtFraction(fraction: Float): Float","io.github.sceneview.animation.ModelAnimation.getTimeAtFraction"]},{"name":"open fun getTimeAtFrame(frame: Int): Float","description":"io.github.sceneview.animation.ModelAnimation.getTimeAtFrame","location":"sceneview/io.github.sceneview.animation/-model-animation/get-time-at-frame.html","searchKeys":["getTimeAtFrame","open fun getTimeAtFrame(frame: Int): Float","io.github.sceneview.animation.ModelAnimation.getTimeAtFrame"]},{"name":"open fun getTransformOffset(): Vector3","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getTransformOffset","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-transform-offset.html","searchKeys":["getTransformOffset","open fun getTransformOffset(): Vector3","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getTransformOffset"]},{"name":"open fun getTransformScale(): Float","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getTransformScale","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-transform-scale.html","searchKeys":["getTransformScale","open fun getTransformScale(): Float","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getTransformScale"]},{"name":"open fun getTransformedShape(): CollisionShape","description":"io.github.sceneview.collision.Collider.getTransformedShape","location":"sceneview/io.github.sceneview.collision/-collider/get-transformed-shape.html","searchKeys":["getTransformedShape","open fun getTransformedShape(): CollisionShape","io.github.sceneview.collision.Collider.getTransformedShape"]},{"name":"open fun getVertexBuffer(): VertexBuffer","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getVertexBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/get-vertex-buffer.html","searchKeys":["getVertexBuffer","open fun getVertexBuffer(): VertexBuffer","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.getVertexBuffer"]},{"name":"open fun getWidth(): Float","description":"com.google.ar.sceneform.rendering.FixedWidthViewSizer.getWidth","location":"sceneview/com.google.ar.sceneform.rendering/-fixed-width-view-sizer/get-width.html","searchKeys":["getWidth","open fun getWidth(): Float","com.google.ar.sceneform.rendering.FixedWidthViewSizer.getWidth"]},{"name":"open fun getWorldModelMatrix(): Matrix","description":"com.google.ar.sceneform.rendering.RenderableInstance.getWorldModelMatrix","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/get-world-model-matrix.html","searchKeys":["getWorldModelMatrix","open fun getWorldModelMatrix(): Matrix","com.google.ar.sceneform.rendering.RenderableInstance.getWorldModelMatrix"]},{"name":"open fun getWorldPosition(): Float3","description":"io.github.sceneview.collision.RayHit.getWorldPosition","location":"sceneview/io.github.sceneview.collision/-ray-hit/get-world-position.html","searchKeys":["getWorldPosition","open fun getWorldPosition(): Float3","io.github.sceneview.collision.RayHit.getWorldPosition"]},{"name":"open fun h(): Float","description":"com.google.ar.sceneform.lullmodel.Rect.h","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/h.html","searchKeys":["h","open fun h(): Float","com.google.ar.sceneform.lullmodel.Rect.h"]},{"name":"open fun h(): Int","description":"com.google.ar.sceneform.lullmodel.Recti.h","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/h.html","searchKeys":["h","open fun h(): Int","com.google.ar.sceneform.lullmodel.Recti.h"]},{"name":"open fun hasAnimations(): Boolean","description":"io.github.sceneview.animation.AnimatableModel.hasAnimations","location":"sceneview/io.github.sceneview.animation/-animatable-model/has-animations.html","searchKeys":["hasAnimations","open fun hasAnimations(): Boolean","io.github.sceneview.animation.AnimatableModel.hasAnimations"]},{"name":"open fun hasSource(): Boolean","description":"com.google.ar.sceneform.rendering.Renderable.Builder.hasSource","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/has-source.html","searchKeys":["hasSource","open fun hasSource(): Boolean","com.google.ar.sceneform.rendering.Renderable.Builder.hasSource"]},{"name":"open fun hashCode(): Int","description":"io.github.sceneview.collision.Quaternion.hashCode","location":"sceneview/io.github.sceneview.collision/-quaternion/hash-code.html","searchKeys":["hashCode","open fun hashCode(): Int","io.github.sceneview.collision.Quaternion.hashCode"]},{"name":"open fun hashCode(): Int","description":"io.github.sceneview.collision.Vector3.hashCode","location":"sceneview/io.github.sceneview.collision/-vector3/hash-code.html","searchKeys":["hashCode","open fun hashCode(): Int","io.github.sceneview.collision.Vector3.hashCode"]},{"name":"open fun hashKey(): Long","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.hashKey","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/hash-key.html","searchKeys":["hashKey","open fun hashKey(): Long","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.hashKey"]},{"name":"open fun identity(): Quaternion","description":"io.github.sceneview.collision.Quaternion.identity","location":"sceneview/io.github.sceneview.collision/-quaternion/identity.html","searchKeys":["identity","open fun identity(): Quaternion","io.github.sceneview.collision.Quaternion.identity"]},{"name":"open fun indices16(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices16.html","searchKeys":["indices16","open fun indices16(j: Int): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16"]},{"name":"open fun indices16AsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16AsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices16-as-byte-buffer.html","searchKeys":["indices16AsByteBuffer","open fun indices16AsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16AsByteBuffer"]},{"name":"open fun indices16InByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16InByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices16-in-byte-buffer.html","searchKeys":["indices16InByteBuffer","open fun indices16InByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16InByteBuffer"]},{"name":"open fun indices16Length(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16Length","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices16-length.html","searchKeys":["indices16Length","open fun indices16Length(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices16Length"]},{"name":"open fun indices32(j: Int): Long","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices32.html","searchKeys":["indices32","open fun indices32(j: Int): Long","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32"]},{"name":"open fun indices32AsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32AsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices32-as-byte-buffer.html","searchKeys":["indices32AsByteBuffer","open fun indices32AsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32AsByteBuffer"]},{"name":"open fun indices32InByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32InByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices32-in-byte-buffer.html","searchKeys":["indices32InByteBuffer","open fun indices32InByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32InByteBuffer"]},{"name":"open fun indices32Length(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32Length","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/indices32-length.html","searchKeys":["indices32Length","open fun indices32Length(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.indices32Length"]},{"name":"open fun init(existing_bb: ByteBuffer, bb_factory: FlatBufferBuilder.ByteBufferFactory): FlatBufferBuilder","description":"com.google.flatbuffers.FlatBufferBuilder.init","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/init.html","searchKeys":["init","open fun init(existing_bb: ByteBuffer, bb_factory: FlatBufferBuilder.ByteBufferFactory): FlatBufferBuilder","com.google.flatbuffers.FlatBufferBuilder.init"]},{"name":"open fun innerRadius(): Float","description":"com.google.ar.sceneform.lullmodel.ArcDef.innerRadius","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/inner-radius.html","searchKeys":["innerRadius","open fun innerRadius(): Float","com.google.ar.sceneform.lullmodel.ArcDef.innerRadius"]},{"name":"open fun inputStreamCallableToByteArray(inputStreamCreator: Callable<InputStream>): Array<Byte>","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.inputStreamCallableToByteArray","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/input-stream-callable-to-byte-array.html","searchKeys":["inputStreamCallableToByteArray","open fun inputStreamCallableToByteArray(inputStreamCreator: Callable<InputStream>): Array<Byte>","com.google.ar.sceneform.utilities.SceneformBufferUtils.inputStreamCallableToByteArray"]},{"name":"open fun inputStreamToByteArray(input: InputStream): Array<Byte>","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.inputStreamToByteArray","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/input-stream-to-byte-array.html","searchKeys":["inputStreamToByteArray","open fun inputStreamToByteArray(input: InputStream): Array<Byte>","com.google.ar.sceneform.utilities.SceneformBufferUtils.inputStreamToByteArray"]},{"name":"open fun inputStreamToByteBuffer(inputStreamCreator: Callable<InputStream>): ByteBuffer","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.inputStreamToByteBuffer","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/input-stream-to-byte-buffer.html","searchKeys":["inputStreamToByteBuffer","open fun inputStreamToByteBuffer(inputStreamCreator: Callable<InputStream>): ByteBuffer","com.google.ar.sceneform.utilities.SceneformBufferUtils.inputStreamToByteBuffer"]},{"name":"open fun interleaved(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.interleaved","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/interleaved.html","searchKeys":["interleaved","open fun interleaved(): Boolean","com.google.ar.sceneform.lullmodel.ModelInstanceDef.interleaved"]},{"name":"open fun inverseRotateVector(q: Quaternion, src: Vector3): Vector3","description":"io.github.sceneview.collision.Quaternion.inverseRotateVector","location":"sceneview/io.github.sceneview.collision/-quaternion/inverse-rotate-vector.html","searchKeys":["inverseRotateVector","open fun inverseRotateVector(q: Quaternion, src: Vector3): Vector3","io.github.sceneview.collision.Quaternion.inverseRotateVector"]},{"name":"open fun inverseTonemap(): Color","description":"com.google.ar.sceneform.rendering.Color.inverseTonemap","location":"sceneview/com.google.ar.sceneform.rendering/-color/inverse-tonemap.html","searchKeys":["inverseTonemap","open fun inverseTonemap(): Color","com.google.ar.sceneform.rendering.Color.inverseTonemap"]},{"name":"open fun invert(matrix: Matrix, dest: Matrix): Boolean","description":"io.github.sceneview.collision.Matrix.invert","location":"sceneview/io.github.sceneview.collision/-matrix/invert.html","searchKeys":["invert","open fun invert(matrix: Matrix, dest: Matrix): Boolean","io.github.sceneview.collision.Matrix.invert"]},{"name":"open fun inverted(): Quaternion","description":"io.github.sceneview.collision.Quaternion.inverted","location":"sceneview/io.github.sceneview.collision/-quaternion/inverted.html","searchKeys":["inverted","open fun inverted(): Quaternion","io.github.sceneview.collision.Quaternion.inverted"]},{"name":"open fun isAndroidApiAvailable(): Boolean","description":"com.google.ar.sceneform.utilities.AndroidPreconditions.isAndroidApiAvailable","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/is-android-api-available.html","searchKeys":["isAndroidApiAvailable","open fun isAndroidApiAvailable(): Boolean","com.google.ar.sceneform.utilities.AndroidPreconditions.isAndroidApiAvailable"]},{"name":"open fun isAndroidResource(sourceUri: Uri): Boolean","description":"com.google.ar.sceneform.utilities.LoadHelper.isAndroidResource","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/is-android-resource.html","searchKeys":["isAndroidResource","open fun isAndroidResource(sourceUri: Uri): Boolean","com.google.ar.sceneform.utilities.LoadHelper.isAndroidResource"]},{"name":"open fun isContentResource(sourceUri: Uri): Boolean","description":"com.google.ar.sceneform.utilities.LoadHelper.isContentResource","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/is-content-resource.html","searchKeys":["isContentResource","open fun isContentResource(sourceUri: Uri): Boolean","com.google.ar.sceneform.utilities.LoadHelper.isContentResource"]},{"name":"open fun isDataUri(uri: Uri): Boolean","description":"com.google.ar.sceneform.utilities.LoadHelper.isDataUri","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/is-data-uri.html","searchKeys":["isDataUri","open fun isDataUri(uri: Uri): Boolean","com.google.ar.sceneform.utilities.LoadHelper.isDataUri"]},{"name":"open fun isEmpty(): Boolean","description":"io.github.sceneview.collision.ChangeId.isEmpty","location":"sceneview/io.github.sceneview.collision/-change-id/is-empty.html","searchKeys":["isEmpty","open fun isEmpty(): Boolean","io.github.sceneview.collision.ChangeId.isEmpty"]},{"name":"open fun isFieldPresent(table: Table, offset: Int): Boolean","description":"com.google.flatbuffers.FlatBufferBuilder.isFieldPresent","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/is-field-present.html","searchKeys":["isFieldPresent","open fun isFieldPresent(table: Table, offset: Int): Boolean","com.google.flatbuffers.FlatBufferBuilder.isFieldPresent"]},{"name":"open fun isFileAsset(sourceUri: Uri): Boolean","description":"com.google.ar.sceneform.utilities.LoadHelper.isFileAsset","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/is-file-asset.html","searchKeys":["isFileAsset","open fun isFileAsset(sourceUri: Uri): Boolean","com.google.ar.sceneform.utilities.LoadHelper.isFileAsset"]},{"name":"open fun isGltfDataUri(uri: Uri): Boolean","description":"com.google.ar.sceneform.utilities.LoadHelper.isGltfDataUri","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/is-gltf-data-uri.html","searchKeys":["isGltfDataUri","open fun isGltfDataUri(uri: Uri): Boolean","com.google.ar.sceneform.utilities.LoadHelper.isGltfDataUri"]},{"name":"open fun isLullModel(buffer: ByteBuffer): Boolean","description":"com.google.ar.sceneform.rendering.LullModel.isLullModel","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/is-lull-model.html","searchKeys":["isLullModel","open fun isLullModel(buffer: ByteBuffer): Boolean","com.google.ar.sceneform.rendering.LullModel.isLullModel"]},{"name":"open fun isMinAndroidApiLevel(): Boolean","description":"com.google.ar.sceneform.utilities.AndroidPreconditions.isMinAndroidApiLevel","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/is-min-android-api-level.html","searchKeys":["isMinAndroidApiLevel","open fun isMinAndroidApiLevel(): Boolean","com.google.ar.sceneform.utilities.AndroidPreconditions.isMinAndroidApiLevel"]},{"name":"open fun isRgbm(): Boolean","description":"com.google.ar.sceneform.lullmodel.TextureDef.isRgbm","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/is-rgbm.html","searchKeys":["isRgbm","open fun isRgbm(): Boolean","com.google.ar.sceneform.lullmodel.TextureDef.isRgbm"]},{"name":"open fun isSceneformBundle(buffer: ByteBuffer): Boolean","description":"com.google.ar.sceneform.rendering.SceneformBundle.isSceneformBundle","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/is-sceneform-bundle.html","searchKeys":["isSceneformBundle","open fun isSceneformBundle(buffer: ByteBuffer): Boolean","com.google.ar.sceneform.rendering.SceneformBundle.isSceneformBundle"]},{"name":"open fun isSupported(context: Context): Boolean","description":"com.google.ar.sceneform.Sceneform.isSupported","location":"sceneview/com.google.ar.sceneform/-sceneform/is-supported.html","searchKeys":["isSupported","open fun isSupported(context: Context): Boolean","com.google.ar.sceneform.Sceneform.isSupported"]},{"name":"open fun isViewTextureReady(): Boolean","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.isViewTextureReady","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/is-view-texture-ready.html","searchKeys":["isViewTextureReady","open fun isViewTextureReady(): Boolean","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.isViewTextureReady"]},{"name":"open fun key(): String","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.key","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/key.html","searchKeys":["key","open fun key(): String","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.key"]},{"name":"open fun keyAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.keyAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/key-as-byte-buffer.html","searchKeys":["keyAsByteBuffer","open fun keyAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.keyAsByteBuffer"]},{"name":"open fun keyInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.keyInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/key-in-byte-buffer.html","searchKeys":["keyInByteBuffer","open fun keyInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.keyInByteBuffer"]},{"name":"open fun left(): Vector3","description":"io.github.sceneview.collision.Vector3.left","location":"sceneview/io.github.sceneview.collision/-vector3/left.html","searchKeys":["left","open fun left(): Vector3","io.github.sceneview.collision.Vector3.left"]},{"name":"open fun length(): Float","description":"io.github.sceneview.collision.Vector3.length","location":"sceneview/io.github.sceneview.collision/-vector3/length.html","searchKeys":["length","open fun length(): Float","io.github.sceneview.collision.Vector3.length"]},{"name":"open fun lengthSquared(): Float","description":"io.github.sceneview.collision.Vector3.lengthSquared","location":"sceneview/io.github.sceneview.collision/-vector3/length-squared.html","searchKeys":["lengthSquared","open fun lengthSquared(): Float","io.github.sceneview.collision.Vector3.lengthSquared"]},{"name":"open fun lerp(a: Float, b: Float, t: Float): Float","description":"io.github.sceneview.collision.MathHelper.lerp","location":"sceneview/io.github.sceneview.collision/-math-helper/lerp.html","searchKeys":["lerp","open fun lerp(a: Float, b: Float, t: Float): Float","io.github.sceneview.collision.MathHelper.lerp"]},{"name":"open fun lerp(a: Vector3, b: Vector3, t: Float): Vector3","description":"io.github.sceneview.collision.Vector3.lerp","location":"sceneview/io.github.sceneview.collision/-vector3/lerp.html","searchKeys":["lerp","open fun lerp(a: Vector3, b: Vector3, t: Float): Vector3","io.github.sceneview.collision.Vector3.lerp"]},{"name":"open fun lods(j: Int): ModelInstanceDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.lods","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/lods.html","searchKeys":["lods","open fun lods(j: Int): ModelInstanceDef","com.google.ar.sceneform.lullmodel.ModelDef.lods"]},{"name":"open fun lods(obj: ModelInstanceDef, j: Int): ModelInstanceDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.lods","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/lods.html","searchKeys":["lods","open fun lods(obj: ModelInstanceDef, j: Int): ModelInstanceDef","com.google.ar.sceneform.lullmodel.ModelDef.lods"]},{"name":"open fun lodsLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelDef.lodsLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/lods-length.html","searchKeys":["lodsLength","open fun lodsLength(): Int","com.google.ar.sceneform.lullmodel.ModelDef.lodsLength"]},{"name":"open fun lookAt(eye: Position, center: Position, up: Direction)","description":"io.github.sceneview.components.CameraComponent.lookAt","location":"sceneview/io.github.sceneview.components/-camera-component/look-at.html","searchKeys":["lookAt","open fun lookAt(eye: Position, center: Position, up: Direction)","io.github.sceneview.components.CameraComponent.lookAt"]},{"name":"open fun lookRotation(forwardInWorld: Vector3, desiredUpInWorld: Vector3): Quaternion","description":"io.github.sceneview.collision.Quaternion.lookRotation","location":"sceneview/io.github.sceneview.collision/-quaternion/look-rotation.html","searchKeys":["lookRotation","open fun lookRotation(forwardInWorld: Vector3, desiredUpInWorld: Vector3): Quaternion","io.github.sceneview.collision.Quaternion.lookRotation"]},{"name":"open fun magFilter(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.magFilter","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/mag-filter.html","searchKeys":["magFilter","open fun magFilter(): Int","com.google.ar.sceneform.lullmodel.TextureDef.magFilter"]},{"name":"open fun makeCopy(): Box","description":"io.github.sceneview.collision.Box.makeCopy","location":"sceneview/io.github.sceneview.collision/-box/make-copy.html","searchKeys":["makeCopy","open fun makeCopy(): Box","io.github.sceneview.collision.Box.makeCopy"]},{"name":"open fun makeCopy(): Material","description":"com.google.ar.sceneform.rendering.Material.makeCopy","location":"sceneview/com.google.ar.sceneform.rendering/-material/make-copy.html","searchKeys":["makeCopy","open fun makeCopy(): Material","com.google.ar.sceneform.rendering.Material.makeCopy"]},{"name":"open fun makeCopy(): ModelRenderable","description":"com.google.ar.sceneform.rendering.ModelRenderable.makeCopy","location":"sceneview/com.google.ar.sceneform.rendering/-model-renderable/make-copy.html","searchKeys":["makeCopy","open fun makeCopy(): ModelRenderable","com.google.ar.sceneform.rendering.ModelRenderable.makeCopy"]},{"name":"open fun makeCopy(): Sphere","description":"io.github.sceneview.collision.Sphere.makeCopy","location":"sceneview/io.github.sceneview.collision/-sphere/make-copy.html","searchKeys":["makeCopy","open fun makeCopy(): Sphere","io.github.sceneview.collision.Sphere.makeCopy"]},{"name":"open fun makeCopy(): ViewRenderable","description":"com.google.ar.sceneform.rendering.ViewRenderable.makeCopy","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/make-copy.html","searchKeys":["makeCopy","open fun makeCopy(): ViewRenderable","com.google.ar.sceneform.rendering.ViewRenderable.makeCopy"]},{"name":"open fun makeCube(engine: Engine, size: Vector3, center: Vector3, material: Material): ModelRenderable","description":"com.google.ar.sceneform.rendering.ShapeFactory.makeCube","location":"sceneview/com.google.ar.sceneform.rendering/-shape-factory/make-cube.html","searchKeys":["makeCube","open fun makeCube(engine: Engine, size: Vector3, center: Vector3, material: Material): ModelRenderable","com.google.ar.sceneform.rendering.ShapeFactory.makeCube"]},{"name":"open fun makeCylinder(engine: Engine, radius: Float, height: Float, center: Vector3, material: Material): ModelRenderable","description":"com.google.ar.sceneform.rendering.ShapeFactory.makeCylinder","location":"sceneview/com.google.ar.sceneform.rendering/-shape-factory/make-cylinder.html","searchKeys":["makeCylinder","open fun makeCylinder(engine: Engine, radius: Float, height: Float, center: Vector3, material: Material): ModelRenderable","com.google.ar.sceneform.rendering.ShapeFactory.makeCylinder"]},{"name":"open fun makePlane(engine: Engine, size: Vector3, center: Vector3, material: MaterialInstance): ModelRenderable","description":"com.google.ar.sceneform.rendering.PlaneFactory.makePlane","location":"sceneview/com.google.ar.sceneform.rendering/-plane-factory/make-plane.html","searchKeys":["makePlane","open fun makePlane(engine: Engine, size: Vector3, center: Vector3, material: MaterialInstance): ModelRenderable","com.google.ar.sceneform.rendering.PlaneFactory.makePlane"]},{"name":"open fun makeRotation(rotation: Quaternion)","description":"io.github.sceneview.collision.Matrix.makeRotation","location":"sceneview/io.github.sceneview.collision/-matrix/make-rotation.html","searchKeys":["makeRotation","open fun makeRotation(rotation: Quaternion)","io.github.sceneview.collision.Matrix.makeRotation"]},{"name":"open fun makeScale(scale: Float)","description":"io.github.sceneview.collision.Matrix.makeScale","location":"sceneview/io.github.sceneview.collision/-matrix/make-scale.html","searchKeys":["makeScale","open fun makeScale(scale: Float)","io.github.sceneview.collision.Matrix.makeScale"]},{"name":"open fun makeScale(scale: Vector3)","description":"io.github.sceneview.collision.Matrix.makeScale","location":"sceneview/io.github.sceneview.collision/-matrix/make-scale.html","searchKeys":["makeScale","open fun makeScale(scale: Vector3)","io.github.sceneview.collision.Matrix.makeScale"]},{"name":"open fun makeSphere(engine: Engine, radius: Float, center: Vector3, material: Material): ModelRenderable","description":"com.google.ar.sceneform.rendering.ShapeFactory.makeSphere","location":"sceneview/com.google.ar.sceneform.rendering/-shape-factory/make-sphere.html","searchKeys":["makeSphere","open fun makeSphere(engine: Engine, radius: Float, center: Vector3, material: Material): ModelRenderable","com.google.ar.sceneform.rendering.ShapeFactory.makeSphere"]},{"name":"open fun makeTranslation(translation: Vector3)","description":"io.github.sceneview.collision.Matrix.makeTranslation","location":"sceneview/io.github.sceneview.collision/-matrix/make-translation.html","searchKeys":["makeTranslation","open fun makeTranslation(translation: Vector3)","io.github.sceneview.collision.Matrix.makeTranslation"]},{"name":"open fun makeTrs(translation: Vector3, rotation: Quaternion, scale: Vector3)","description":"io.github.sceneview.collision.Matrix.makeTrs","location":"sceneview/io.github.sceneview.collision/-matrix/make-trs.html","searchKeys":["makeTrs","open fun makeTrs(translation: Vector3, rotation: Quaternion, scale: Vector3)","io.github.sceneview.collision.Matrix.makeTrs"]},{"name":"open fun markWorldShapeDirty()","description":"io.github.sceneview.collision.Collider.markWorldShapeDirty","location":"sceneview/io.github.sceneview.collision/-collider/mark-world-shape-dirty.html","searchKeys":["markWorldShapeDirty","open fun markWorldShapeDirty()","io.github.sceneview.collision.Collider.markWorldShapeDirty"]},{"name":"open fun material(): MaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.material","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/material.html","searchKeys":["material","open fun material(): MaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.material"]},{"name":"open fun material(obj: MaterialDef): MaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.material","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/material.html","searchKeys":["material","open fun material(obj: MaterialDef): MaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.material"]},{"name":"open fun materials(j: Int): MaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.materials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/materials.html","searchKeys":["materials","open fun materials(j: Int): MaterialDef","com.google.ar.sceneform.lullmodel.ModelInstanceDef.materials"]},{"name":"open fun materials(j: Int): ModelPipelineMaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.materials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/materials.html","searchKeys":["materials","open fun materials(j: Int): ModelPipelineMaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.materials"]},{"name":"open fun materials(obj: MaterialDef, j: Int): MaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.materials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/materials.html","searchKeys":["materials","open fun materials(obj: MaterialDef, j: Int): MaterialDef","com.google.ar.sceneform.lullmodel.ModelInstanceDef.materials"]},{"name":"open fun materials(obj: ModelPipelineMaterialDef, j: Int): ModelPipelineMaterialDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.materials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/materials.html","searchKeys":["materials","open fun materials(obj: ModelPipelineMaterialDef, j: Int): ModelPipelineMaterialDef","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.materials"]},{"name":"open fun materialsLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.materialsLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/materials-length.html","searchKeys":["materialsLength","open fun materialsLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.materialsLength"]},{"name":"open fun materialsLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.materialsLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/materials-length.html","searchKeys":["materialsLength","open fun materialsLength(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.materialsLength"]},{"name":"open fun max(): Vec3","description":"com.google.ar.sceneform.lullmodel.AabbDef.max","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/max.html","searchKeys":["max","open fun max(): Vec3","com.google.ar.sceneform.lullmodel.AabbDef.max"]},{"name":"open fun max(lhs: Vector3, rhs: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3.max","location":"sceneview/io.github.sceneview.collision/-vector3/max.html","searchKeys":["max","open fun max(lhs: Vector3, rhs: Vector3): Vector3","io.github.sceneview.collision.Vector3.max"]},{"name":"open fun max(obj: Vec3): Vec3","description":"com.google.ar.sceneform.lullmodel.AabbDef.max","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/max.html","searchKeys":["max","open fun max(obj: Vec3): Vec3","com.google.ar.sceneform.lullmodel.AabbDef.max"]},{"name":"open fun maxBoneWeights(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.maxBoneWeights","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/max-bone-weights.html","searchKeys":["maxBoneWeights","open fun maxBoneWeights(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.maxBoneWeights"]},{"name":"open fun maxPosition(): Vec3","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.maxPosition","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/max-position.html","searchKeys":["maxPosition","open fun maxPosition(): Vec3","com.google.ar.sceneform.lullmodel.SubmeshAabb.maxPosition"]},{"name":"open fun maxPosition(obj: Vec3): Vec3","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.maxPosition","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/max-position.html","searchKeys":["maxPosition","open fun maxPosition(obj: Vec3): Vec3","com.google.ar.sceneform.lullmodel.SubmeshAabb.maxPosition"]},{"name":"open fun mergeMaterials(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.mergeMaterials","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/merge-materials.html","searchKeys":["mergeMaterials","open fun mergeMaterials(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.mergeMaterials"]},{"name":"open fun min(): Vec3","description":"com.google.ar.sceneform.lullmodel.AabbDef.min","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/min.html","searchKeys":["min","open fun min(): Vec3","com.google.ar.sceneform.lullmodel.AabbDef.min"]},{"name":"open fun min(lhs: Vector3, rhs: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3.min","location":"sceneview/io.github.sceneview.collision/-vector3/min.html","searchKeys":["min","open fun min(lhs: Vector3, rhs: Vector3): Vector3","io.github.sceneview.collision.Vector3.min"]},{"name":"open fun min(obj: Vec3): Vec3","description":"com.google.ar.sceneform.lullmodel.AabbDef.min","location":"sceneview/com.google.ar.sceneform.lullmodel/-aabb-def/min.html","searchKeys":["min","open fun min(obj: Vec3): Vec3","com.google.ar.sceneform.lullmodel.AabbDef.min"]},{"name":"open fun minFilter(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.minFilter","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/min-filter.html","searchKeys":["minFilter","open fun minFilter(): Int","com.google.ar.sceneform.lullmodel.TextureDef.minFilter"]},{"name":"open fun minPosition(): Vec3","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.minPosition","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/min-position.html","searchKeys":["minPosition","open fun minPosition(): Vec3","com.google.ar.sceneform.lullmodel.SubmeshAabb.minPosition"]},{"name":"open fun minPosition(obj: Vec3): Vec3","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.minPosition","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/min-position.html","searchKeys":["minPosition","open fun minPosition(obj: Vec3): Vec3","com.google.ar.sceneform.lullmodel.SubmeshAabb.minPosition"]},{"name":"open fun multiply(lhs: Matrix, rhs: Matrix, dest: Matrix)","description":"io.github.sceneview.collision.Matrix.multiply","location":"sceneview/io.github.sceneview.collision/-matrix/multiply.html","searchKeys":["multiply","open fun multiply(lhs: Matrix, rhs: Matrix, dest: Matrix)","io.github.sceneview.collision.Matrix.multiply"]},{"name":"open fun multiply(lhs: Quaternion, rhs: Quaternion): Quaternion","description":"io.github.sceneview.collision.Quaternion.multiply","location":"sceneview/io.github.sceneview.collision/-quaternion/multiply.html","searchKeys":["multiply","open fun multiply(lhs: Quaternion, rhs: Quaternion): Quaternion","io.github.sceneview.collision.Quaternion.multiply"]},{"name":"open fun multiply(lhs: Vector3, rhs: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3.multiply","location":"sceneview/io.github.sceneview.collision/-vector3/multiply.html","searchKeys":["multiply","open fun multiply(lhs: Vector3, rhs: Vector3): Vector3","io.github.sceneview.collision.Vector3.multiply"]},{"name":"open fun name(): Long","description":"com.google.ar.sceneform.lullmodel.BlendShape.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/name.html","searchKeys":["name","open fun name(): Long","com.google.ar.sceneform.lullmodel.BlendShape.name"]},{"name":"open fun name(): String","description":"com.google.ar.sceneform.lullmodel.MaterialDef.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/name.html","searchKeys":["name","open fun name(): String","com.google.ar.sceneform.lullmodel.MaterialDef.name"]},{"name":"open fun name(): String","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/name.html","searchKeys":["name","open fun name(): String","com.google.ar.sceneform.lullmodel.MaterialTextureDef.name"]},{"name":"open fun name(): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/name.html","searchKeys":["name","open fun name(): String","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.name"]},{"name":"open fun name(): String","description":"com.google.ar.sceneform.lullmodel.TextureDef.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/name.html","searchKeys":["name","open fun name(): String","com.google.ar.sceneform.lullmodel.TextureDef.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.AxisSystem.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.AxisSystem.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.DeviceType.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.DeviceType.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.LayoutFillOrder.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-horizontal-alignment/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-vertical-alignment/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.OptionalBool.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-optional-bool/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.OptionalBool.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.TextureFiltering.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.TextureTargetType.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-target-type/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.TextureTargetType.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.TextureWrap.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.TextureWrap.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.VariantDef.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.VariantDef.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.VertexAttributeType.name"]},{"name":"open fun name(e: Int): String","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.name","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/name.html","searchKeys":["name","open fun name(e: Int): String","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.name"]},{"name":"open fun nameAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.MaterialDef.nameAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/name-as-byte-buffer.html","searchKeys":["nameAsByteBuffer","open fun nameAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.MaterialDef.nameAsByteBuffer"]},{"name":"open fun nameAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.nameAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/name-as-byte-buffer.html","searchKeys":["nameAsByteBuffer","open fun nameAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.MaterialTextureDef.nameAsByteBuffer"]},{"name":"open fun nameAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.nameAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/name-as-byte-buffer.html","searchKeys":["nameAsByteBuffer","open fun nameAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.nameAsByteBuffer"]},{"name":"open fun nameAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.TextureDef.nameAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/name-as-byte-buffer.html","searchKeys":["nameAsByteBuffer","open fun nameAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.TextureDef.nameAsByteBuffer"]},{"name":"open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.MaterialDef.nameInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/name-in-byte-buffer.html","searchKeys":["nameInByteBuffer","open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.MaterialDef.nameInByteBuffer"]},{"name":"open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.nameInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/name-in-byte-buffer.html","searchKeys":["nameInByteBuffer","open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.MaterialTextureDef.nameInByteBuffer"]},{"name":"open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.nameInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/name-in-byte-buffer.html","searchKeys":["nameInByteBuffer","open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.nameInByteBuffer"]},{"name":"open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.TextureDef.nameInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/name-in-byte-buffer.html","searchKeys":["nameInByteBuffer","open fun nameInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.TextureDef.nameInByteBuffer"]},{"name":"open fun nameOverride(): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.nameOverride","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/name-override.html","searchKeys":["nameOverride","open fun nameOverride(): String","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.nameOverride"]},{"name":"open fun nameOverrideAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.nameOverrideAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/name-override-as-byte-buffer.html","searchKeys":["nameOverrideAsByteBuffer","open fun nameOverrideAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.nameOverrideAsByteBuffer"]},{"name":"open fun nameOverrideInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.nameOverrideInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/name-override-in-byte-buffer.html","searchKeys":["nameOverrideInByteBuffer","open fun nameOverrideInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.nameOverrideInByteBuffer"]},{"name":"open fun negated(): Quaternion","description":"io.github.sceneview.collision.Quaternion.negated","location":"sceneview/io.github.sceneview.collision/-quaternion/negated.html","searchKeys":["negated","open fun negated(): Quaternion","io.github.sceneview.collision.Quaternion.negated"]},{"name":"open fun negated(): Vector3","description":"io.github.sceneview.collision.Vector3.negated","location":"sceneview/io.github.sceneview.collision/-vector3/negated.html","searchKeys":["negated","open fun negated(): Vector3","io.github.sceneview.collision.Vector3.negated"]},{"name":"open fun newByteBuffer(capacity: Int): ByteBuffer","description":"com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory.newByteBuffer","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-heap-byte-buffer-factory/new-byte-buffer.html","searchKeys":["newByteBuffer","open fun newByteBuffer(capacity: Int): ByteBuffer","com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory.newByteBuffer"]},{"name":"open fun normalize(): Boolean","description":"io.github.sceneview.collision.Quaternion.normalize","location":"sceneview/io.github.sceneview.collision/-quaternion/normalize.html","searchKeys":["normalize","open fun normalize(): Boolean","io.github.sceneview.collision.Quaternion.normalize"]},{"name":"open fun normalized(): Quaternion","description":"io.github.sceneview.collision.Quaternion.normalized","location":"sceneview/io.github.sceneview.collision/-quaternion/normalized.html","searchKeys":["normalized","open fun normalized(): Quaternion","io.github.sceneview.collision.Quaternion.normalized"]},{"name":"open fun normalized(): Vector3","description":"io.github.sceneview.collision.Vector3.normalized","location":"sceneview/io.github.sceneview.collision/-vector3/normalized.html","searchKeys":["normalized","open fun normalized(): Vector3","io.github.sceneview.collision.Vector3.normalized"]},{"name":"open fun notNested()","description":"com.google.flatbuffers.FlatBufferBuilder.notNested","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/not-nested.html","searchKeys":["notNested","open fun notNested()","com.google.flatbuffers.FlatBufferBuilder.notNested"]},{"name":"open fun numSamples(): Int","description":"com.google.ar.sceneform.lullmodel.ArcDef.numSamples","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/num-samples.html","searchKeys":["numSamples","open fun numSamples(): Int","com.google.ar.sceneform.lullmodel.ArcDef.numSamples"]},{"name":"open fun numVertices(): Long","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.numVertices","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/num-vertices.html","searchKeys":["numVertices","open fun numVertices(): Long","com.google.ar.sceneform.lullmodel.ModelInstanceDef.numVertices"]},{"name":"open fun ofAllAnimations(model: AnimatableModel): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAllAnimations","location":"sceneview/io.github.sceneview.animation/-model-animator/of-all-animations.html","searchKeys":["ofAllAnimations","open fun ofAllAnimations(model: AnimatableModel): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAllAnimations"]},{"name":"open fun ofAnimation(animation: ModelAnimation): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimation","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation.html","searchKeys":["ofAnimation","open fun ofAnimation(animation: ModelAnimation): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimation"]},{"name":"open fun ofAnimation(model: AnimatableModel, animationIndexes: Array<Int>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimation","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation.html","searchKeys":["ofAnimation","open fun ofAnimation(model: AnimatableModel, animationIndexes: Array<Int>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimation"]},{"name":"open fun ofAnimation(model: AnimatableModel, animationNames: Array<String>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimation","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation.html","searchKeys":["ofAnimation","open fun ofAnimation(model: AnimatableModel, animationNames: Array<String>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimation"]},{"name":"open fun ofAnimation(model: AnimatableModel, animations: Array<ModelAnimation>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimation","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation.html","searchKeys":["ofAnimation","open fun ofAnimation(model: AnimatableModel, animations: Array<ModelAnimation>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimation"]},{"name":"open fun ofAnimationFraction(animation: ModelAnimation, fractions: Array<Float>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFraction","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation-fraction.html","searchKeys":["ofAnimationFraction","open fun ofAnimationFraction(animation: ModelAnimation, fractions: Array<Float>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFraction"]},{"name":"open fun ofAnimationFraction(animationName: String, fractions: Array<Float>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFraction","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation-fraction.html","searchKeys":["ofAnimationFraction","open fun ofAnimationFraction(animationName: String, fractions: Array<Float>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFraction"]},{"name":"open fun ofAnimationFraction(model: AnimatableModel, animation: ModelAnimation, fractions: Array<Float>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationFraction","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-fraction.html","searchKeys":["ofAnimationFraction","open fun ofAnimationFraction(model: AnimatableModel, animation: ModelAnimation, fractions: Array<Float>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationFraction"]},{"name":"open fun ofAnimationFraction(model: AnimatableModel, animationIndex: Int, fractions: Array<Float>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationFraction","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-fraction.html","searchKeys":["ofAnimationFraction","open fun ofAnimationFraction(model: AnimatableModel, animationIndex: Int, fractions: Array<Float>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationFraction"]},{"name":"open fun ofAnimationFraction(model: AnimatableModel, animationName: String, fractions: Array<Float>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationFraction","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-fraction.html","searchKeys":["ofAnimationFraction","open fun ofAnimationFraction(model: AnimatableModel, animationName: String, fractions: Array<Float>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationFraction"]},{"name":"open fun ofAnimationFrame(animation: ModelAnimation, frames: Array<Int>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFrame","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation-frame.html","searchKeys":["ofAnimationFrame","open fun ofAnimationFrame(animation: ModelAnimation, frames: Array<Int>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFrame"]},{"name":"open fun ofAnimationFrame(animationName: String, frames: Array<Int>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFrame","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation-frame.html","searchKeys":["ofAnimationFrame","open fun ofAnimationFrame(animationName: String, frames: Array<Int>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationFrame"]},{"name":"open fun ofAnimationFrame(model: AnimatableModel, animation: ModelAnimation, frames: Array<Int>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationFrame","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-frame.html","searchKeys":["ofAnimationFrame","open fun ofAnimationFrame(model: AnimatableModel, animation: ModelAnimation, frames: Array<Int>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationFrame"]},{"name":"open fun ofAnimationFrame(model: AnimatableModel, animationIndex: Int, frames: Array<Int>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationFrame","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-frame.html","searchKeys":["ofAnimationFrame","open fun ofAnimationFrame(model: AnimatableModel, animationIndex: Int, frames: Array<Int>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationFrame"]},{"name":"open fun ofAnimationFrame(model: AnimatableModel, animationName: String, frames: Array<Int>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationFrame","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-frame.html","searchKeys":["ofAnimationFrame","open fun ofAnimationFrame(model: AnimatableModel, animationName: String, frames: Array<Int>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationFrame"]},{"name":"open fun ofAnimationTime(animation: ModelAnimation, times: Array<Float>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationTime","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation-time.html","searchKeys":["ofAnimationTime","open fun ofAnimationTime(animation: ModelAnimation, times: Array<Float>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationTime"]},{"name":"open fun ofAnimationTime(animationName: String, times: Array<Float>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationTime","location":"sceneview/io.github.sceneview.animation/-model-animator/-property-values-holder/of-animation-time.html","searchKeys":["ofAnimationTime","open fun ofAnimationTime(animationName: String, times: Array<Float>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimator.PropertyValuesHolder.ofAnimationTime"]},{"name":"open fun ofAnimationTime(model: AnimatableModel, animation: ModelAnimation, times: Array<Float>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationTime","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-time.html","searchKeys":["ofAnimationTime","open fun ofAnimationTime(model: AnimatableModel, animation: ModelAnimation, times: Array<Float>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationTime"]},{"name":"open fun ofAnimationTime(model: AnimatableModel, animationIndex: Int, times: Array<Float>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationTime","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-time.html","searchKeys":["ofAnimationTime","open fun ofAnimationTime(model: AnimatableModel, animationIndex: Int, times: Array<Float>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationTime"]},{"name":"open fun ofAnimationTime(model: AnimatableModel, animationName: String, times: Array<Float>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofAnimationTime","location":"sceneview/io.github.sceneview.animation/-model-animator/of-animation-time.html","searchKeys":["ofAnimationTime","open fun ofAnimationTime(model: AnimatableModel, animationName: String, times: Array<Float>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofAnimationTime"]},{"name":"open fun ofFraction(fractions: Array<Float>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.ofFraction","location":"sceneview/io.github.sceneview.animation/-model-animation/-property-values-holder/of-fraction.html","searchKeys":["ofFraction","open fun ofFraction(fractions: Array<Float>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.ofFraction"]},{"name":"open fun ofFrame(frames: Array<Int>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.ofFrame","location":"sceneview/io.github.sceneview.animation/-model-animation/-property-values-holder/of-frame.html","searchKeys":["ofFrame","open fun ofFrame(frames: Array<Int>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.ofFrame"]},{"name":"open fun ofMultipleAnimations(model: AnimatableModel, animationNames: Array<String>): List<ObjectAnimator>","description":"io.github.sceneview.animation.ModelAnimator.ofMultipleAnimations","location":"sceneview/io.github.sceneview.animation/-model-animator/of-multiple-animations.html","searchKeys":["ofMultipleAnimations","open fun ofMultipleAnimations(model: AnimatableModel, animationNames: Array<String>): List<ObjectAnimator>","io.github.sceneview.animation.ModelAnimator.ofMultipleAnimations"]},{"name":"open fun ofPropertyValuesHolder(model: AnimatableModel, values: Array<PropertyValuesHolder>): ObjectAnimator","description":"io.github.sceneview.animation.ModelAnimator.ofPropertyValuesHolder","location":"sceneview/io.github.sceneview.animation/-model-animator/of-property-values-holder.html","searchKeys":["ofPropertyValuesHolder","open fun ofPropertyValuesHolder(model: AnimatableModel, values: Array<PropertyValuesHolder>): ObjectAnimator","io.github.sceneview.animation.ModelAnimator.ofPropertyValuesHolder"]},{"name":"open fun ofTime(times: Array<Float>): PropertyValuesHolder","description":"io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.ofTime","location":"sceneview/io.github.sceneview.animation/-model-animation/-property-values-holder/of-time.html","searchKeys":["ofTime","open fun ofTime(times: Array<Float>): PropertyValuesHolder","io.github.sceneview.animation.ModelAnimation.PropertyValuesHolder.ofTime"]},{"name":"open fun offset(): Int","description":"com.google.flatbuffers.FlatBufferBuilder.offset","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/offset.html","searchKeys":["offset","open fun offset(): Int","com.google.flatbuffers.FlatBufferBuilder.offset"]},{"name":"open fun onAttachedToWindow()","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.onAttachedToWindow","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/on-attached-to-window.html","searchKeys":["onAttachedToWindow","open fun onAttachedToWindow()","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.onAttachedToWindow"]},{"name":"open fun onError(exception: Exception)","description":"io.github.sceneview.node.ViewNode.onError","location":"sceneview/io.github.sceneview.node/-view-node/on-error.html","searchKeys":["onError","open fun onError(exception: Exception)","io.github.sceneview.node.ViewNode.onError"]},{"name":"open fun onFrame(frameTimeNanos: Long)","description":"io.github.sceneview.node.Node.onFrame","location":"sceneview/io.github.sceneview.node/-node/on-frame.html","searchKeys":["onFrame","open fun onFrame(frameTimeNanos: Long)","io.github.sceneview.node.Node.onFrame"]},{"name":"open fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.onLayout","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/on-layout.html","searchKeys":["onLayout","open fun onLayout(changed: Boolean, left: Int, top: Int, right: Int, bottom: Int)","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.onLayout"]},{"name":"open fun onModelAnimationChanged(animation: ModelAnimation)","description":"io.github.sceneview.animation.AnimatableModel.onModelAnimationChanged","location":"sceneview/io.github.sceneview.animation/-animatable-model/on-model-animation-changed.html","searchKeys":["onModelAnimationChanged","open fun onModelAnimationChanged(animation: ModelAnimation)","io.github.sceneview.animation.AnimatableModel.onModelAnimationChanged"]},{"name":"open fun onMove(detector: MoveGestureDetector, e: MotionEvent, worldPosition: Position): Boolean","description":"io.github.sceneview.node.Node.onMove","location":"sceneview/io.github.sceneview.node/-node/on-move.html","searchKeys":["onMove","open fun onMove(detector: MoveGestureDetector, e: MotionEvent, worldPosition: Position): Boolean","io.github.sceneview.node.Node.onMove"]},{"name":"open fun onPause()","description":"com.google.ar.sceneform.rendering.ViewAttachmentManager.onPause","location":"sceneview/com.google.ar.sceneform.rendering/-view-attachment-manager/on-pause.html","searchKeys":["onPause","open fun onPause()","com.google.ar.sceneform.rendering.ViewAttachmentManager.onPause"]},{"name":"open fun onRenderableChanged()","description":"io.github.sceneview.node.ViewNode.onRenderableChanged","location":"sceneview/io.github.sceneview.node/-view-node/on-renderable-changed.html","searchKeys":["onRenderableChanged","open fun onRenderableChanged()","io.github.sceneview.node.ViewNode.onRenderableChanged"]},{"name":"open fun onResume()","description":"com.google.ar.sceneform.rendering.ViewAttachmentManager.onResume","location":"sceneview/com.google.ar.sceneform.rendering/-view-attachment-manager/on-resume.html","searchKeys":["onResume","open fun onResume()","com.google.ar.sceneform.rendering.ViewAttachmentManager.onResume"]},{"name":"open fun onRotate(detector: RotateGestureDetector, e: MotionEvent, rotationDelta: Quaternion): Boolean","description":"io.github.sceneview.node.Node.onRotate","location":"sceneview/io.github.sceneview.node/-node/on-rotate.html","searchKeys":["onRotate","open fun onRotate(detector: RotateGestureDetector, e: MotionEvent, rotationDelta: Quaternion): Boolean","io.github.sceneview.node.Node.onRotate"]},{"name":"open fun onScale(detector: ScaleGestureDetector, e: MotionEvent, scaleFactor: Float): Boolean","description":"io.github.sceneview.node.Node.onScale","location":"sceneview/io.github.sceneview.node/-node/on-scale.html","searchKeys":["onScale","open fun onScale(detector: ScaleGestureDetector, e: MotionEvent, scaleFactor: Float): Boolean","io.github.sceneview.node.Node.onScale"]},{"name":"open fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","description":"com.google.ar.sceneform.rendering.RenderViewToExternalTexture.onSizeChanged","location":"sceneview/com.google.ar.sceneform.rendering/-render-view-to-external-texture/on-size-changed.html","searchKeys":["onSizeChanged","open fun onSizeChanged(width: Int, height: Int, oldWidth: Int, oldHeight: Int)","com.google.ar.sceneform.rendering.RenderViewToExternalTexture.onSizeChanged"]},{"name":"open fun onTransformChanged()","description":"io.github.sceneview.node.Node.onTransformChanged","location":"sceneview/io.github.sceneview.node/-node/on-transform-changed.html","searchKeys":["onTransformChanged","open fun onTransformChanged()","io.github.sceneview.node.Node.onTransformChanged"]},{"name":"open fun onViewLoaded(renderableInstance: RenderableInstance, view: View)","description":"io.github.sceneview.node.ViewNode.onViewLoaded","location":"sceneview/io.github.sceneview.node/-view-node/on-view-loaded.html","searchKeys":["onViewLoaded","open fun onViewLoaded(renderableInstance: RenderableInstance, view: View)","io.github.sceneview.node.ViewNode.onViewLoaded"]},{"name":"open fun onWorldTransformChanged()","description":"io.github.sceneview.node.Node.onWorldTransformChanged","location":"sceneview/io.github.sceneview.node/-node/on-world-transform-changed.html","searchKeys":["onWorldTransformChanged","open fun onWorldTransformChanged()","io.github.sceneview.node.Node.onWorldTransformChanged"]},{"name":"open fun one(): Vector3","description":"io.github.sceneview.collision.Vector3.one","location":"sceneview/io.github.sceneview.collision/-vector3/one.html","searchKeys":["one","open fun one(): Vector3","io.github.sceneview.collision.Vector3.one"]},{"name":"open fun outerRadius(): Float","description":"com.google.ar.sceneform.lullmodel.ArcDef.outerRadius","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/outer-radius.html","searchKeys":["outerRadius","open fun outerRadius(): Float","com.google.ar.sceneform.lullmodel.ArcDef.outerRadius"]},{"name":"open fun pad(byte_size: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.pad","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/pad.html","searchKeys":["pad","open fun pad(byte_size: Int)","com.google.flatbuffers.FlatBufferBuilder.pad"]},{"name":"open fun premultiplyAlpha(): Boolean","description":"com.google.ar.sceneform.lullmodel.TextureDef.premultiplyAlpha","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/premultiply-alpha.html","searchKeys":["premultiplyAlpha","open fun premultiplyAlpha(): Boolean","com.google.ar.sceneform.lullmodel.TextureDef.premultiplyAlpha"]},{"name":"open fun prep(size: Int, additional_bytes: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.prep","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/prep.html","searchKeys":["prep","open fun prep(size: Int, additional_bytes: Int)","com.google.flatbuffers.FlatBufferBuilder.prep"]},{"name":"open fun prepareForDraw(engine: Engine)","description":"com.google.ar.sceneform.rendering.Renderable.prepareForDraw","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/prepare-for-draw.html","searchKeys":["prepareForDraw","open fun prepareForDraw(engine: Engine)","com.google.ar.sceneform.rendering.Renderable.prepareForDraw"]},{"name":"open fun prepareForDraw(engine: Engine)","description":"com.google.ar.sceneform.rendering.RenderableInstance.prepareForDraw","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/prepare-for-draw.html","searchKeys":["prepareForDraw","open fun prepareForDraw(engine: Engine)","com.google.ar.sceneform.rendering.RenderableInstance.prepareForDraw"]},{"name":"open fun prepareForDraw(engine: Engine)","description":"com.google.ar.sceneform.rendering.ViewRenderable.prepareForDraw","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/prepare-for-draw.html","searchKeys":["prepareForDraw","open fun prepareForDraw(engine: Engine)","com.google.ar.sceneform.rendering.ViewRenderable.prepareForDraw"]},{"name":"open fun properties(): VariantMapDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.properties","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/properties.html","searchKeys":["properties","open fun properties(): VariantMapDef","com.google.ar.sceneform.lullmodel.MaterialDef.properties"]},{"name":"open fun properties(obj: VariantMapDef): VariantMapDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.properties","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/properties.html","searchKeys":["properties","open fun properties(obj: VariantMapDef): VariantMapDef","com.google.ar.sceneform.lullmodel.MaterialDef.properties"]},{"name":"open fun putBoolean(x: Boolean)","description":"com.google.flatbuffers.FlatBufferBuilder.putBoolean","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-boolean.html","searchKeys":["putBoolean","open fun putBoolean(x: Boolean)","com.google.flatbuffers.FlatBufferBuilder.putBoolean"]},{"name":"open fun putByte(x: Byte)","description":"com.google.flatbuffers.FlatBufferBuilder.putByte","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-byte.html","searchKeys":["putByte","open fun putByte(x: Byte)","com.google.flatbuffers.FlatBufferBuilder.putByte"]},{"name":"open fun putDouble(x: Double)","description":"com.google.flatbuffers.FlatBufferBuilder.putDouble","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-double.html","searchKeys":["putDouble","open fun putDouble(x: Double)","com.google.flatbuffers.FlatBufferBuilder.putDouble"]},{"name":"open fun putFloat(x: Float)","description":"com.google.flatbuffers.FlatBufferBuilder.putFloat","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-float.html","searchKeys":["putFloat","open fun putFloat(x: Float)","com.google.flatbuffers.FlatBufferBuilder.putFloat"]},{"name":"open fun putInt(x: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.putInt","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-int.html","searchKeys":["putInt","open fun putInt(x: Int)","com.google.flatbuffers.FlatBufferBuilder.putInt"]},{"name":"open fun putLong(x: Long)","description":"com.google.flatbuffers.FlatBufferBuilder.putLong","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-long.html","searchKeys":["putLong","open fun putLong(x: Long)","com.google.flatbuffers.FlatBufferBuilder.putLong"]},{"name":"open fun putShort(x: Short)","description":"com.google.flatbuffers.FlatBufferBuilder.putShort","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/put-short.html","searchKeys":["putShort","open fun putShort(x: Short)","com.google.flatbuffers.FlatBufferBuilder.putShort"]},{"name":"open fun r(): Float","description":"com.google.ar.sceneform.lullmodel.Color.r","location":"sceneview/com.google.ar.sceneform.lullmodel/-color/r.html","searchKeys":["r","open fun r(): Float","com.google.ar.sceneform.lullmodel.Color.r"]},{"name":"open fun ranges(j: Int): ModelIndexRange","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.ranges","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/ranges.html","searchKeys":["ranges","open fun ranges(j: Int): ModelIndexRange","com.google.ar.sceneform.lullmodel.ModelInstanceDef.ranges"]},{"name":"open fun ranges(obj: ModelIndexRange, j: Int): ModelIndexRange","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.ranges","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/ranges.html","searchKeys":["ranges","open fun ranges(obj: ModelIndexRange, j: Int): ModelIndexRange","com.google.ar.sceneform.lullmodel.ModelInstanceDef.ranges"]},{"name":"open fun rangesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.rangesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/ranges-length.html","searchKeys":["rangesLength","open fun rangesLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.rangesLength"]},{"name":"open fun rawResourceNameToIdentifier(context: Context, name: String): Int","description":"com.google.ar.sceneform.utilities.LoadHelper.rawResourceNameToIdentifier","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/raw-resource-name-to-identifier.html","searchKeys":["rawResourceNameToIdentifier","open fun rawResourceNameToIdentifier(context: Context, name: String): Int","com.google.ar.sceneform.utilities.LoadHelper.rawResourceNameToIdentifier"]},{"name":"open fun rayIntersection(ray: Ray, result: RayHit): Boolean","description":"io.github.sceneview.collision.Box.rayIntersection","location":"sceneview/io.github.sceneview.collision/-box/ray-intersection.html","searchKeys":["rayIntersection","open fun rayIntersection(ray: Ray, result: RayHit): Boolean","io.github.sceneview.collision.Box.rayIntersection"]},{"name":"open fun rayIntersection(ray: Ray, result: RayHit): Boolean","description":"io.github.sceneview.collision.Plane.rayIntersection","location":"sceneview/io.github.sceneview.collision/-plane/ray-intersection.html","searchKeys":["rayIntersection","open fun rayIntersection(ray: Ray, result: RayHit): Boolean","io.github.sceneview.collision.Plane.rayIntersection"]},{"name":"open fun rayIntersection(ray: Ray, result: RayHit): Boolean","description":"io.github.sceneview.collision.Sphere.rayIntersection","location":"sceneview/io.github.sceneview.collision/-sphere/ray-intersection.html","searchKeys":["rayIntersection","open fun rayIntersection(ray: Ray, result: RayHit): Boolean","io.github.sceneview.collision.Sphere.rayIntersection"]},{"name":"open fun readCollisionGeometry(rcb: SceneformBundleDef): CollisionShape","description":"com.google.ar.sceneform.rendering.SceneformBundle.readCollisionGeometry","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/read-collision-geometry.html","searchKeys":["readCollisionGeometry","open fun readCollisionGeometry(rcb: SceneformBundleDef): CollisionShape","com.google.ar.sceneform.rendering.SceneformBundle.readCollisionGeometry"]},{"name":"open fun readFile(assets: AssetManager, path: String): ByteBuffer","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.readFile","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/read-file.html","searchKeys":["readFile","open fun readFile(assets: AssetManager, path: String): ByteBuffer","com.google.ar.sceneform.utilities.SceneformBufferUtils.readFile"]},{"name":"open fun readStream(inputStream: InputStream): ByteBuffer","description":"com.google.ar.sceneform.utilities.SceneformBufferUtils.readStream","location":"sceneview/com.google.ar.sceneform.utilities/-sceneform-buffer-utils/read-stream.html","searchKeys":["readStream","open fun readStream(inputStream: InputStream): ByteBuffer","com.google.ar.sceneform.utilities.SceneformBufferUtils.readStream"]},{"name":"open fun recenter(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.recenter","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/recenter.html","searchKeys":["recenter","open fun recenter(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.recenter"]},{"name":"open fun reclaimReleasedResources(): Long","description":"com.google.ar.sceneform.rendering.ResourceManager.reclaimReleasedResources","location":"sceneview/com.google.ar.sceneform.rendering/-resource-manager/reclaim-released-resources.html","searchKeys":["reclaimReleasedResources","open fun reclaimReleasedResources(): Long","com.google.ar.sceneform.rendering.ResourceManager.reclaimReleasedResources"]},{"name":"open fun reclaimReleasedResources(): Long","description":"com.google.ar.sceneform.resources.ResourceRegistry.reclaimReleasedResources","location":"sceneview/com.google.ar.sceneform.resources/-resource-registry/reclaim-released-resources.html","searchKeys":["reclaimReleasedResources","open fun reclaimReleasedResources(): Long","com.google.ar.sceneform.resources.ResourceRegistry.reclaimReleasedResources"]},{"name":"open fun register(id: Any, futureResource: CompletableFuture<T>)","description":"com.google.ar.sceneform.resources.ResourceRegistry.register","location":"sceneview/com.google.ar.sceneform.resources/-resource-registry/register.html","searchKeys":["register","open fun register(id: Any, futureResource: CompletableFuture<T>)","com.google.ar.sceneform.resources.ResourceRegistry.register"]},{"name":"open fun releaseByteBuffer(bb: ByteBuffer)","description":"com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory.releaseByteBuffer","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-byte-buffer-factory/release-byte-buffer.html","searchKeys":["releaseByteBuffer","open fun releaseByteBuffer(bb: ByteBuffer)","com.google.flatbuffers.FlatBufferBuilder.ByteBufferFactory.releaseByteBuffer"]},{"name":"open fun removeView(view: View)","description":"com.google.ar.sceneform.rendering.ViewAttachmentManager.removeView","location":"sceneview/com.google.ar.sceneform.rendering/-view-attachment-manager/remove-view.html","searchKeys":["removeView","open fun removeView(view: View)","com.google.ar.sceneform.rendering.ViewAttachmentManager.removeView"]},{"name":"open fun renderables(j: Int): ModelPipelineRenderableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.renderables","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/renderables.html","searchKeys":["renderables","open fun renderables(j: Int): ModelPipelineRenderableDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.renderables"]},{"name":"open fun renderables(obj: ModelPipelineRenderableDef, j: Int): ModelPipelineRenderableDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.renderables","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/renderables.html","searchKeys":["renderables","open fun renderables(obj: ModelPipelineRenderableDef, j: Int): ModelPipelineRenderableDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.renderables"]},{"name":"open fun renderablesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.renderablesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/renderables-length.html","searchKeys":["renderablesLength","open fun renderablesLength(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.renderablesLength"]},{"name":"open fun reportErrorsToStdout(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.reportErrorsToStdout","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/report-errors-to-stdout.html","searchKeys":["reportErrorsToStdout","open fun reportErrorsToStdout(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.reportErrorsToStdout"]},{"name":"open fun required(table: Int, field: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.required","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/required.html","searchKeys":["required","open fun required(table: Int, field: Int)","com.google.flatbuffers.FlatBufferBuilder.required"]},{"name":"open fun reset()","description":"io.github.sceneview.collision.RayHit.reset","location":"sceneview/io.github.sceneview.collision/-ray-hit/reset.html","searchKeys":["reset","open fun reset()","io.github.sceneview.collision.RayHit.reset"]},{"name":"open fun resolveUri(unresolvedUri: Uri, parentUri: Uri): Uri","description":"com.google.ar.sceneform.utilities.LoadHelper.resolveUri","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/resolve-uri.html","searchKeys":["resolveUri","open fun resolveUri(unresolvedUri: Uri, parentUri: Uri): Uri","com.google.ar.sceneform.utilities.LoadHelper.resolveUri"]},{"name":"open fun resourceToUri(context: Context, resID: Int): Uri","description":"com.google.ar.sceneform.utilities.LoadHelper.resourceToUri","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/resource-to-uri.html","searchKeys":["resourceToUri","open fun resourceToUri(context: Context, resID: Int): Uri","com.google.ar.sceneform.utilities.LoadHelper.resourceToUri"]},{"name":"open fun right(): Vector3","description":"io.github.sceneview.collision.Vector3.right","location":"sceneview/io.github.sceneview.collision/-vector3/right.html","searchKeys":["right","open fun right(): Vector3","io.github.sceneview.collision.Vector3.right"]},{"name":"open fun rotateVector(q: Quaternion, src: Vector3): Vector3","description":"io.github.sceneview.collision.Quaternion.rotateVector","location":"sceneview/io.github.sceneview.collision/-quaternion/rotate-vector.html","searchKeys":["rotateVector","open fun rotateVector(q: Quaternion, src: Vector3): Vector3","io.github.sceneview.collision.Quaternion.rotateVector"]},{"name":"open fun rotationBetweenVectors(start: Vector3, end: Vector3): Quaternion","description":"io.github.sceneview.collision.Quaternion.rotationBetweenVectors","location":"sceneview/io.github.sceneview.collision/-quaternion/rotation-between-vectors.html","searchKeys":["rotationBetweenVectors","open fun rotationBetweenVectors(start: Vector3, end: Vector3): Quaternion","io.github.sceneview.collision.Quaternion.rotationBetweenVectors"]},{"name":"open fun scale(): Float","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.scale","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/scale.html","searchKeys":["scale","open fun scale(): Float","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.scale"]},{"name":"open fun scaled(a: Float): Vector3","description":"io.github.sceneview.collision.Vector3.scaled","location":"sceneview/io.github.sceneview.collision/-vector3/scaled.html","searchKeys":["scaled","open fun scaled(a: Float): Vector3","io.github.sceneview.collision.Vector3.scaled"]},{"name":"open fun secondsToMillis(time: Float): Long","description":"io.github.sceneview.animation.ModelAnimation.secondsToMillis","location":"sceneview/io.github.sceneview.animation/-model-animation/seconds-to-millis.html","searchKeys":["secondsToMillis","open fun secondsToMillis(time: Float): Long","io.github.sceneview.animation.ModelAnimation.secondsToMillis"]},{"name":"open fun set(argb: Int)","description":"com.google.ar.sceneform.rendering.Color.set","location":"sceneview/com.google.ar.sceneform.rendering/-color/set.html","searchKeys":["set","open fun set(argb: Int)","com.google.ar.sceneform.rendering.Color.set"]},{"name":"open fun set(axis: Vector3, angle: Float)","description":"io.github.sceneview.collision.Quaternion.set","location":"sceneview/io.github.sceneview.collision/-quaternion/set.html","searchKeys":["set","open fun set(axis: Vector3, angle: Float)","io.github.sceneview.collision.Quaternion.set"]},{"name":"open fun set(color: Color)","description":"com.google.ar.sceneform.rendering.Color.set","location":"sceneview/com.google.ar.sceneform.rendering/-color/set.html","searchKeys":["set","open fun set(color: Color)","com.google.ar.sceneform.rendering.Color.set"]},{"name":"open fun set(data: Array<Float>)","description":"io.github.sceneview.collision.Matrix.set","location":"sceneview/io.github.sceneview.collision/-matrix/set.html","searchKeys":["set","open fun set(data: Array<Float>)","io.github.sceneview.collision.Matrix.set"]},{"name":"open fun set(m: Matrix)","description":"io.github.sceneview.collision.Matrix.set","location":"sceneview/io.github.sceneview.collision/-matrix/set.html","searchKeys":["set","open fun set(m: Matrix)","io.github.sceneview.collision.Matrix.set"]},{"name":"open fun set(other: RayHit)","description":"io.github.sceneview.collision.RayHit.set","location":"sceneview/io.github.sceneview.collision/-ray-hit/set.html","searchKeys":["set","open fun set(other: RayHit)","io.github.sceneview.collision.RayHit.set"]},{"name":"open fun set(q: Quaternion)","description":"io.github.sceneview.collision.Quaternion.set","location":"sceneview/io.github.sceneview.collision/-quaternion/set.html","searchKeys":["set","open fun set(q: Quaternion)","io.github.sceneview.collision.Quaternion.set"]},{"name":"open fun set(qx: Float, qy: Float, qz: Float, qw: Float)","description":"io.github.sceneview.collision.Quaternion.set","location":"sceneview/io.github.sceneview.collision/-quaternion/set.html","searchKeys":["set","open fun set(qx: Float, qy: Float, qz: Float, qw: Float)","io.github.sceneview.collision.Quaternion.set"]},{"name":"open fun set(r: Float, g: Float, b: Float)","description":"com.google.ar.sceneform.rendering.Color.set","location":"sceneview/com.google.ar.sceneform.rendering/-color/set.html","searchKeys":["set","open fun set(r: Float, g: Float, b: Float)","com.google.ar.sceneform.rendering.Color.set"]},{"name":"open fun set(r: Float, g: Float, b: Float, a: Float)","description":"com.google.ar.sceneform.rendering.Color.set","location":"sceneview/com.google.ar.sceneform.rendering/-color/set.html","searchKeys":["set","open fun set(r: Float, g: Float, b: Float, a: Float)","com.google.ar.sceneform.rendering.Color.set"]},{"name":"open fun set(v: Vector3)","description":"io.github.sceneview.collision.Vector3.set","location":"sceneview/io.github.sceneview.collision/-vector3/set.html","searchKeys":["set","open fun set(v: Vector3)","io.github.sceneview.collision.Vector3.set"]},{"name":"open fun set(vx: Float, vy: Float, vz: Float)","description":"io.github.sceneview.collision.Vector3.set","location":"sceneview/io.github.sceneview.collision/-vector3/set.html","searchKeys":["set","open fun set(vx: Float, vy: Float, vz: Float)","io.github.sceneview.collision.Vector3.set"]},{"name":"open fun setAnimationFrameRate(frameRate: Int): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setAnimationFrameRate","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-animation-frame-rate.html","searchKeys":["setAnimationFrameRate","open fun setAnimationFrameRate(frameRate: Int): B","com.google.ar.sceneform.rendering.Renderable.Builder.setAnimationFrameRate"]},{"name":"open fun setAnimationNames(animationNames: List<String>)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setAnimationNames","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-animation-names.html","searchKeys":["setAnimationNames","open fun setAnimationNames(animationNames: List<String>)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setAnimationNames"]},{"name":"open fun setAnimationsFramePosition(framePosition: Int)","description":"io.github.sceneview.animation.AnimatableModel.setAnimationsFramePosition","location":"sceneview/io.github.sceneview.animation/-animatable-model/set-animations-frame-position.html","searchKeys":["setAnimationsFramePosition","open fun setAnimationsFramePosition(framePosition: Int)","io.github.sceneview.animation.AnimatableModel.setAnimationsFramePosition"]},{"name":"open fun setAnimationsTimePosition(timePosition: Float)","description":"io.github.sceneview.animation.AnimatableModel.setAnimationsTimePosition","location":"sceneview/io.github.sceneview.animation/-animatable-model/set-animations-time-position.html","searchKeys":["setAnimationsTimePosition","open fun setAnimationsTimePosition(timePosition: Float)","io.github.sceneview.animation.AnimatableModel.setAnimationsTimePosition"]},{"name":"open fun setAsyncLoadEnabled(asyncLoadEnabled: Boolean): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setAsyncLoadEnabled","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-async-load-enabled.html","searchKeys":["setAsyncLoadEnabled","open fun setAsyncLoadEnabled(asyncLoadEnabled: Boolean): B","com.google.ar.sceneform.rendering.Renderable.Builder.setAsyncLoadEnabled"]},{"name":"open fun setAttachedCollisionSystem(collisionSystem: CollisionSystem)","description":"io.github.sceneview.collision.Collider.setAttachedCollisionSystem","location":"sceneview/io.github.sceneview.collision/-collider/set-attached-collision-system.html","searchKeys":["setAttachedCollisionSystem","open fun setAttachedCollisionSystem(collisionSystem: CollisionSystem)","io.github.sceneview.collision.Collider.setAttachedCollisionSystem"]},{"name":"open fun setBaseColorTexture(texture: Texture)","description":"com.google.ar.sceneform.rendering.Material.setBaseColorTexture","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-base-color-texture.html","searchKeys":["setBaseColorTexture","open fun setBaseColorTexture(texture: Texture)","com.google.ar.sceneform.rendering.Material.setBaseColorTexture"]},{"name":"open fun setBlendOrder(blendOrder: Int)","description":"io.github.sceneview.components.RenderableComponent.setBlendOrder","location":"sceneview/io.github.sceneview.components/-renderable-component/set-blend-order.html","searchKeys":["setBlendOrder","open fun setBlendOrder(blendOrder: Int)","io.github.sceneview.components.RenderableComponent.setBlendOrder"]},{"name":"open fun setBlendOrderAt(index: Int, blendOrder: Int)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setBlendOrderAt","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-blend-order-at.html","searchKeys":["setBlendOrderAt","open fun setBlendOrderAt(index: Int, blendOrder: Int)","com.google.ar.sceneform.rendering.RenderableInstance.setBlendOrderAt"]},{"name":"open fun setBlendOrderAt(primitiveIndex: Int, blendOrder: Int)","description":"io.github.sceneview.components.RenderableComponent.setBlendOrderAt","location":"sceneview/io.github.sceneview.components/-renderable-component/set-blend-order-at.html","searchKeys":["setBlendOrderAt","open fun setBlendOrderAt(primitiveIndex: Int, blendOrder: Int)","io.github.sceneview.components.RenderableComponent.setBlendOrderAt"]},{"name":"open fun setBonesAsMatrices(matrices: Buffer, boneCount: Int, offset: Int)","description":"io.github.sceneview.components.RenderableComponent.setBonesAsMatrices","location":"sceneview/io.github.sceneview.components/-renderable-component/set-bones-as-matrices.html","searchKeys":["setBonesAsMatrices","open fun setBonesAsMatrices(matrices: Buffer, boneCount: Int, offset: Int)","io.github.sceneview.components.RenderableComponent.setBonesAsMatrices"]},{"name":"open fun setBonesAsQuaternions(quaternions: Buffer, boneCount: Int, offset: Int)","description":"io.github.sceneview.components.RenderableComponent.setBonesAsQuaternions","location":"sceneview/io.github.sceneview.components/-renderable-component/set-bones-as-quaternions.html","searchKeys":["setBonesAsQuaternions","open fun setBonesAsQuaternions(quaternions: Buffer, boneCount: Int, offset: Int)","io.github.sceneview.components.RenderableComponent.setBonesAsQuaternions"]},{"name":"open fun setBoolean(name: String, x: Boolean)","description":"com.google.ar.sceneform.rendering.Material.setBoolean","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-boolean.html","searchKeys":["setBoolean","open fun setBoolean(name: String, x: Boolean)","com.google.ar.sceneform.rendering.Material.setBoolean"]},{"name":"open fun setBoolean2(name: String, x: Boolean, y: Boolean)","description":"com.google.ar.sceneform.rendering.Material.setBoolean2","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-boolean2.html","searchKeys":["setBoolean2","open fun setBoolean2(name: String, x: Boolean, y: Boolean)","com.google.ar.sceneform.rendering.Material.setBoolean2"]},{"name":"open fun setBoolean3(name: String, x: Boolean, y: Boolean, z: Boolean)","description":"com.google.ar.sceneform.rendering.Material.setBoolean3","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-boolean3.html","searchKeys":["setBoolean3","open fun setBoolean3(name: String, x: Boolean, y: Boolean, z: Boolean)","com.google.ar.sceneform.rendering.Material.setBoolean3"]},{"name":"open fun setBoolean4(name: String, x: Boolean, y: Boolean, z: Boolean, w: Boolean)","description":"com.google.ar.sceneform.rendering.Material.setBoolean4","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-boolean4.html","searchKeys":["setBoolean4","open fun setBoolean4(name: String, x: Boolean, y: Boolean, z: Boolean, w: Boolean)","com.google.ar.sceneform.rendering.Material.setBoolean4"]},{"name":"open fun setCenterAabb(center: Vector3)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setCenterAabb","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-center-aabb.html","searchKeys":["setCenterAabb","open fun setCenterAabb(center: Vector3)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setCenterAabb"]},{"name":"open fun setCollisionShape(collisionShape: CollisionShape)","description":"com.google.ar.sceneform.rendering.Renderable.setCollisionShape","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/set-collision-shape.html","searchKeys":["setCollisionShape","open fun setCollisionShape(collisionShape: CollisionShape)","com.google.ar.sceneform.rendering.Renderable.setCollisionShape"]},{"name":"open fun setColor(color: Color): Vertex.Builder","description":"com.google.ar.sceneform.rendering.Vertex.Builder.setColor","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/set-color.html","searchKeys":["setColor","open fun setColor(color: Color): Vertex.Builder","com.google.ar.sceneform.rendering.Vertex.Builder.setColor"]},{"name":"open fun setCulling(enabled: Boolean)","description":"io.github.sceneview.components.RenderableComponent.setCulling","location":"sceneview/io.github.sceneview.components/-renderable-component/set-culling.html","searchKeys":["setCulling","open fun setCulling(enabled: Boolean)","io.github.sceneview.components.RenderableComponent.setCulling"]},{"name":"open fun setCulling(isCulling: Boolean)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setCulling","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-culling.html","searchKeys":["setCulling","open fun setCulling(isCulling: Boolean)","com.google.ar.sceneform.rendering.RenderableInstance.setCulling"]},{"name":"open fun setCustomProjection(inProjection: Transform, near: Double = camera.near.toDouble(), far: Double = camera.cullingFar.toDouble(), inProjectionForCulling: Transform = inProjection)","description":"io.github.sceneview.components.CameraComponent.setCustomProjection","location":"sceneview/io.github.sceneview.components/-camera-component/set-custom-projection.html","searchKeys":["setCustomProjection","open fun setCustomProjection(inProjection: Transform, near: Double = camera.near.toDouble(), far: Double = camera.cullingFar.toDouble(), inProjectionForCulling: Transform = inProjection)","io.github.sceneview.components.CameraComponent.setCustomProjection"]},{"name":"open fun setData(textureInternalData: TextureInternalData): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setData","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-data.html","searchKeys":["setData","open fun setData(textureInternalData: TextureInternalData): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setData"]},{"name":"open fun setDefault(instance: Utf8)","description":"com.google.flatbuffers.Utf8.setDefault","location":"sceneview/com.google.flatbuffers/-utf8/set-default.html","searchKeys":["setDefault","open fun setDefault(instance: Utf8)","com.google.flatbuffers.Utf8.setDefault"]},{"name":"open fun setDepthTexture(name: String, depthTexture: Texture)","description":"com.google.ar.sceneform.rendering.Material.setDepthTexture","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-depth-texture.html","searchKeys":["setDepthTexture","open fun setDepthTexture(name: String, depthTexture: Texture)","com.google.ar.sceneform.rendering.Material.setDepthTexture"]},{"name":"open fun setExposure(aperture: Float, shutterSpeed: Float, sensitivity: Float)","description":"io.github.sceneview.components.CameraComponent.setExposure","location":"sceneview/io.github.sceneview.components/-camera-component/set-exposure.html","searchKeys":["setExposure","open fun setExposure(aperture: Float, shutterSpeed: Float, sensitivity: Float)","io.github.sceneview.components.CameraComponent.setExposure"]},{"name":"open fun setExposure(exposure: Float)","description":"io.github.sceneview.components.CameraComponent.setExposure","location":"sceneview/io.github.sceneview.components/-camera-component/set-exposure.html","searchKeys":["setExposure","open fun setExposure(exposure: Float)","io.github.sceneview.components.CameraComponent.setExposure"]},{"name":"open fun setExtentsAabb(halfExtents: Vector3)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setExtentsAabb","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-extents-aabb.html","searchKeys":["setExtentsAabb","open fun setExtentsAabb(halfExtents: Vector3)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setExtentsAabb"]},{"name":"open fun setExternalTexture(name: String, externalTexture: ExternalTexture)","description":"com.google.ar.sceneform.rendering.Material.setExternalTexture","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-external-texture.html","searchKeys":["setExternalTexture","open fun setExternalTexture(name: String, externalTexture: ExternalTexture)","com.google.ar.sceneform.rendering.Material.setExternalTexture"]},{"name":"open fun setFloat(name: String, x: Float)","description":"com.google.ar.sceneform.rendering.Material.setFloat","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float.html","searchKeys":["setFloat","open fun setFloat(name: String, x: Float)","com.google.ar.sceneform.rendering.Material.setFloat"]},{"name":"open fun setFloat2(name: String, x: Float, y: Float)","description":"com.google.ar.sceneform.rendering.Material.setFloat2","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float2.html","searchKeys":["setFloat2","open fun setFloat2(name: String, x: Float, y: Float)","com.google.ar.sceneform.rendering.Material.setFloat2"]},{"name":"open fun setFloat3(name: String, color: Color)","description":"com.google.ar.sceneform.rendering.Material.setFloat3","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float3.html","searchKeys":["setFloat3","open fun setFloat3(name: String, color: Color)","com.google.ar.sceneform.rendering.Material.setFloat3"]},{"name":"open fun setFloat3(name: String, value: Vector3)","description":"com.google.ar.sceneform.rendering.Material.setFloat3","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float3.html","searchKeys":["setFloat3","open fun setFloat3(name: String, value: Vector3)","com.google.ar.sceneform.rendering.Material.setFloat3"]},{"name":"open fun setFloat3(name: String, x: Float, y: Float, z: Float)","description":"com.google.ar.sceneform.rendering.Material.setFloat3","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float3.html","searchKeys":["setFloat3","open fun setFloat3(name: String, x: Float, y: Float, z: Float)","com.google.ar.sceneform.rendering.Material.setFloat3"]},{"name":"open fun setFloat4(name: String, color: Color)","description":"com.google.ar.sceneform.rendering.Material.setFloat4","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float4.html","searchKeys":["setFloat4","open fun setFloat4(name: String, color: Color)","com.google.ar.sceneform.rendering.Material.setFloat4"]},{"name":"open fun setFloat4(name: String, x: Float, y: Float, z: Float, w: Float)","description":"com.google.ar.sceneform.rendering.Material.setFloat4","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-float4.html","searchKeys":["setFloat4","open fun setFloat4(name: String, x: Float, y: Float, z: Float, w: Float)","com.google.ar.sceneform.rendering.Material.setFloat4"]},{"name":"open fun setFractionPosition(fractionPosition: Float)","description":"io.github.sceneview.animation.ModelAnimation.setFractionPosition","location":"sceneview/io.github.sceneview.animation/-model-animation/set-fraction-position.html","searchKeys":["setFractionPosition","open fun setFractionPosition(fractionPosition: Float)","io.github.sceneview.animation.ModelAnimation.setFractionPosition"]},{"name":"open fun setFramePosition(frameNumber: Int)","description":"io.github.sceneview.animation.ModelAnimation.setFramePosition","location":"sceneview/io.github.sceneview.animation/-model-animation/set-frame-position.html","searchKeys":["setFramePosition","open fun setFramePosition(frameNumber: Int)","io.github.sceneview.animation.ModelAnimation.setFramePosition"]},{"name":"open fun setGeometry(geometry: Geometry)","description":"io.github.sceneview.components.RenderableComponent.setGeometry","location":"sceneview/io.github.sceneview.components/-renderable-component/set-geometry.html","searchKeys":["setGeometry","open fun setGeometry(geometry: Geometry)","io.github.sceneview.components.RenderableComponent.setGeometry"]},{"name":"open fun setGeometryAt(primitiveIndex: Int, type: RenderableManager.PrimitiveType, vertices: VertexBuffer, indices: IndexBuffer, offset: Int = 0, count: Int = indices.indexCount)","description":"io.github.sceneview.components.RenderableComponent.setGeometryAt","location":"sceneview/io.github.sceneview.components/-renderable-component/set-geometry-at.html","searchKeys":["setGeometryAt","open fun setGeometryAt(primitiveIndex: Int, type: RenderableManager.PrimitiveType, vertices: VertexBuffer, indices: IndexBuffer, offset: Int = 0, count: Int = indices.indexCount)","io.github.sceneview.components.RenderableComponent.setGeometryAt"]},{"name":"open fun setGlobalBlendOrderEnabled(enabled: Boolean)","description":"io.github.sceneview.components.RenderableComponent.setGlobalBlendOrderEnabled","location":"sceneview/io.github.sceneview.components/-renderable-component/set-global-blend-order-enabled.html","searchKeys":["setGlobalBlendOrderEnabled","open fun setGlobalBlendOrderEnabled(enabled: Boolean)","io.github.sceneview.components.RenderableComponent.setGlobalBlendOrderEnabled"]},{"name":"open fun setGlobalBlendOrderEnabledAt(primitiveIndex: Int, enabled: Boolean)","description":"io.github.sceneview.components.RenderableComponent.setGlobalBlendOrderEnabledAt","location":"sceneview/io.github.sceneview.components/-renderable-component/set-global-blend-order-enabled-at.html","searchKeys":["setGlobalBlendOrderEnabledAt","open fun setGlobalBlendOrderEnabledAt(primitiveIndex: Int, enabled: Boolean)","io.github.sceneview.components.RenderableComponent.setGlobalBlendOrderEnabledAt"]},{"name":"open fun setHorizontalAlignment(horizontalAlignment: ViewRenderable.HorizontalAlignment): ViewRenderable.Builder","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder.setHorizontalAlignment","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/set-horizontal-alignment.html","searchKeys":["setHorizontalAlignment","open fun setHorizontalAlignment(horizontalAlignment: ViewRenderable.HorizontalAlignment): ViewRenderable.Builder","com.google.ar.sceneform.rendering.ViewRenderable.Builder.setHorizontalAlignment"]},{"name":"open fun setIdentity()","description":"io.github.sceneview.collision.Quaternion.setIdentity","location":"sceneview/io.github.sceneview.collision/-quaternion/set-identity.html","searchKeys":["setIdentity","open fun setIdentity()","io.github.sceneview.collision.Quaternion.setIdentity"]},{"name":"open fun setIndexBuffer(indexBuffer: IndexBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setIndexBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-index-buffer.html","searchKeys":["setIndexBuffer","open fun setIndexBuffer(indexBuffer: IndexBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setIndexBuffer"]},{"name":"open fun setInt(name: String, x: Int)","description":"com.google.ar.sceneform.rendering.Material.setInt","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-int.html","searchKeys":["setInt","open fun setInt(name: String, x: Int)","com.google.ar.sceneform.rendering.Material.setInt"]},{"name":"open fun setInt2(name: String, x: Int, y: Int)","description":"com.google.ar.sceneform.rendering.Material.setInt2","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-int2.html","searchKeys":["setInt2","open fun setInt2(name: String, x: Int, y: Int)","com.google.ar.sceneform.rendering.Material.setInt2"]},{"name":"open fun setInt3(name: String, x: Int, y: Int, z: Int)","description":"com.google.ar.sceneform.rendering.Material.setInt3","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-int3.html","searchKeys":["setInt3","open fun setInt3(name: String, x: Int, y: Int, z: Int)","com.google.ar.sceneform.rendering.Material.setInt3"]},{"name":"open fun setInt4(name: String, x: Int, y: Int, z: Int, w: Int)","description":"com.google.ar.sceneform.rendering.Material.setInt4","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-int4.html","searchKeys":["setInt4","open fun setInt4(name: String, x: Int, y: Int, z: Int, w: Int)","com.google.ar.sceneform.rendering.Material.setInt4"]},{"name":"open fun setIntensity(watts: Float, efficiency: Float)","description":"io.github.sceneview.components.LightComponent.setIntensity","location":"sceneview/io.github.sceneview.components/-light-component/set-intensity.html","searchKeys":["setIntensity","open fun setIntensity(watts: Float, efficiency: Float)","io.github.sceneview.components.LightComponent.setIntensity"]},{"name":"open fun setIntensityCandela(intensity: Float)","description":"io.github.sceneview.components.LightComponent.setIntensityCandela","location":"sceneview/io.github.sceneview.components/-light-component/set-intensity-candela.html","searchKeys":["setIntensityCandela","open fun setIntensityCandela(intensity: Float)","io.github.sceneview.components.LightComponent.setIntensityCandela"]},{"name":"open fun setIsFilamentGltf(isFilamentGltf: Boolean): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setIsFilamentGltf","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-is-filament-gltf.html","searchKeys":["setIsFilamentGltf","open fun setIsFilamentGltf(isFilamentGltf: Boolean): B","com.google.ar.sceneform.rendering.Renderable.Builder.setIsFilamentGltf"]},{"name":"open fun setLayerMask(select: Int, value: Int)","description":"io.github.sceneview.components.RenderableComponent.setLayerMask","location":"sceneview/io.github.sceneview.components/-renderable-component/set-layer-mask.html","searchKeys":["setLayerMask","open fun setLayerMask(select: Int, value: Int)","io.github.sceneview.components.RenderableComponent.setLayerMask"]},{"name":"open fun setLayerVisible(visible: Boolean)","description":"io.github.sceneview.components.RenderableComponent.setLayerVisible","location":"sceneview/io.github.sceneview.components/-renderable-component/set-layer-visible.html","searchKeys":["setLayerVisible","open fun setLayerVisible(visible: Boolean)","io.github.sceneview.components.RenderableComponent.setLayerVisible"]},{"name":"open fun setLensProjection(focalLength: Double, aspect: Double, near: Double, far: Double)","description":"io.github.sceneview.components.CameraComponent.setLensProjection","location":"sceneview/io.github.sceneview.components/-camera-component/set-lens-projection.html","searchKeys":["setLensProjection","open fun setLensProjection(focalLength: Double, aspect: Double, near: Double, far: Double)","io.github.sceneview.components.CameraComponent.setLensProjection"]},{"name":"open fun setLightChannel(channel: Int, enable: Boolean)","description":"io.github.sceneview.components.LightComponent.setLightChannel","location":"sceneview/io.github.sceneview.components/-light-component/set-light-channel.html","searchKeys":["setLightChannel","open fun setLightChannel(channel: Int, enable: Boolean)","io.github.sceneview.components.LightComponent.setLightChannel"]},{"name":"open fun setLightChannel(channel: Int, enable: Boolean)","description":"io.github.sceneview.components.RenderableComponent.setLightChannel","location":"sceneview/io.github.sceneview.components/-renderable-component/set-light-channel.html","searchKeys":["setLightChannel","open fun setLightChannel(channel: Int, enable: Boolean)","io.github.sceneview.components.RenderableComponent.setLightChannel"]},{"name":"open fun setMagFilter(magFilter: Texture.Sampler.MagFilter): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setMagFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-mag-filter.html","searchKeys":["setMagFilter","open fun setMagFilter(magFilter: Texture.Sampler.MagFilter): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setMagFilter"]},{"name":"open fun setMaterial(entityIndex: Int, primitiveIndex: Int, material: Material)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-material.html","searchKeys":["setMaterial","open fun setMaterial(entityIndex: Int, primitiveIndex: Int, material: Material)","com.google.ar.sceneform.rendering.RenderableInstance.setMaterial"]},{"name":"open fun setMaterial(material: MaterialInstance)","description":"com.google.ar.sceneform.rendering.Renderable.setMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/set-material.html","searchKeys":["setMaterial","open fun setMaterial(material: MaterialInstance)","com.google.ar.sceneform.rendering.Renderable.setMaterial"]},{"name":"open fun setMaterial(material: MaterialInstance): RenderableDefinition.Submesh.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.setMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/-builder/set-material.html","searchKeys":["setMaterial","open fun setMaterial(material: MaterialInstance): RenderableDefinition.Submesh.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.setMaterial"]},{"name":"open fun setMaterial(primitiveIndex: Int, material: Material)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-material.html","searchKeys":["setMaterial","open fun setMaterial(primitiveIndex: Int, material: Material)","com.google.ar.sceneform.rendering.RenderableInstance.setMaterial"]},{"name":"open fun setMaterial(submeshIndex: Int, material: MaterialInstance)","description":"com.google.ar.sceneform.rendering.Renderable.setMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/set-material.html","searchKeys":["setMaterial","open fun setMaterial(submeshIndex: Int, material: MaterialInstance)","com.google.ar.sceneform.rendering.Renderable.setMaterial"]},{"name":"open fun setMaterialInstance(entityIndex: Int, primitiveIndex: Int, materialInstance: MaterialInstance)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-material-instance.html","searchKeys":["setMaterialInstance","open fun setMaterialInstance(entityIndex: Int, primitiveIndex: Int, materialInstance: MaterialInstance)","com.google.ar.sceneform.rendering.RenderableInstance.setMaterialInstance"]},{"name":"open fun setMaterialInstance(materialInstance: MaterialInstance)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-material-instance.html","searchKeys":["setMaterialInstance","open fun setMaterialInstance(materialInstance: MaterialInstance)","com.google.ar.sceneform.rendering.RenderableInstance.setMaterialInstance"]},{"name":"open fun setMaterialInstance(primitiveIndex: Int, materialInstance: MaterialInstance)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-material-instance.html","searchKeys":["setMaterialInstance","open fun setMaterialInstance(primitiveIndex: Int, materialInstance: MaterialInstance)","com.google.ar.sceneform.rendering.RenderableInstance.setMaterialInstance"]},{"name":"open fun setMaterialInstanceAt(primitiveIndex: Int, materialInstance: MaterialInstance)","description":"io.github.sceneview.components.RenderableComponent.setMaterialInstanceAt","location":"sceneview/io.github.sceneview.components/-renderable-component/set-material-instance-at.html","searchKeys":["setMaterialInstanceAt","open fun setMaterialInstanceAt(primitiveIndex: Int, materialInstance: MaterialInstance)","io.github.sceneview.components.RenderableComponent.setMaterialInstanceAt"]},{"name":"open fun setMaterialInstances(materialInstance: MaterialInstance)","description":"io.github.sceneview.components.RenderableComponent.setMaterialInstances","location":"sceneview/io.github.sceneview.components/-renderable-component/set-material-instances.html","searchKeys":["setMaterialInstances","open fun setMaterialInstances(materialInstance: MaterialInstance)","io.github.sceneview.components.RenderableComponent.setMaterialInstances"]},{"name":"open fun setMinFilter(minFilter: Texture.Sampler.MinFilter): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setMinFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-min-filter.html","searchKeys":["setMinFilter","open fun setMinFilter(minFilter: Texture.Sampler.MinFilter): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setMinFilter"]},{"name":"open fun setMinMagFilter(minMagFilter: Texture.Sampler.MagFilter): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setMinMagFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-min-mag-filter.html","searchKeys":["setMinMagFilter","open fun setMinMagFilter(minMagFilter: Texture.Sampler.MagFilter): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setMinMagFilter"]},{"name":"open fun setModelMatrix(transformManager: TransformManager, transform: Array<Float>)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setModelMatrix","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-model-matrix.html","searchKeys":["setModelMatrix","open fun setModelMatrix(transformManager: TransformManager, transform: Array<Float>)","com.google.ar.sceneform.rendering.RenderableInstance.setModelMatrix"]},{"name":"open fun setMorphTargetBufferAt(level: Int, primitiveIndex: Int, morphTargetBuffer: MorphTargetBuffer)","description":"io.github.sceneview.components.RenderableComponent.setMorphTargetBufferAt","location":"sceneview/io.github.sceneview.components/-renderable-component/set-morph-target-buffer-at.html","searchKeys":["setMorphTargetBufferAt","open fun setMorphTargetBufferAt(level: Int, primitiveIndex: Int, morphTargetBuffer: MorphTargetBuffer)","io.github.sceneview.components.RenderableComponent.setMorphTargetBufferAt"]},{"name":"open fun setMorphTargetBufferAt(level: Int, primitiveIndex: Int, morphTargetBuffer: MorphTargetBuffer, offset: Int, count: Int)","description":"io.github.sceneview.components.RenderableComponent.setMorphTargetBufferAt","location":"sceneview/io.github.sceneview.components/-renderable-component/set-morph-target-buffer-at.html","searchKeys":["setMorphTargetBufferAt","open fun setMorphTargetBufferAt(level: Int, primitiveIndex: Int, morphTargetBuffer: MorphTargetBuffer, offset: Int, count: Int)","io.github.sceneview.components.RenderableComponent.setMorphTargetBufferAt"]},{"name":"open fun setMorphWeights(weights: FloatArray, offset: Int = weights.size)","description":"io.github.sceneview.components.RenderableComponent.setMorphWeights","location":"sceneview/io.github.sceneview.components/-renderable-component/set-morph-weights.html","searchKeys":["setMorphWeights","open fun setMorphWeights(weights: FloatArray, offset: Int = weights.size)","io.github.sceneview.components.RenderableComponent.setMorphWeights"]},{"name":"open fun setName(name: String): RenderableDefinition.Submesh.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.setName","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/-builder/set-name.html","searchKeys":["setName","open fun setName(name: String): RenderableDefinition.Submesh.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.setName"]},{"name":"open fun setNormal(normal: Vector3): Vertex.Builder","description":"com.google.ar.sceneform.rendering.Vertex.Builder.setNormal","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/set-normal.html","searchKeys":["setNormal","open fun setNormal(normal: Vector3): Vertex.Builder","com.google.ar.sceneform.rendering.Vertex.Builder.setNormal"]},{"name":"open fun setPosition(position: Vector3): Vertex.Builder","description":"com.google.ar.sceneform.rendering.Vertex.Builder.setPosition","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/set-position.html","searchKeys":["setPosition","open fun setPosition(position: Vector3): Vertex.Builder","com.google.ar.sceneform.rendering.Vertex.Builder.setPosition"]},{"name":"open fun setPriority(priority: Int)","description":"io.github.sceneview.components.RenderableComponent.setPriority","location":"sceneview/io.github.sceneview.components/-renderable-component/set-priority.html","searchKeys":["setPriority","open fun setPriority(priority: Int)","io.github.sceneview.components.RenderableComponent.setPriority"]},{"name":"open fun setProjection(fovInDegrees: Double, aspect: Double, near: Double, far: Double, direction: Camera.Fov)","description":"io.github.sceneview.components.CameraComponent.setProjection","location":"sceneview/io.github.sceneview.components/-camera-component/set-projection.html","searchKeys":["setProjection","open fun setProjection(fovInDegrees: Double, aspect: Double, near: Double, far: Double, direction: Camera.Fov)","io.github.sceneview.components.CameraComponent.setProjection"]},{"name":"open fun setProjection(projection: Camera.Projection, left: Double, right: Double, bottom: Double, top: Double, near: Double, far: Double)","description":"io.github.sceneview.components.CameraComponent.setProjection","location":"sceneview/io.github.sceneview.components/-camera-component/set-projection.html","searchKeys":["setProjection","open fun setProjection(projection: Camera.Projection, left: Double, right: Double, bottom: Double, top: Double, near: Double, far: Double)","io.github.sceneview.components.CameraComponent.setProjection"]},{"name":"open fun setRawColorBuffer(rawColorBuffer: FloatBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawColorBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-raw-color-buffer.html","searchKeys":["setRawColorBuffer","open fun setRawColorBuffer(rawColorBuffer: FloatBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawColorBuffer"]},{"name":"open fun setRawIndexBuffer(rawIndexBuffer: IntBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawIndexBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-raw-index-buffer.html","searchKeys":["setRawIndexBuffer","open fun setRawIndexBuffer(rawIndexBuffer: IntBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawIndexBuffer"]},{"name":"open fun setRawPositionBuffer(rawPositionBuffer: FloatBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawPositionBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-raw-position-buffer.html","searchKeys":["setRawPositionBuffer","open fun setRawPositionBuffer(rawPositionBuffer: FloatBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawPositionBuffer"]},{"name":"open fun setRawTangentsBuffer(rawTangentsBuffer: FloatBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawTangentsBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-raw-tangents-buffer.html","searchKeys":["setRawTangentsBuffer","open fun setRawTangentsBuffer(rawTangentsBuffer: FloatBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawTangentsBuffer"]},{"name":"open fun setRawUvBuffer(rawUvBuffer: FloatBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawUvBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-raw-uv-buffer.html","searchKeys":["setRawUvBuffer","open fun setRawUvBuffer(rawUvBuffer: FloatBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setRawUvBuffer"]},{"name":"open fun setRegistryId(registryId: Any): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setRegistryId","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-registry-id.html","searchKeys":["setRegistryId","open fun setRegistryId(registryId: Any): B","com.google.ar.sceneform.rendering.Renderable.Builder.setRegistryId"]},{"name":"open fun setRegistryId(registryId: Any): Material.Builder","description":"com.google.ar.sceneform.rendering.Material.Builder.setRegistryId","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/set-registry-id.html","searchKeys":["setRegistryId","open fun setRegistryId(registryId: Any): Material.Builder","com.google.ar.sceneform.rendering.Material.Builder.setRegistryId"]},{"name":"open fun setRegistryId(registryId: Any): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setRegistryId","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-registry-id.html","searchKeys":["setRegistryId","open fun setRegistryId(registryId: Any): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setRegistryId"]},{"name":"open fun setRenderable(renderable: ViewRenderable?): RenderableInstance?","description":"io.github.sceneview.node.ViewNode.setRenderable","location":"sceneview/io.github.sceneview.node/-view-node/set-renderable.html","searchKeys":["setRenderable","open fun setRenderable(renderable: ViewRenderable?): RenderableInstance?","io.github.sceneview.node.ViewNode.setRenderable"]},{"name":"open fun setRotation(rotation: Quaternion)","description":"io.github.sceneview.collision.Box.setRotation","location":"sceneview/io.github.sceneview.collision/-box/set-rotation.html","searchKeys":["setRotation","open fun setRotation(rotation: Quaternion)","io.github.sceneview.collision.Box.setRotation"]},{"name":"open fun setSampler(sampler: Texture.Sampler): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setSampler","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-sampler.html","searchKeys":["setSampler","open fun setSampler(sampler: Texture.Sampler): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setSampler"]},{"name":"open fun setScaling(scaling: Float2)","description":"io.github.sceneview.components.CameraComponent.setScaling","location":"sceneview/io.github.sceneview.components/-camera-component/set-scaling.html","searchKeys":["setScaling","open fun setScaling(scaling: Float2)","io.github.sceneview.components.CameraComponent.setScaling"]},{"name":"open fun setScreenSpaceContactShadows(enabled: Boolean)","description":"io.github.sceneview.components.RenderableComponent.setScreenSpaceContactShadows","location":"sceneview/io.github.sceneview.components/-renderable-component/set-screen-space-contact-shadows.html","searchKeys":["setScreenSpaceContactShadows","open fun setScreenSpaceContactShadows(enabled: Boolean)","io.github.sceneview.components.RenderableComponent.setScreenSpaceContactShadows"]},{"name":"open fun setShape(localCollisionShape: CollisionShape)","description":"io.github.sceneview.collision.Collider.setShape","location":"sceneview/io.github.sceneview.collision/-collider/set-shape.html","searchKeys":["setShape","open fun setShape(localCollisionShape: CollisionShape)","io.github.sceneview.collision.Collider.setShape"]},{"name":"open fun setShift(xShift: Double, yShift: Double)","description":"io.github.sceneview.components.CameraComponent.setShift","location":"sceneview/io.github.sceneview.components/-camera-component/set-shift.html","searchKeys":["setShift","open fun setShift(xShift: Double, yShift: Double)","io.github.sceneview.components.CameraComponent.setShift"]},{"name":"open fun setSizer(viewSizer: ViewSizer)","description":"com.google.ar.sceneform.rendering.ViewRenderable.setSizer","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/set-sizer.html","searchKeys":["setSizer","open fun setSizer(viewSizer: ViewSizer)","com.google.ar.sceneform.rendering.ViewRenderable.setSizer"]},{"name":"open fun setSizer(viewSizer: ViewSizer): ViewRenderable.Builder","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder.setSizer","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/set-sizer.html","searchKeys":["setSizer","open fun setSizer(viewSizer: ViewSizer): ViewRenderable.Builder","com.google.ar.sceneform.rendering.ViewRenderable.Builder.setSizer"]},{"name":"open fun setSkinningBuffer(skinningBuffer: SkinningBuffer, count: Int, offset: Int)","description":"io.github.sceneview.components.RenderableComponent.setSkinningBuffer","location":"sceneview/io.github.sceneview.components/-renderable-component/set-skinning-buffer.html","searchKeys":["setSkinningBuffer","open fun setSkinningBuffer(skinningBuffer: SkinningBuffer, count: Int, offset: Int)","io.github.sceneview.components.RenderableComponent.setSkinningBuffer"]},{"name":"open fun setSkinningModifier(skinningModifier: RenderableInstance.SkinningModifier)","description":"com.google.ar.sceneform.rendering.RenderableInstance.setSkinningModifier","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/set-skinning-modifier.html","searchKeys":["setSkinningModifier","open fun setSkinningModifier(skinningModifier: RenderableInstance.SkinningModifier)","com.google.ar.sceneform.rendering.RenderableInstance.setSkinningModifier"]},{"name":"open fun setSource(bitmap: Bitmap): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-source.html","searchKeys":["setSource","open fun setSource(bitmap: Bitmap): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setSource"]},{"name":"open fun setSource(context: Context, inputStreamCreator: Callable<InputStream>): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, inputStreamCreator: Callable<InputStream>): B","com.google.ar.sceneform.rendering.Renderable.Builder.setSource"]},{"name":"open fun setSource(context: Context, resource: Int): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, resource: Int): B","com.google.ar.sceneform.rendering.Renderable.Builder.setSource"]},{"name":"open fun setSource(context: Context, resource: Int): Material.Builder","description":"com.google.ar.sceneform.rendering.Material.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, resource: Int): Material.Builder","com.google.ar.sceneform.rendering.Material.Builder.setSource"]},{"name":"open fun setSource(context: Context, resource: Int): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, resource: Int): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setSource"]},{"name":"open fun setSource(context: Context, sourceUri: Uri): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, sourceUri: Uri): B","com.google.ar.sceneform.rendering.Renderable.Builder.setSource"]},{"name":"open fun setSource(context: Context, sourceUri: Uri): Material.Builder","description":"com.google.ar.sceneform.rendering.Material.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, sourceUri: Uri): Material.Builder","com.google.ar.sceneform.rendering.Material.Builder.setSource"]},{"name":"open fun setSource(context: Context, sourceUri: Uri): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, sourceUri: Uri): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setSource"]},{"name":"open fun setSource(context: Context, sourceUri: Uri, uriResolver: (String) -> Uri): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-source.html","searchKeys":["setSource","open fun setSource(context: Context, sourceUri: Uri, uriResolver: (String) -> Uri): B","com.google.ar.sceneform.rendering.Renderable.Builder.setSource"]},{"name":"open fun setSource(definition: RenderableDefinition): B","description":"com.google.ar.sceneform.rendering.Renderable.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-builder/set-source.html","searchKeys":["setSource","open fun setSource(definition: RenderableDefinition): B","com.google.ar.sceneform.rendering.Renderable.Builder.setSource"]},{"name":"open fun setSource(inputStreamCreator: Callable<InputStream>): Material.Builder","description":"com.google.ar.sceneform.rendering.Material.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/set-source.html","searchKeys":["setSource","open fun setSource(inputStreamCreator: Callable<InputStream>): Material.Builder","com.google.ar.sceneform.rendering.Material.Builder.setSource"]},{"name":"open fun setSource(inputStreamCreator: Callable<InputStream>): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-source.html","searchKeys":["setSource","open fun setSource(inputStreamCreator: Callable<InputStream>): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setSource"]},{"name":"open fun setSource(materialBuffer: ByteBuffer): Material.Builder","description":"com.google.ar.sceneform.rendering.Material.Builder.setSource","location":"sceneview/com.google.ar.sceneform.rendering/-material/-builder/set-source.html","searchKeys":["setSource","open fun setSource(materialBuffer: ByteBuffer): Material.Builder","com.google.ar.sceneform.rendering.Material.Builder.setSource"]},{"name":"open fun setSpotLightCone(inner: Float, outer: Float)","description":"io.github.sceneview.components.LightComponent.setSpotLightCone","location":"sceneview/io.github.sceneview.components/-light-component/set-spot-light-cone.html","searchKeys":["setSpotLightCone","open fun setSpotLightCone(inner: Float, outer: Float)","io.github.sceneview.components.LightComponent.setSpotLightCone"]},{"name":"open fun setSubmeshes(submeshes: List<RenderableDefinition.Submesh>): RenderableDefinition.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Builder.setSubmeshes","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-builder/set-submeshes.html","searchKeys":["setSubmeshes","open fun setSubmeshes(submeshes: List<RenderableDefinition.Submesh>): RenderableDefinition.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Builder.setSubmeshes"]},{"name":"open fun setTexture(name: String, texture: Texture)","description":"com.google.ar.sceneform.rendering.Material.setTexture","location":"sceneview/com.google.ar.sceneform.rendering/-material/set-texture.html","searchKeys":["setTexture","open fun setTexture(name: String, texture: Texture)","com.google.ar.sceneform.rendering.Material.setTexture"]},{"name":"open fun setTransformOffset(offset: Vector3)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setTransformOffset","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-transform-offset.html","searchKeys":["setTransformOffset","open fun setTransformOffset(offset: Vector3)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setTransformOffset"]},{"name":"open fun setTransformScale(scale: Float)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setTransformScale","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-transform-scale.html","searchKeys":["setTransformScale","open fun setTransformScale(scale: Float)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setTransformScale"]},{"name":"open fun setTranslation(translation: Vector3)","description":"io.github.sceneview.collision.Matrix.setTranslation","location":"sceneview/io.github.sceneview.collision/-matrix/set-translation.html","searchKeys":["setTranslation","open fun setTranslation(translation: Vector3)","io.github.sceneview.collision.Matrix.setTranslation"]},{"name":"open fun setTriangleIndices(triangleIndices: List<Integer>): RenderableDefinition.Submesh.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.setTriangleIndices","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/-builder/set-triangle-indices.html","searchKeys":["setTriangleIndices","open fun setTriangleIndices(triangleIndices: List<Integer>): RenderableDefinition.Submesh.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.Builder.setTriangleIndices"]},{"name":"open fun setUsage(usage: Texture.Usage): Texture.Builder","description":"com.google.ar.sceneform.rendering.Texture.Builder.setUsage","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-builder/set-usage.html","searchKeys":["setUsage","open fun setUsage(usage: Texture.Usage): Texture.Builder","com.google.ar.sceneform.rendering.Texture.Builder.setUsage"]},{"name":"open fun setUvCoordinate(uvCoordinate: Vertex.UvCoordinate): Vertex.Builder","description":"com.google.ar.sceneform.rendering.Vertex.Builder.setUvCoordinate","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-builder/set-uv-coordinate.html","searchKeys":["setUvCoordinate","open fun setUvCoordinate(uvCoordinate: Vertex.UvCoordinate): Vertex.Builder","com.google.ar.sceneform.rendering.Vertex.Builder.setUvCoordinate"]},{"name":"open fun setVertexBuffer(vertexBuffer: VertexBuffer)","description":"com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setVertexBuffer","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-internal-filament-asset-data/set-vertex-buffer.html","searchKeys":["setVertexBuffer","open fun setVertexBuffer(vertexBuffer: VertexBuffer)","com.google.ar.sceneform.rendering.RenderableInternalFilamentAssetData.setVertexBuffer"]},{"name":"open fun setVerticalAlignment(verticalAlignment: ViewRenderable.VerticalAlignment): ViewRenderable.Builder","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder.setVerticalAlignment","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/set-vertical-alignment.html","searchKeys":["setVerticalAlignment","open fun setVerticalAlignment(verticalAlignment: ViewRenderable.VerticalAlignment): ViewRenderable.Builder","com.google.ar.sceneform.rendering.ViewRenderable.Builder.setVerticalAlignment"]},{"name":"open fun setVertices(vertices: List<Vertex>)","description":"com.google.ar.sceneform.rendering.RenderableDefinition.setVertices","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/set-vertices.html","searchKeys":["setVertices","open fun setVertices(vertices: List<Vertex>)","com.google.ar.sceneform.rendering.RenderableDefinition.setVertices"]},{"name":"open fun setVertices(vertices: List<Vertex>): RenderableDefinition.Builder","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Builder.setVertices","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-builder/set-vertices.html","searchKeys":["setVertices","open fun setVertices(vertices: List<Vertex>): RenderableDefinition.Builder","com.google.ar.sceneform.rendering.RenderableDefinition.Builder.setVertices"]},{"name":"open fun setView(context: Context, resourceId: Int): ViewRenderable.Builder","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder.setView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/set-view.html","searchKeys":["setView","open fun setView(context: Context, resourceId: Int): ViewRenderable.Builder","com.google.ar.sceneform.rendering.ViewRenderable.Builder.setView"]},{"name":"open fun setView(context: Context, view: View): ViewRenderable.Builder","description":"com.google.ar.sceneform.rendering.ViewRenderable.Builder.setView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-builder/set-view.html","searchKeys":["setView","open fun setView(context: Context, view: View): ViewRenderable.Builder","com.google.ar.sceneform.rendering.ViewRenderable.Builder.setView"]},{"name":"open fun setWrapMode(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapMode","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-wrap-mode.html","searchKeys":["setWrapMode","open fun setWrapMode(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapMode"]},{"name":"open fun setWrapModeR(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapModeR","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-wrap-mode-r.html","searchKeys":["setWrapModeR","open fun setWrapModeR(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapModeR"]},{"name":"open fun setWrapModeS(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapModeS","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-wrap-mode-s.html","searchKeys":["setWrapModeS","open fun setWrapModeS(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapModeS"]},{"name":"open fun setWrapModeT(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","description":"com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapModeT","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-builder/set-wrap-mode-t.html","searchKeys":["setWrapModeT","open fun setWrapModeT(wrapMode: Texture.Sampler.WrapMode): Texture.Sampler.Builder","com.google.ar.sceneform.rendering.Texture.Sampler.Builder.setWrapModeT"]},{"name":"open fun shaderToMeshBones(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBones","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/shader-to-mesh-bones.html","searchKeys":["shaderToMeshBones","open fun shaderToMeshBones(j: Int): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBones"]},{"name":"open fun shaderToMeshBonesAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBonesAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/shader-to-mesh-bones-as-byte-buffer.html","searchKeys":["shaderToMeshBonesAsByteBuffer","open fun shaderToMeshBonesAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBonesAsByteBuffer"]},{"name":"open fun shaderToMeshBonesInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBonesInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/shader-to-mesh-bones-in-byte-buffer.html","searchKeys":["shaderToMeshBonesInByteBuffer","open fun shaderToMeshBonesInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBonesInByteBuffer"]},{"name":"open fun shaderToMeshBonesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBonesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/shader-to-mesh-bones-length.html","searchKeys":["shaderToMeshBonesLength","open fun shaderToMeshBonesLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.shaderToMeshBonesLength"]},{"name":"open fun shapeIntersection(shape: CollisionShape): Boolean","description":"io.github.sceneview.collision.Box.shapeIntersection","location":"sceneview/io.github.sceneview.collision/-box/shape-intersection.html","searchKeys":["shapeIntersection","open fun shapeIntersection(shape: CollisionShape): Boolean","io.github.sceneview.collision.Box.shapeIntersection"]},{"name":"open fun shapeIntersection(shape: CollisionShape): Boolean","description":"io.github.sceneview.collision.Sphere.shapeIntersection","location":"sceneview/io.github.sceneview.collision/-sphere/shape-intersection.html","searchKeys":["shapeIntersection","open fun shapeIntersection(shape: CollisionShape): Boolean","io.github.sceneview.collision.Sphere.shapeIntersection"]},{"name":"open fun sizedByteArray(): Array<Byte>","description":"com.google.flatbuffers.FlatBufferBuilder.sizedByteArray","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/sized-byte-array.html","searchKeys":["sizedByteArray","open fun sizedByteArray(): Array<Byte>","com.google.flatbuffers.FlatBufferBuilder.sizedByteArray"]},{"name":"open fun sizedByteArray(start: Int, length: Int): Array<Byte>","description":"com.google.flatbuffers.FlatBufferBuilder.sizedByteArray","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/sized-byte-array.html","searchKeys":["sizedByteArray","open fun sizedByteArray(start: Int, length: Int): Array<Byte>","com.google.flatbuffers.FlatBufferBuilder.sizedByteArray"]},{"name":"open fun sizedInputStream(): InputStream","description":"com.google.flatbuffers.FlatBufferBuilder.sizedInputStream","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/sized-input-stream.html","searchKeys":["sizedInputStream","open fun sizedInputStream(): InputStream","com.google.flatbuffers.FlatBufferBuilder.sizedInputStream"]},{"name":"open fun skeleton(): ModelPipelineSkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.skeleton","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/skeleton.html","searchKeys":["skeleton","open fun skeleton(): ModelPipelineSkeletonDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.skeleton"]},{"name":"open fun skeleton(): SkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.skeleton","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/skeleton.html","searchKeys":["skeleton","open fun skeleton(): SkeletonDef","com.google.ar.sceneform.lullmodel.ModelDef.skeleton"]},{"name":"open fun skeleton(obj: ModelPipelineSkeletonDef): ModelPipelineSkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.skeleton","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/skeleton.html","searchKeys":["skeleton","open fun skeleton(obj: ModelPipelineSkeletonDef): ModelPipelineSkeletonDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.skeleton"]},{"name":"open fun skeleton(obj: SkeletonDef): SkeletonDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.skeleton","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/skeleton.html","searchKeys":["skeleton","open fun skeleton(obj: SkeletonDef): SkeletonDef","com.google.ar.sceneform.lullmodel.ModelDef.skeleton"]},{"name":"open fun slerp(start: Quaternion, end: Quaternion, t: Float): Quaternion","description":"io.github.sceneview.collision.Quaternion.slerp","location":"sceneview/io.github.sceneview.collision/-quaternion/slerp.html","searchKeys":["slerp","open fun slerp(start: Quaternion, end: Quaternion, t: Float): Quaternion","io.github.sceneview.collision.Quaternion.slerp"]},{"name":"open fun slot(voffset: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.slot","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/slot.html","searchKeys":["slot","open fun slot(voffset: Int)","com.google.flatbuffers.FlatBufferBuilder.slot"]},{"name":"open fun smoothingAngle(): Float","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.smoothingAngle","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/smoothing-angle.html","searchKeys":["smoothingAngle","open fun smoothingAngle(): Float","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.smoothingAngle"]},{"name":"open fun source(): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.source","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/source.html","searchKeys":["source","open fun source(): String","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.source"]},{"name":"open fun source(): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.source","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/source.html","searchKeys":["source","open fun source(): String","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.source"]},{"name":"open fun source(): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.source","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/source.html","searchKeys":["source","open fun source(): String","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.source"]},{"name":"open fun sourceAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.sourceAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/source-as-byte-buffer.html","searchKeys":["sourceAsByteBuffer","open fun sourceAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.sourceAsByteBuffer"]},{"name":"open fun sourceAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.sourceAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/source-as-byte-buffer.html","searchKeys":["sourceAsByteBuffer","open fun sourceAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.sourceAsByteBuffer"]},{"name":"open fun sourceAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.sourceAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/source-as-byte-buffer.html","searchKeys":["sourceAsByteBuffer","open fun sourceAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.sourceAsByteBuffer"]},{"name":"open fun sourceInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.sourceInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/source-in-byte-buffer.html","searchKeys":["sourceInByteBuffer","open fun sourceInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.sourceInByteBuffer"]},{"name":"open fun sourceInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.sourceInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/source-in-byte-buffer.html","searchKeys":["sourceInByteBuffer","open fun sourceInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.sourceInByteBuffer"]},{"name":"open fun sourceInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.sourceInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/source-in-byte-buffer.html","searchKeys":["sourceInByteBuffer","open fun sourceInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.sourceInByteBuffer"]},{"name":"open fun sources(j: Int): ModelPipelineImportDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.sources","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/sources.html","searchKeys":["sources","open fun sources(j: Int): ModelPipelineImportDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.sources"]},{"name":"open fun sources(obj: ModelPipelineImportDef, j: Int): ModelPipelineImportDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.sources","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/sources.html","searchKeys":["sources","open fun sources(obj: ModelPipelineImportDef, j: Int): ModelPipelineImportDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.sources"]},{"name":"open fun sourcesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.sourcesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/sources-length.html","searchKeys":["sourcesLength","open fun sourcesLength(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.sourcesLength"]},{"name":"open fun start(): Long","description":"com.google.ar.sceneform.lullmodel.ModelIndexRange.start","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-index-range/start.html","searchKeys":["start","open fun start(): Long","com.google.ar.sceneform.lullmodel.ModelIndexRange.start"]},{"name":"open fun startAabbsVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startAabbsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-aabbs-vector.html","searchKeys":["startAabbsVector","open fun startAabbsVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startAabbsVector"]},{"name":"open fun startAngle(): Float","description":"com.google.ar.sceneform.lullmodel.ArcDef.startAngle","location":"sceneview/com.google.ar.sceneform.lullmodel/-arc-def/start-angle.html","searchKeys":["startAngle","open fun startAngle(): Float","com.google.ar.sceneform.lullmodel.ArcDef.startAngle"]},{"name":"open fun startAttributesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.startAttributesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/start-attributes-vector.html","searchKeys":["startAttributesVector","open fun startAttributesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.startAttributesVector"]},{"name":"open fun startBlendAttributesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startBlendAttributesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-blend-attributes-vector.html","searchKeys":["startBlendAttributesVector","open fun startBlendAttributesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startBlendAttributesVector"]},{"name":"open fun startBlendShape(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startBlendShape","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-blend-shape.html","searchKeys":["startBlendShape","open fun startBlendShape(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.BlendShape.startBlendShape"]},{"name":"open fun startBlendShapesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startBlendShapesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-blend-shapes-vector.html","searchKeys":["startBlendShapesVector","open fun startBlendShapesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startBlendShapesVector"]},{"name":"open fun startBoneNamesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.startBoneNamesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/start-bone-names-vector.html","searchKeys":["startBoneNamesVector","open fun startBoneNamesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.SkeletonDef.startBoneNamesVector"]},{"name":"open fun startBoneParentsVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.startBoneParentsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/start-bone-parents-vector.html","searchKeys":["startBoneParentsVector","open fun startBoneParentsVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.SkeletonDef.startBoneParentsVector"]},{"name":"open fun startBoneTransformsVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.startBoneTransformsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/start-bone-transforms-vector.html","searchKeys":["startBoneTransformsVector","open fun startBoneTransformsVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.SkeletonDef.startBoneTransformsVector"]},{"name":"open fun startDataBool(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataBool.startDataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/start-data-bool.html","searchKeys":["startDataBool","open fun startDataBool(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataBool.startDataBool"]},{"name":"open fun startDataBytes(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataBytes.startDataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/start-data-bytes.html","searchKeys":["startDataBytes","open fun startDataBytes(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataBytes.startDataBytes"]},{"name":"open fun startDataFloat(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataFloat.startDataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/start-data-float.html","searchKeys":["startDataFloat","open fun startDataFloat(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataFloat.startDataFloat"]},{"name":"open fun startDataHashValue(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataHashValue.startDataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/start-data-hash-value.html","searchKeys":["startDataHashValue","open fun startDataHashValue(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataHashValue.startDataHashValue"]},{"name":"open fun startDataInt(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataInt.startDataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/start-data-int.html","searchKeys":["startDataInt","open fun startDataInt(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataInt.startDataInt"]},{"name":"open fun startDataQuat(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataQuat.startDataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/start-data-quat.html","searchKeys":["startDataQuat","open fun startDataQuat(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataQuat.startDataQuat"]},{"name":"open fun startDataString(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataString.startDataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/start-data-string.html","searchKeys":["startDataString","open fun startDataString(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataString.startDataString"]},{"name":"open fun startDataVec2(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataVec2.startDataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/start-data-vec2.html","searchKeys":["startDataVec2","open fun startDataVec2(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataVec2.startDataVec2"]},{"name":"open fun startDataVec3(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataVec3.startDataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/start-data-vec3.html","searchKeys":["startDataVec3","open fun startDataVec3(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataVec3.startDataVec3"]},{"name":"open fun startDataVec4(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.DataVec4.startDataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/start-data-vec4.html","searchKeys":["startDataVec4","open fun startDataVec4(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.DataVec4.startDataVec4"]},{"name":"open fun startDataVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.TextureDef.startDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/start-data-vector.html","searchKeys":["startDataVector","open fun startDataVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.TextureDef.startDataVector"]},{"name":"open fun startIndices16Vector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startIndices16Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-indices16-vector.html","searchKeys":["startIndices16Vector","open fun startIndices16Vector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startIndices16Vector"]},{"name":"open fun startIndices32Vector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startIndices32Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-indices32-vector.html","searchKeys":["startIndices32Vector","open fun startIndices32Vector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startIndices32Vector"]},{"name":"open fun startKeyVariantPairDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.startKeyVariantPairDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/start-key-variant-pair-def.html","searchKeys":["startKeyVariantPairDef","open fun startKeyVariantPairDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.startKeyVariantPairDef"]},{"name":"open fun startLodsVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.startLodsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/start-lods-vector.html","searchKeys":["startLodsVector","open fun startLodsVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelDef.startLodsVector"]},{"name":"open fun startMaterialDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.MaterialDef.startMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/start-material-def.html","searchKeys":["startMaterialDef","open fun startMaterialDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.MaterialDef.startMaterialDef"]},{"name":"open fun startMaterialTextureDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.startMaterialTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/start-material-texture-def.html","searchKeys":["startMaterialTextureDef","open fun startMaterialTextureDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.MaterialTextureDef.startMaterialTextureDef"]},{"name":"open fun startMaterialsVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startMaterialsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-materials-vector.html","searchKeys":["startMaterialsVector","open fun startMaterialsVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startMaterialsVector"]},{"name":"open fun startMaterialsVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.startMaterialsVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/start-materials-vector.html","searchKeys":["startMaterialsVector","open fun startMaterialsVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.startMaterialsVector"]},{"name":"open fun startModelDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelDef.startModelDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/start-model-def.html","searchKeys":["startModelDef","open fun startModelDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelDef.startModelDef"]},{"name":"open fun startModelInstanceDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startModelInstanceDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-model-instance-def.html","searchKeys":["startModelInstanceDef","open fun startModelInstanceDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startModelInstanceDef"]},{"name":"open fun startModelPipelineCollidableDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.startModelPipelineCollidableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-collidable-def/start-model-pipeline-collidable-def.html","searchKeys":["startModelPipelineCollidableDef","open fun startModelPipelineCollidableDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelPipelineCollidableDef.startModelPipelineCollidableDef"]},{"name":"open fun startModelPipelineDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.startModelPipelineDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/start-model-pipeline-def.html","searchKeys":["startModelPipelineDef","open fun startModelPipelineDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.startModelPipelineDef"]},{"name":"open fun startModelPipelineImportDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.startModelPipelineImportDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/start-model-pipeline-import-def.html","searchKeys":["startModelPipelineImportDef","open fun startModelPipelineImportDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.startModelPipelineImportDef"]},{"name":"open fun startModelPipelineMaterialDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.startModelPipelineMaterialDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-material-def/start-model-pipeline-material-def.html","searchKeys":["startModelPipelineMaterialDef","open fun startModelPipelineMaterialDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelPipelineMaterialDef.startModelPipelineMaterialDef"]},{"name":"open fun startModelPipelineRenderableDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.startModelPipelineRenderableDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-renderable-def/start-model-pipeline-renderable-def.html","searchKeys":["startModelPipelineRenderableDef","open fun startModelPipelineRenderableDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelPipelineRenderableDef.startModelPipelineRenderableDef"]},{"name":"open fun startModelPipelineSkeletonDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.startModelPipelineSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-skeleton-def/start-model-pipeline-skeleton-def.html","searchKeys":["startModelPipelineSkeletonDef","open fun startModelPipelineSkeletonDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.ModelPipelineSkeletonDef.startModelPipelineSkeletonDef"]},{"name":"open fun startObject(numfields: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.startObject","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/start-object.html","searchKeys":["startObject","open fun startObject(numfields: Int)","com.google.flatbuffers.FlatBufferBuilder.startObject"]},{"name":"open fun startRangesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startRangesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-ranges-vector.html","searchKeys":["startRangesVector","open fun startRangesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startRangesVector"]},{"name":"open fun startRenderablesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.startRenderablesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/start-renderables-vector.html","searchKeys":["startRenderablesVector","open fun startRenderablesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.startRenderablesVector"]},{"name":"open fun startShaderToMeshBonesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startShaderToMeshBonesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-shader-to-mesh-bones-vector.html","searchKeys":["startShaderToMeshBonesVector","open fun startShaderToMeshBonesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startShaderToMeshBonesVector"]},{"name":"open fun startSkeletonDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.SkeletonDef.startSkeletonDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-skeleton-def/start-skeleton-def.html","searchKeys":["startSkeletonDef","open fun startSkeletonDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.SkeletonDef.startSkeletonDef"]},{"name":"open fun startSourcesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.startSourcesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/start-sources-vector.html","searchKeys":["startSourcesVector","open fun startSourcesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.startSourcesVector"]},{"name":"open fun startSubmeshAabb(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.SubmeshAabb.startSubmeshAabb","location":"sceneview/com.google.ar.sceneform.lullmodel/-submesh-aabb/start-submesh-aabb.html","searchKeys":["startSubmeshAabb","open fun startSubmeshAabb(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.SubmeshAabb.startSubmeshAabb"]},{"name":"open fun startTangentDataVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startTangentDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-tangent-data-vector.html","searchKeys":["startTangentDataVector","open fun startTangentDataVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.BlendShape.startTangentDataVector"]},{"name":"open fun startTangentIndices16Vector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startTangentIndices16Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-tangent-indices16-vector.html","searchKeys":["startTangentIndices16Vector","open fun startTangentIndices16Vector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.BlendShape.startTangentIndices16Vector"]},{"name":"open fun startTangentIndices32Vector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startTangentIndices32Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-tangent-indices32-vector.html","searchKeys":["startTangentIndices32Vector","open fun startTangentIndices32Vector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.BlendShape.startTangentIndices32Vector"]},{"name":"open fun startTargetMeshesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.startTargetMeshesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/start-target-meshes-vector.html","searchKeys":["startTargetMeshesVector","open fun startTargetMeshesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.startTargetMeshesVector"]},{"name":"open fun startTextureDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.TextureDef.startTextureDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/start-texture-def.html","searchKeys":["startTextureDef","open fun startTextureDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.TextureDef.startTextureDef"]},{"name":"open fun startTexturesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialDef.startTexturesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/start-textures-vector.html","searchKeys":["startTexturesVector","open fun startTexturesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.MaterialDef.startTexturesVector"]},{"name":"open fun startTexturesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelDef.startTexturesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/start-textures-vector.html","searchKeys":["startTexturesVector","open fun startTexturesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelDef.startTexturesVector"]},{"name":"open fun startTexturesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.startTexturesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/start-textures-vector.html","searchKeys":["startTexturesVector","open fun startTexturesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelPipelineDef.startTexturesVector"]},{"name":"open fun startUsagePerChannelVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.startUsagePerChannelVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/start-usage-per-channel-vector.html","searchKeys":["startUsagePerChannelVector","open fun startUsagePerChannelVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.MaterialTextureDef.startUsagePerChannelVector"]},{"name":"open fun startValueVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.DataBytes.startValueVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/start-value-vector.html","searchKeys":["startValueVector","open fun startValueVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.DataBytes.startValueVector"]},{"name":"open fun startValuesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.startValuesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/start-values-vector.html","searchKeys":["startValuesVector","open fun startValuesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.VariantArrayDef.startValuesVector"]},{"name":"open fun startValuesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.startValuesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/start-values-vector.html","searchKeys":["startValuesVector","open fun startValuesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.VariantMapDef.startValuesVector"]},{"name":"open fun startVariantArrayDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.startVariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/start-variant-array-def.html","searchKeys":["startVariantArrayDef","open fun startVariantArrayDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.VariantArrayDef.startVariantArrayDef"]},{"name":"open fun startVariantArrayDefImpl(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.startVariantArrayDefImpl","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/start-variant-array-def-impl.html","searchKeys":["startVariantArrayDefImpl","open fun startVariantArrayDefImpl(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.startVariantArrayDefImpl"]},{"name":"open fun startVariantMapDef(builder: FlatBufferBuilder)","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.startVariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/start-variant-map-def.html","searchKeys":["startVariantMapDef","open fun startVariantMapDef(builder: FlatBufferBuilder)","com.google.ar.sceneform.lullmodel.VariantMapDef.startVariantMapDef"]},{"name":"open fun startVector(elem_size: Int, num_elems: Int, alignment: Int)","description":"com.google.flatbuffers.FlatBufferBuilder.startVector","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/start-vector.html","searchKeys":["startVector","open fun startVector(elem_size: Int, num_elems: Int, alignment: Int)","com.google.flatbuffers.FlatBufferBuilder.startVector"]},{"name":"open fun startVertexAttributesVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startVertexAttributesVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-vertex-attributes-vector.html","searchKeys":["startVertexAttributesVector","open fun startVertexAttributesVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startVertexAttributesVector"]},{"name":"open fun startVertexDataVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startVertexDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-vertex-data-vector.html","searchKeys":["startVertexDataVector","open fun startVertexDataVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.BlendShape.startVertexDataVector"]},{"name":"open fun startVertexDataVector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.startVertexDataVector","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/start-vertex-data-vector.html","searchKeys":["startVertexDataVector","open fun startVertexDataVector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.ModelInstanceDef.startVertexDataVector"]},{"name":"open fun startVertexIndices16Vector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startVertexIndices16Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-vertex-indices16-vector.html","searchKeys":["startVertexIndices16Vector","open fun startVertexIndices16Vector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.BlendShape.startVertexIndices16Vector"]},{"name":"open fun startVertexIndices32Vector(builder: FlatBufferBuilder, numElems: Int)","description":"com.google.ar.sceneform.lullmodel.BlendShape.startVertexIndices32Vector","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/start-vertex-indices32-vector.html","searchKeys":["startVertexIndices32Vector","open fun startVertexIndices32Vector(builder: FlatBufferBuilder, numElems: Int)","com.google.ar.sceneform.lullmodel.BlendShape.startVertexIndices32Vector"]},{"name":"open fun subtract(lhs: Vector3, rhs: Vector3): Vector3","description":"io.github.sceneview.collision.Vector3.subtract","location":"sceneview/io.github.sceneview.collision/-vector3/subtract.html","searchKeys":["subtract","open fun subtract(lhs: Vector3, rhs: Vector3): Vector3","io.github.sceneview.collision.Vector3.subtract"]},{"name":"open fun tangentData(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentData","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-data.html","searchKeys":["tangentData","open fun tangentData(j: Int): Int","com.google.ar.sceneform.lullmodel.BlendShape.tangentData"]},{"name":"open fun tangentDataAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentDataAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-data-as-byte-buffer.html","searchKeys":["tangentDataAsByteBuffer","open fun tangentDataAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.tangentDataAsByteBuffer"]},{"name":"open fun tangentDataInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentDataInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-data-in-byte-buffer.html","searchKeys":["tangentDataInByteBuffer","open fun tangentDataInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.tangentDataInByteBuffer"]},{"name":"open fun tangentDataLength(): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentDataLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-data-length.html","searchKeys":["tangentDataLength","open fun tangentDataLength(): Int","com.google.ar.sceneform.lullmodel.BlendShape.tangentDataLength"]},{"name":"open fun tangentIndices16(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices16.html","searchKeys":["tangentIndices16","open fun tangentIndices16(j: Int): Int","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16"]},{"name":"open fun tangentIndices16AsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16AsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices16-as-byte-buffer.html","searchKeys":["tangentIndices16AsByteBuffer","open fun tangentIndices16AsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16AsByteBuffer"]},{"name":"open fun tangentIndices16InByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16InByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices16-in-byte-buffer.html","searchKeys":["tangentIndices16InByteBuffer","open fun tangentIndices16InByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16InByteBuffer"]},{"name":"open fun tangentIndices16Length(): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16Length","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices16-length.html","searchKeys":["tangentIndices16Length","open fun tangentIndices16Length(): Int","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices16Length"]},{"name":"open fun tangentIndices32(j: Int): Long","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices32.html","searchKeys":["tangentIndices32","open fun tangentIndices32(j: Int): Long","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32"]},{"name":"open fun tangentIndices32AsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32AsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices32-as-byte-buffer.html","searchKeys":["tangentIndices32AsByteBuffer","open fun tangentIndices32AsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32AsByteBuffer"]},{"name":"open fun tangentIndices32InByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32InByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices32-in-byte-buffer.html","searchKeys":["tangentIndices32InByteBuffer","open fun tangentIndices32InByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32InByteBuffer"]},{"name":"open fun tangentIndices32Length(): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32Length","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/tangent-indices32-length.html","searchKeys":["tangentIndices32Length","open fun tangentIndices32Length(): Int","com.google.ar.sceneform.lullmodel.BlendShape.tangentIndices32Length"]},{"name":"open fun targetMeshes(j: Int): String","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.targetMeshes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/target-meshes.html","searchKeys":["targetMeshes","open fun targetMeshes(j: Int): String","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.targetMeshes"]},{"name":"open fun targetMeshesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.targetMeshesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/target-meshes-length.html","searchKeys":["targetMeshesLength","open fun targetMeshesLength(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.targetMeshesLength"]},{"name":"open fun targetType(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.targetType","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/target-type.html","searchKeys":["targetType","open fun targetType(): Int","com.google.ar.sceneform.lullmodel.TextureDef.targetType"]},{"name":"open fun textures(j: Int): MaterialTextureDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.textures","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/textures.html","searchKeys":["textures","open fun textures(j: Int): MaterialTextureDef","com.google.ar.sceneform.lullmodel.MaterialDef.textures"]},{"name":"open fun textures(j: Int): TextureDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.textures","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/textures.html","searchKeys":["textures","open fun textures(j: Int): TextureDef","com.google.ar.sceneform.lullmodel.ModelDef.textures"]},{"name":"open fun textures(j: Int): TextureDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.textures","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/textures.html","searchKeys":["textures","open fun textures(j: Int): TextureDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.textures"]},{"name":"open fun textures(obj: MaterialTextureDef, j: Int): MaterialTextureDef","description":"com.google.ar.sceneform.lullmodel.MaterialDef.textures","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/textures.html","searchKeys":["textures","open fun textures(obj: MaterialTextureDef, j: Int): MaterialTextureDef","com.google.ar.sceneform.lullmodel.MaterialDef.textures"]},{"name":"open fun textures(obj: TextureDef, j: Int): TextureDef","description":"com.google.ar.sceneform.lullmodel.ModelDef.textures","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/textures.html","searchKeys":["textures","open fun textures(obj: TextureDef, j: Int): TextureDef","com.google.ar.sceneform.lullmodel.ModelDef.textures"]},{"name":"open fun textures(obj: TextureDef, j: Int): TextureDef","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.textures","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/textures.html","searchKeys":["textures","open fun textures(obj: TextureDef, j: Int): TextureDef","com.google.ar.sceneform.lullmodel.ModelPipelineDef.textures"]},{"name":"open fun texturesLength(): Int","description":"com.google.ar.sceneform.lullmodel.MaterialDef.texturesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-def/textures-length.html","searchKeys":["texturesLength","open fun texturesLength(): Int","com.google.ar.sceneform.lullmodel.MaterialDef.texturesLength"]},{"name":"open fun texturesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelDef.texturesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/textures-length.html","searchKeys":["texturesLength","open fun texturesLength(): Int","com.google.ar.sceneform.lullmodel.ModelDef.texturesLength"]},{"name":"open fun texturesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelPipelineDef.texturesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-def/textures-length.html","searchKeys":["texturesLength","open fun texturesLength(): Int","com.google.ar.sceneform.lullmodel.ModelPipelineDef.texturesLength"]},{"name":"open fun timeToFraction(time: Float, duration: Float): Float","description":"io.github.sceneview.animation.ModelAnimation.timeToFraction","location":"sceneview/io.github.sceneview.animation/-model-animation/time-to-fraction.html","searchKeys":["timeToFraction","open fun timeToFraction(time: Float, duration: Float): Float","io.github.sceneview.animation.ModelAnimation.timeToFraction"]},{"name":"open fun timeToFrame(time: Float, frameRate: Int): Int","description":"io.github.sceneview.animation.ModelAnimation.timeToFrame","location":"sceneview/io.github.sceneview.animation/-model-animation/time-to-frame.html","searchKeys":["timeToFrame","open fun timeToFrame(time: Float, frameRate: Int): Int","io.github.sceneview.animation.ModelAnimation.timeToFrame"]},{"name":"open fun toString(): String","description":"io.github.sceneview.collision.Quaternion.toString","location":"sceneview/io.github.sceneview.collision/-quaternion/to-string.html","searchKeys":["toString","open fun toString(): String","io.github.sceneview.collision.Quaternion.toString"]},{"name":"open fun toString(): String","description":"io.github.sceneview.collision.Ray.toString","location":"sceneview/io.github.sceneview.collision/-ray/to-string.html","searchKeys":["toString","open fun toString(): String","io.github.sceneview.collision.Ray.toString"]},{"name":"open fun toString(): String","description":"io.github.sceneview.collision.Vector3.toString","location":"sceneview/io.github.sceneview.collision/-vector3/to-string.html","searchKeys":["toString","open fun toString(): String","io.github.sceneview.collision.Vector3.toString"]},{"name":"open fun transform(transform: Transform, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","description":"io.github.sceneview.node.Node.transform","location":"sceneview/io.github.sceneview.node/-node/transform.html","searchKeys":["transform","open fun transform(transform: Transform, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","io.github.sceneview.node.Node.transform"]},{"name":"open fun transformDirection(vector: Vector3): Vector3","description":"io.github.sceneview.collision.Matrix.transformDirection","location":"sceneview/io.github.sceneview.collision/-matrix/transform-direction.html","searchKeys":["transformDirection","open fun transformDirection(vector: Vector3): Vector3","io.github.sceneview.collision.Matrix.transformDirection"]},{"name":"open fun transformPoint(vector: Vector3): Vector3","description":"io.github.sceneview.collision.Matrix.transformPoint","location":"sceneview/io.github.sceneview.collision/-matrix/transform-point.html","searchKeys":["transformPoint","open fun transformPoint(vector: Vector3): Vector3","io.github.sceneview.collision.Matrix.transformPoint"]},{"name":"open fun tryLoadSceneformBundle(buffer: ByteBuffer): SceneformBundleDef","description":"com.google.ar.sceneform.rendering.SceneformBundle.tryLoadSceneformBundle","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/try-load-sceneform-bundle.html","searchKeys":["tryLoadSceneformBundle","open fun tryLoadSceneformBundle(buffer: ByteBuffer): SceneformBundleDef","com.google.ar.sceneform.rendering.SceneformBundle.tryLoadSceneformBundle"]},{"name":"open fun type(): Int","description":"com.google.ar.sceneform.lullmodel.VertexAttribute.type","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/type.html","searchKeys":["type","open fun type(): Int","com.google.ar.sceneform.lullmodel.VertexAttribute.type"]},{"name":"open fun up(): Vector3","description":"io.github.sceneview.collision.Vector3.up","location":"sceneview/io.github.sceneview.collision/-vector3/up.html","searchKeys":["up","open fun up(): Vector3","io.github.sceneview.collision.Vector3.up"]},{"name":"open fun update()","description":"io.github.sceneview.collision.ChangeId.update","location":"sceneview/io.github.sceneview.collision/-change-id/update.html","searchKeys":["update","open fun update()","io.github.sceneview.collision.ChangeId.update"]},{"name":"open fun updateAnimations(force: Boolean): Boolean","description":"com.google.ar.sceneform.rendering.RenderableInstance.updateAnimations","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/update-animations.html","searchKeys":["updateAnimations","open fun updateAnimations(force: Boolean): Boolean","com.google.ar.sceneform.rendering.RenderableInstance.updateAnimations"]},{"name":"open fun updateFromDefinition(definition: RenderableDefinition)","description":"com.google.ar.sceneform.rendering.Renderable.updateFromDefinition","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/update-from-definition.html","searchKeys":["updateFromDefinition","open fun updateFromDefinition(definition: RenderableDefinition)","com.google.ar.sceneform.rendering.Renderable.updateFromDefinition"]},{"name":"open fun usage(): Int","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.usage","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/usage.html","searchKeys":["usage","open fun usage(): Int","com.google.ar.sceneform.lullmodel.MaterialTextureDef.usage"]},{"name":"open fun usage(): Int","description":"com.google.ar.sceneform.lullmodel.VertexAttribute.usage","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute/usage.html","searchKeys":["usage","open fun usage(): Int","com.google.ar.sceneform.lullmodel.VertexAttribute.usage"]},{"name":"open fun usagePerChannel(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannel","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/usage-per-channel.html","searchKeys":["usagePerChannel","open fun usagePerChannel(j: Int): Int","com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannel"]},{"name":"open fun usagePerChannelAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannelAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/usage-per-channel-as-byte-buffer.html","searchKeys":["usagePerChannelAsByteBuffer","open fun usagePerChannelAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannelAsByteBuffer"]},{"name":"open fun usagePerChannelInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannelInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/usage-per-channel-in-byte-buffer.html","searchKeys":["usagePerChannelInByteBuffer","open fun usagePerChannelInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannelInByteBuffer"]},{"name":"open fun usagePerChannelLength(): Int","description":"com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannelLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-def/usage-per-channel-length.html","searchKeys":["usagePerChannelLength","open fun usagePerChannelLength(): Int","com.google.ar.sceneform.lullmodel.MaterialTextureDef.usagePerChannelLength"]},{"name":"open fun useSpecularGlossinessTexturesIfPresent(): Boolean","description":"com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.useSpecularGlossinessTexturesIfPresent","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-pipeline-import-def/use-specular-glossiness-textures-if-present.html","searchKeys":["useSpecularGlossinessTexturesIfPresent","open fun useSpecularGlossinessTexturesIfPresent(): Boolean","com.google.ar.sceneform.lullmodel.ModelPipelineImportDef.useSpecularGlossinessTexturesIfPresent"]},{"name":"open fun value(): Boolean","description":"com.google.ar.sceneform.lullmodel.DataBool.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bool/value.html","searchKeys":["value","open fun value(): Boolean","com.google.ar.sceneform.lullmodel.DataBool.value"]},{"name":"open fun value(): Float","description":"com.google.ar.sceneform.lullmodel.DataFloat.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-float/value.html","searchKeys":["value","open fun value(): Float","com.google.ar.sceneform.lullmodel.DataFloat.value"]},{"name":"open fun value(): Int","description":"com.google.ar.sceneform.lullmodel.DataInt.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-int/value.html","searchKeys":["value","open fun value(): Int","com.google.ar.sceneform.lullmodel.DataInt.value"]},{"name":"open fun value(): Long","description":"com.google.ar.sceneform.lullmodel.DataHashValue.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-hash-value/value.html","searchKeys":["value","open fun value(): Long","com.google.ar.sceneform.lullmodel.DataHashValue.value"]},{"name":"open fun value(): Quat","description":"com.google.ar.sceneform.lullmodel.DataQuat.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/value.html","searchKeys":["value","open fun value(): Quat","com.google.ar.sceneform.lullmodel.DataQuat.value"]},{"name":"open fun value(): String","description":"com.google.ar.sceneform.lullmodel.DataString.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/value.html","searchKeys":["value","open fun value(): String","com.google.ar.sceneform.lullmodel.DataString.value"]},{"name":"open fun value(): Vec2","description":"com.google.ar.sceneform.lullmodel.DataVec2.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/value.html","searchKeys":["value","open fun value(): Vec2","com.google.ar.sceneform.lullmodel.DataVec2.value"]},{"name":"open fun value(): Vec3","description":"com.google.ar.sceneform.lullmodel.DataVec3.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/value.html","searchKeys":["value","open fun value(): Vec3","com.google.ar.sceneform.lullmodel.DataVec3.value"]},{"name":"open fun value(): Vec4","description":"com.google.ar.sceneform.lullmodel.DataVec4.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/value.html","searchKeys":["value","open fun value(): Vec4","com.google.ar.sceneform.lullmodel.DataVec4.value"]},{"name":"open fun value(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.DataBytes.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/value.html","searchKeys":["value","open fun value(j: Int): Int","com.google.ar.sceneform.lullmodel.DataBytes.value"]},{"name":"open fun value(obj: Quat): Quat","description":"com.google.ar.sceneform.lullmodel.DataQuat.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-quat/value.html","searchKeys":["value","open fun value(obj: Quat): Quat","com.google.ar.sceneform.lullmodel.DataQuat.value"]},{"name":"open fun value(obj: Table): Table","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/value.html","searchKeys":["value","open fun value(obj: Table): Table","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.value"]},{"name":"open fun value(obj: Table): Table","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/value.html","searchKeys":["value","open fun value(obj: Table): Table","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.value"]},{"name":"open fun value(obj: Vec2): Vec2","description":"com.google.ar.sceneform.lullmodel.DataVec2.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec2/value.html","searchKeys":["value","open fun value(obj: Vec2): Vec2","com.google.ar.sceneform.lullmodel.DataVec2.value"]},{"name":"open fun value(obj: Vec3): Vec3","description":"com.google.ar.sceneform.lullmodel.DataVec3.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec3/value.html","searchKeys":["value","open fun value(obj: Vec3): Vec3","com.google.ar.sceneform.lullmodel.DataVec3.value"]},{"name":"open fun value(obj: Vec4): Vec4","description":"com.google.ar.sceneform.lullmodel.DataVec4.value","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-vec4/value.html","searchKeys":["value","open fun value(obj: Vec4): Vec4","com.google.ar.sceneform.lullmodel.DataVec4.value"]},{"name":"open fun valueAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.DataBytes.valueAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/value-as-byte-buffer.html","searchKeys":["valueAsByteBuffer","open fun valueAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.DataBytes.valueAsByteBuffer"]},{"name":"open fun valueAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.DataString.valueAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/value-as-byte-buffer.html","searchKeys":["valueAsByteBuffer","open fun valueAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.DataString.valueAsByteBuffer"]},{"name":"open fun valueInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.DataBytes.valueInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/value-in-byte-buffer.html","searchKeys":["valueInByteBuffer","open fun valueInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.DataBytes.valueInByteBuffer"]},{"name":"open fun valueInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.DataString.valueInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-string/value-in-byte-buffer.html","searchKeys":["valueInByteBuffer","open fun valueInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.DataString.valueInByteBuffer"]},{"name":"open fun valueLength(): Int","description":"com.google.ar.sceneform.lullmodel.DataBytes.valueLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-data-bytes/value-length.html","searchKeys":["valueLength","open fun valueLength(): Int","com.google.ar.sceneform.lullmodel.DataBytes.valueLength"]},{"name":"open fun valueOf(name: String): LoadGltfListener.GltfLoadStage","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): LoadGltfListener.GltfLoadStage","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.valueOf"]},{"name":"open fun valueOf(name: String): Texture.Sampler.MagFilter","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-mag-filter/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Texture.Sampler.MagFilter","com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.valueOf"]},{"name":"open fun valueOf(name: String): Texture.Sampler.MinFilter","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Texture.Sampler.MinFilter","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.valueOf"]},{"name":"open fun valueOf(name: String): Texture.Sampler.WrapMode","description":"com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-wrap-mode/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Texture.Sampler.WrapMode","com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.valueOf"]},{"name":"open fun valueOf(name: String): Texture.Usage","description":"com.google.ar.sceneform.rendering.Texture.Usage.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-usage/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): Texture.Usage","com.google.ar.sceneform.rendering.Texture.Usage.valueOf"]},{"name":"open fun valueOf(name: String): ViewRenderable.HorizontalAlignment","description":"com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-horizontal-alignment/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): ViewRenderable.HorizontalAlignment","com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.valueOf"]},{"name":"open fun valueOf(name: String): ViewRenderable.VerticalAlignment","description":"com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.valueOf","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-vertical-alignment/value-of.html","searchKeys":["valueOf","open fun valueOf(name: String): ViewRenderable.VerticalAlignment","com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.valueOf"]},{"name":"open fun valueType(): Byte","description":"com.google.ar.sceneform.lullmodel.KeyVariantPairDef.valueType","location":"sceneview/com.google.ar.sceneform.lullmodel/-key-variant-pair-def/value-type.html","searchKeys":["valueType","open fun valueType(): Byte","com.google.ar.sceneform.lullmodel.KeyVariantPairDef.valueType"]},{"name":"open fun valueType(): Byte","description":"com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.valueType","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def-impl/value-type.html","searchKeys":["valueType","open fun valueType(): Byte","com.google.ar.sceneform.lullmodel.VariantArrayDefImpl.valueType"]},{"name":"open fun values(): Array<LoadGltfListener.GltfLoadStage>","description":"com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.values","location":"sceneview/com.google.ar.sceneform.rendering/-load-gltf-listener/-gltf-load-stage/values.html","searchKeys":["values","open fun values(): Array<LoadGltfListener.GltfLoadStage>","com.google.ar.sceneform.rendering.LoadGltfListener.GltfLoadStage.values"]},{"name":"open fun values(): Array<Texture.Sampler.MagFilter>","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.values","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-mag-filter/values.html","searchKeys":["values","open fun values(): Array<Texture.Sampler.MagFilter>","com.google.ar.sceneform.rendering.Texture.Sampler.MagFilter.values"]},{"name":"open fun values(): Array<Texture.Sampler.MinFilter>","description":"com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.values","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-min-filter/values.html","searchKeys":["values","open fun values(): Array<Texture.Sampler.MinFilter>","com.google.ar.sceneform.rendering.Texture.Sampler.MinFilter.values"]},{"name":"open fun values(): Array<Texture.Sampler.WrapMode>","description":"com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.values","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/-wrap-mode/values.html","searchKeys":["values","open fun values(): Array<Texture.Sampler.WrapMode>","com.google.ar.sceneform.rendering.Texture.Sampler.WrapMode.values"]},{"name":"open fun values(): Array<Texture.Usage>","description":"com.google.ar.sceneform.rendering.Texture.Usage.values","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-usage/values.html","searchKeys":["values","open fun values(): Array<Texture.Usage>","com.google.ar.sceneform.rendering.Texture.Usage.values"]},{"name":"open fun values(): Array<ViewRenderable.HorizontalAlignment>","description":"com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.values","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-horizontal-alignment/values.html","searchKeys":["values","open fun values(): Array<ViewRenderable.HorizontalAlignment>","com.google.ar.sceneform.rendering.ViewRenderable.HorizontalAlignment.values"]},{"name":"open fun values(): Array<ViewRenderable.VerticalAlignment>","description":"com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.values","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/-vertical-alignment/values.html","searchKeys":["values","open fun values(): Array<ViewRenderable.VerticalAlignment>","com.google.ar.sceneform.rendering.ViewRenderable.VerticalAlignment.values"]},{"name":"open fun values(j: Int): KeyVariantPairDef","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.values","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/values.html","searchKeys":["values","open fun values(j: Int): KeyVariantPairDef","com.google.ar.sceneform.lullmodel.VariantMapDef.values"]},{"name":"open fun values(j: Int): VariantArrayDefImpl","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.values","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/values.html","searchKeys":["values","open fun values(j: Int): VariantArrayDefImpl","com.google.ar.sceneform.lullmodel.VariantArrayDef.values"]},{"name":"open fun values(obj: KeyVariantPairDef, j: Int): KeyVariantPairDef","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.values","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/values.html","searchKeys":["values","open fun values(obj: KeyVariantPairDef, j: Int): KeyVariantPairDef","com.google.ar.sceneform.lullmodel.VariantMapDef.values"]},{"name":"open fun values(obj: VariantArrayDefImpl, j: Int): VariantArrayDefImpl","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.values","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/values.html","searchKeys":["values","open fun values(obj: VariantArrayDefImpl, j: Int): VariantArrayDefImpl","com.google.ar.sceneform.lullmodel.VariantArrayDef.values"]},{"name":"open fun valuesLength(): Int","description":"com.google.ar.sceneform.lullmodel.VariantArrayDef.valuesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-array-def/values-length.html","searchKeys":["valuesLength","open fun valuesLength(): Int","com.google.ar.sceneform.lullmodel.VariantArrayDef.valuesLength"]},{"name":"open fun valuesLength(): Int","description":"com.google.ar.sceneform.lullmodel.VariantMapDef.valuesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-map-def/values-length.html","searchKeys":["valuesLength","open fun valuesLength(): Int","com.google.ar.sceneform.lullmodel.VariantMapDef.valuesLength"]},{"name":"open fun version(): Int","description":"com.google.ar.sceneform.lullmodel.ModelDef.version","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-def/version.html","searchKeys":["version","open fun version(): Int","com.google.ar.sceneform.lullmodel.ModelDef.version"]},{"name":"open fun versionName(): String","description":"com.google.ar.sceneform.Sceneform.versionName","location":"sceneview/com.google.ar.sceneform/-sceneform/version-name.html","searchKeys":["versionName","open fun versionName(): String","com.google.ar.sceneform.Sceneform.versionName"]},{"name":"open fun vertexAttributes(j: Int): VertexAttribute","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-attributes.html","searchKeys":["vertexAttributes","open fun vertexAttributes(j: Int): VertexAttribute","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexAttributes"]},{"name":"open fun vertexAttributes(obj: VertexAttribute, j: Int): VertexAttribute","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexAttributes","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-attributes.html","searchKeys":["vertexAttributes","open fun vertexAttributes(obj: VertexAttribute, j: Int): VertexAttribute","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexAttributes"]},{"name":"open fun vertexAttributesLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexAttributesLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-attributes-length.html","searchKeys":["vertexAttributesLength","open fun vertexAttributesLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexAttributesLength"]},{"name":"open fun vertexData(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexData","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-data.html","searchKeys":["vertexData","open fun vertexData(j: Int): Int","com.google.ar.sceneform.lullmodel.BlendShape.vertexData"]},{"name":"open fun vertexData(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexData","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-data.html","searchKeys":["vertexData","open fun vertexData(j: Int): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexData"]},{"name":"open fun vertexDataAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexDataAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-data-as-byte-buffer.html","searchKeys":["vertexDataAsByteBuffer","open fun vertexDataAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.vertexDataAsByteBuffer"]},{"name":"open fun vertexDataAsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexDataAsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-data-as-byte-buffer.html","searchKeys":["vertexDataAsByteBuffer","open fun vertexDataAsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexDataAsByteBuffer"]},{"name":"open fun vertexDataInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexDataInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-data-in-byte-buffer.html","searchKeys":["vertexDataInByteBuffer","open fun vertexDataInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.vertexDataInByteBuffer"]},{"name":"open fun vertexDataInByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexDataInByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-data-in-byte-buffer.html","searchKeys":["vertexDataInByteBuffer","open fun vertexDataInByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexDataInByteBuffer"]},{"name":"open fun vertexDataLength(): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexDataLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-data-length.html","searchKeys":["vertexDataLength","open fun vertexDataLength(): Int","com.google.ar.sceneform.lullmodel.BlendShape.vertexDataLength"]},{"name":"open fun vertexDataLength(): Int","description":"com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexDataLength","location":"sceneview/com.google.ar.sceneform.lullmodel/-model-instance-def/vertex-data-length.html","searchKeys":["vertexDataLength","open fun vertexDataLength(): Int","com.google.ar.sceneform.lullmodel.ModelInstanceDef.vertexDataLength"]},{"name":"open fun vertexIndices16(j: Int): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices16.html","searchKeys":["vertexIndices16","open fun vertexIndices16(j: Int): Int","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16"]},{"name":"open fun vertexIndices16AsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16AsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices16-as-byte-buffer.html","searchKeys":["vertexIndices16AsByteBuffer","open fun vertexIndices16AsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16AsByteBuffer"]},{"name":"open fun vertexIndices16InByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16InByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices16-in-byte-buffer.html","searchKeys":["vertexIndices16InByteBuffer","open fun vertexIndices16InByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16InByteBuffer"]},{"name":"open fun vertexIndices16Length(): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16Length","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices16-length.html","searchKeys":["vertexIndices16Length","open fun vertexIndices16Length(): Int","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices16Length"]},{"name":"open fun vertexIndices32(j: Int): Long","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices32.html","searchKeys":["vertexIndices32","open fun vertexIndices32(j: Int): Long","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32"]},{"name":"open fun vertexIndices32AsByteBuffer(): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32AsByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices32-as-byte-buffer.html","searchKeys":["vertexIndices32AsByteBuffer","open fun vertexIndices32AsByteBuffer(): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32AsByteBuffer"]},{"name":"open fun vertexIndices32InByteBuffer(_bb: ByteBuffer): ByteBuffer","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32InByteBuffer","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices32-in-byte-buffer.html","searchKeys":["vertexIndices32InByteBuffer","open fun vertexIndices32InByteBuffer(_bb: ByteBuffer): ByteBuffer","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32InByteBuffer"]},{"name":"open fun vertexIndices32Length(): Int","description":"com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32Length","location":"sceneview/com.google.ar.sceneform.lullmodel/-blend-shape/vertex-indices32-length.html","searchKeys":["vertexIndices32Length","open fun vertexIndices32Length(): Int","com.google.ar.sceneform.lullmodel.BlendShape.vertexIndices32Length"]},{"name":"open fun viewToRay(viewPosition: Float2): Ray","description":"io.github.sceneview.components.CameraComponent.viewToRay","location":"sceneview/io.github.sceneview.components/-camera-component/view-to-ray.html","searchKeys":["viewToRay","open fun viewToRay(viewPosition: Float2): Ray","io.github.sceneview.components.CameraComponent.viewToRay"]},{"name":"open fun viewToWorld(viewPosition: Float2, z: Float = 1.0f): Float3","description":"io.github.sceneview.components.CameraComponent.viewToWorld","location":"sceneview/io.github.sceneview.components/-camera-component/view-to-world.html","searchKeys":["viewToWorld","open fun viewToWorld(viewPosition: Float2, z: Float = 1.0f): Float3","io.github.sceneview.components.CameraComponent.viewToWorld"]},{"name":"open fun w(): Float","description":"com.google.ar.sceneform.lullmodel.Quat.w","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/w.html","searchKeys":["w","open fun w(): Float","com.google.ar.sceneform.lullmodel.Quat.w"]},{"name":"open fun w(): Float","description":"com.google.ar.sceneform.lullmodel.Rect.w","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/w.html","searchKeys":["w","open fun w(): Float","com.google.ar.sceneform.lullmodel.Rect.w"]},{"name":"open fun w(): Float","description":"com.google.ar.sceneform.lullmodel.Vec4.w","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/w.html","searchKeys":["w","open fun w(): Float","com.google.ar.sceneform.lullmodel.Vec4.w"]},{"name":"open fun w(): Int","description":"com.google.ar.sceneform.lullmodel.Recti.w","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/w.html","searchKeys":["w","open fun w(): Int","com.google.ar.sceneform.lullmodel.Recti.w"]},{"name":"open fun worldToView(worldPosition: Position): Float2","description":"io.github.sceneview.components.CameraComponent.worldToView","location":"sceneview/io.github.sceneview.components/-camera-component/world-to-view.html","searchKeys":["worldToView","open fun worldToView(worldPosition: Position): Float2","io.github.sceneview.components.CameraComponent.worldToView"]},{"name":"open fun worldTransform(worldTransform: Transform, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","description":"io.github.sceneview.node.Node.worldTransform","location":"sceneview/io.github.sceneview.node/-node/world-transform.html","searchKeys":["worldTransform","open fun worldTransform(worldTransform: Transform, smooth: Boolean = isSmoothTransformEnabled, smoothSpeed: Float = smoothTransformSpeed)","io.github.sceneview.node.Node.worldTransform"]},{"name":"open fun wrapR(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.wrapR","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/wrap-r.html","searchKeys":["wrapR","open fun wrapR(): Int","com.google.ar.sceneform.lullmodel.TextureDef.wrapR"]},{"name":"open fun wrapS(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.wrapS","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/wrap-s.html","searchKeys":["wrapS","open fun wrapS(): Int","com.google.ar.sceneform.lullmodel.TextureDef.wrapS"]},{"name":"open fun wrapT(): Int","description":"com.google.ar.sceneform.lullmodel.TextureDef.wrapT","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-def/wrap-t.html","searchKeys":["wrapT","open fun wrapT(): Int","com.google.ar.sceneform.lullmodel.TextureDef.wrapT"]},{"name":"open fun x(): Float","description":"com.google.ar.sceneform.lullmodel.Quat.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/x.html","searchKeys":["x","open fun x(): Float","com.google.ar.sceneform.lullmodel.Quat.x"]},{"name":"open fun x(): Float","description":"com.google.ar.sceneform.lullmodel.Rect.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/x.html","searchKeys":["x","open fun x(): Float","com.google.ar.sceneform.lullmodel.Rect.x"]},{"name":"open fun x(): Float","description":"com.google.ar.sceneform.lullmodel.Vec2.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/x.html","searchKeys":["x","open fun x(): Float","com.google.ar.sceneform.lullmodel.Vec2.x"]},{"name":"open fun x(): Float","description":"com.google.ar.sceneform.lullmodel.Vec3.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/x.html","searchKeys":["x","open fun x(): Float","com.google.ar.sceneform.lullmodel.Vec3.x"]},{"name":"open fun x(): Float","description":"com.google.ar.sceneform.lullmodel.Vec4.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/x.html","searchKeys":["x","open fun x(): Float","com.google.ar.sceneform.lullmodel.Vec4.x"]},{"name":"open fun x(): Int","description":"com.google.ar.sceneform.lullmodel.Recti.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/x.html","searchKeys":["x","open fun x(): Int","com.google.ar.sceneform.lullmodel.Recti.x"]},{"name":"open fun x(): Int","description":"com.google.ar.sceneform.lullmodel.Vec2i.x","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/x.html","searchKeys":["x","open fun x(): Int","com.google.ar.sceneform.lullmodel.Vec2i.x"]},{"name":"open fun y(): Float","description":"com.google.ar.sceneform.lullmodel.Quat.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/y.html","searchKeys":["y","open fun y(): Float","com.google.ar.sceneform.lullmodel.Quat.y"]},{"name":"open fun y(): Float","description":"com.google.ar.sceneform.lullmodel.Rect.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-rect/y.html","searchKeys":["y","open fun y(): Float","com.google.ar.sceneform.lullmodel.Rect.y"]},{"name":"open fun y(): Float","description":"com.google.ar.sceneform.lullmodel.Vec2.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2/y.html","searchKeys":["y","open fun y(): Float","com.google.ar.sceneform.lullmodel.Vec2.y"]},{"name":"open fun y(): Float","description":"com.google.ar.sceneform.lullmodel.Vec3.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/y.html","searchKeys":["y","open fun y(): Float","com.google.ar.sceneform.lullmodel.Vec3.y"]},{"name":"open fun y(): Float","description":"com.google.ar.sceneform.lullmodel.Vec4.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/y.html","searchKeys":["y","open fun y(): Float","com.google.ar.sceneform.lullmodel.Vec4.y"]},{"name":"open fun y(): Int","description":"com.google.ar.sceneform.lullmodel.Recti.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-recti/y.html","searchKeys":["y","open fun y(): Int","com.google.ar.sceneform.lullmodel.Recti.y"]},{"name":"open fun y(): Int","description":"com.google.ar.sceneform.lullmodel.Vec2i.y","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec2i/y.html","searchKeys":["y","open fun y(): Int","com.google.ar.sceneform.lullmodel.Vec2i.y"]},{"name":"open fun z(): Float","description":"com.google.ar.sceneform.lullmodel.Quat.z","location":"sceneview/com.google.ar.sceneform.lullmodel/-quat/z.html","searchKeys":["z","open fun z(): Float","com.google.ar.sceneform.lullmodel.Quat.z"]},{"name":"open fun z(): Float","description":"com.google.ar.sceneform.lullmodel.Vec3.z","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec3/z.html","searchKeys":["z","open fun z(): Float","com.google.ar.sceneform.lullmodel.Vec3.z"]},{"name":"open fun z(): Float","description":"com.google.ar.sceneform.lullmodel.Vec4.z","location":"sceneview/com.google.ar.sceneform.lullmodel/-vec4/z.html","searchKeys":["z","open fun z(): Float","com.google.ar.sceneform.lullmodel.Vec4.z"]},{"name":"open fun zero(): Vector3","description":"io.github.sceneview.collision.Vector3.zero","location":"sceneview/io.github.sceneview.collision/-vector3/zero.html","searchKeys":["zero","open fun zero(): Vector3","io.github.sceneview.collision.Vector3.zero"]},{"name":"open operator fun List<MaterialInstance>.set(primitiveIndex: Int, materialInstance: MaterialInstance)","description":"io.github.sceneview.components.RenderableComponent.set","location":"sceneview/io.github.sceneview.components/-renderable-component/set.html","searchKeys":["set","open operator fun List<MaterialInstance>.set(primitiveIndex: Int, materialInstance: MaterialInstance)","io.github.sceneview.components.RenderableComponent.set"]},{"name":"open override fun build(engine: Engine): Cube","description":"io.github.sceneview.geometries.Cube.Builder.build","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Cube","io.github.sceneview.geometries.Cube.Builder.build"]},{"name":"open override fun build(engine: Engine): Cylinder","description":"io.github.sceneview.geometries.Cylinder.Builder.build","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Cylinder","io.github.sceneview.geometries.Cylinder.Builder.build"]},{"name":"open override fun build(engine: Engine): Plane","description":"io.github.sceneview.geometries.Plane.Builder.build","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Plane","io.github.sceneview.geometries.Plane.Builder.build"]},{"name":"open override fun build(engine: Engine): Polygon","description":"io.github.sceneview.geometries.Polygon.Builder.build","location":"sceneview/io.github.sceneview.geometries/-polygon/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Polygon","io.github.sceneview.geometries.Polygon.Builder.build"]},{"name":"open override fun build(engine: Engine): Sphere","description":"io.github.sceneview.geometries.Sphere.Builder.build","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Sphere","io.github.sceneview.geometries.Sphere.Builder.build"]},{"name":"open override fun build(engine: Engine): Texture","description":"io.github.sceneview.texture.ImageTexture.Builder.build","location":"sceneview/io.github.sceneview.texture/-image-texture/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Texture","io.github.sceneview.texture.ImageTexture.Builder.build"]},{"name":"open override fun build(engine: Engine): Texture","description":"io.github.sceneview.texture.VideoTexture.Builder.build","location":"sceneview/io.github.sceneview.texture/-video-texture/-builder/build.html","searchKeys":["build","open override fun build(engine: Engine): Texture","io.github.sceneview.texture.VideoTexture.Builder.build"]},{"name":"open override fun close()","description":"io.github.sceneview.environment.Environment.close","location":"sceneview/io.github.sceneview.environment/-environment/close.html","searchKeys":["close","open override fun close()","io.github.sceneview.environment.Environment.close"]},{"name":"open override fun destroy()","description":"io.github.sceneview.environment.HDREnvironment.destroy","location":"sceneview/io.github.sceneview.environment/-h-d-r-environment/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.environment.HDREnvironment.destroy"]},{"name":"open override fun destroy()","description":"io.github.sceneview.node.CameraNode.destroy","location":"sceneview/io.github.sceneview.node/-camera-node/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.node.CameraNode.destroy"]},{"name":"open override fun destroy()","description":"io.github.sceneview.node.ImageNode.destroy","location":"sceneview/io.github.sceneview.node/-image-node/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.node.ImageNode.destroy"]},{"name":"open override fun destroy()","description":"io.github.sceneview.node.LightNode.destroy","location":"sceneview/io.github.sceneview.node/-light-node/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.node.LightNode.destroy"]},{"name":"open override fun destroy()","description":"io.github.sceneview.node.ViewNode.destroy","location":"sceneview/io.github.sceneview.node/-view-node/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.node.ViewNode.destroy"]},{"name":"open override fun getTransformationMatrix(): Matrix","description":"io.github.sceneview.node.Node.getTransformationMatrix","location":"sceneview/io.github.sceneview.node/-node/get-transformation-matrix.html","searchKeys":["getTransformationMatrix","open override fun getTransformationMatrix(): Matrix","io.github.sceneview.node.Node.getTransformationMatrix"]},{"name":"open override fun onContextClick(e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onContextClick","location":"sceneview/io.github.sceneview.node/-node/on-context-click.html","searchKeys":["onContextClick","open override fun onContextClick(e: MotionEvent): Boolean","io.github.sceneview.node.Node.onContextClick"]},{"name":"open override fun onContextClick(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onContextClick","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-context-click.html","searchKeys":["onContextClick","open override fun onContextClick(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onContextClick"]},{"name":"open override fun onDoubleTap(e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onDoubleTap","location":"sceneview/io.github.sceneview.node/-node/on-double-tap.html","searchKeys":["onDoubleTap","open override fun onDoubleTap(e: MotionEvent): Boolean","io.github.sceneview.node.Node.onDoubleTap"]},{"name":"open override fun onDoubleTap(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onDoubleTap","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-double-tap.html","searchKeys":["onDoubleTap","open override fun onDoubleTap(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onDoubleTap"]},{"name":"open override fun onDoubleTapEvent(e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onDoubleTapEvent","location":"sceneview/io.github.sceneview.node/-node/on-double-tap-event.html","searchKeys":["onDoubleTapEvent","open override fun onDoubleTapEvent(e: MotionEvent): Boolean","io.github.sceneview.node.Node.onDoubleTapEvent"]},{"name":"open override fun onDoubleTapEvent(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onDoubleTapEvent","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-double-tap-event.html","searchKeys":["onDoubleTapEvent","open override fun onDoubleTapEvent(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onDoubleTapEvent"]},{"name":"open override fun onDown(e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onDown","location":"sceneview/io.github.sceneview.node/-node/on-down.html","searchKeys":["onDown","open override fun onDown(e: MotionEvent): Boolean","io.github.sceneview.node.Node.onDown"]},{"name":"open override fun onDown(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onDown","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-down.html","searchKeys":["onDown","open override fun onDown(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onDown"]},{"name":"open override fun onFling(e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onFling","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-fling.html","searchKeys":["onFling","open override fun onFling(e1: MotionEvent?, e2: MotionEvent, node: Node?, velocity: Float2)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onFling"]},{"name":"open override fun onFling(e1: MotionEvent?, e2: MotionEvent, velocityX: Float, velocityY: Float): Boolean","description":"io.github.sceneview.node.Node.onFling","location":"sceneview/io.github.sceneview.node/-node/on-fling.html","searchKeys":["onFling","open override fun onFling(e1: MotionEvent?, e2: MotionEvent, velocityX: Float, velocityY: Float): Boolean","io.github.sceneview.node.Node.onFling"]},{"name":"open override fun onFrame(frameTimeNanos: Long)","description":"io.github.sceneview.node.ModelNode.onFrame","location":"sceneview/io.github.sceneview.node/-model-node/on-frame.html","searchKeys":["onFrame","open override fun onFrame(frameTimeNanos: Long)","io.github.sceneview.node.ModelNode.onFrame"]},{"name":"open override fun onFrame(frameTimeNanos: Long)","description":"io.github.sceneview.node.ViewNode.onFrame","location":"sceneview/io.github.sceneview.node/-view-node/on-frame.html","searchKeys":["onFrame","open override fun onFrame(frameTimeNanos: Long)","io.github.sceneview.node.ViewNode.onFrame"]},{"name":"open override fun onGrabBegin(x: Int, y: Int, strafe: Boolean)","description":"io.github.sceneview.SceneView.CameraGestureListener.onGrabBegin","location":"sceneview/io.github.sceneview/-scene-view/-camera-gesture-listener/on-grab-begin.html","searchKeys":["onGrabBegin","open override fun onGrabBegin(x: Int, y: Int, strafe: Boolean)","io.github.sceneview.SceneView.CameraGestureListener.onGrabBegin"]},{"name":"open override fun onGrabBegin(x: Int, y: Int, strafe: Boolean)","description":"io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onGrabBegin","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-simple-on-camera-gesture-listener/on-grab-begin.html","searchKeys":["onGrabBegin","open override fun onGrabBegin(x: Int, y: Int, strafe: Boolean)","io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onGrabBegin"]},{"name":"open override fun onGrabEnd()","description":"io.github.sceneview.SceneView.CameraGestureListener.onGrabEnd","location":"sceneview/io.github.sceneview/-scene-view/-camera-gesture-listener/on-grab-end.html","searchKeys":["onGrabEnd","open override fun onGrabEnd()","io.github.sceneview.SceneView.CameraGestureListener.onGrabEnd"]},{"name":"open override fun onGrabEnd()","description":"io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onGrabEnd","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-simple-on-camera-gesture-listener/on-grab-end.html","searchKeys":["onGrabEnd","open override fun onGrabEnd()","io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onGrabEnd"]},{"name":"open override fun onGrabUpdate(x: Int, y: Int)","description":"io.github.sceneview.SceneView.CameraGestureListener.onGrabUpdate","location":"sceneview/io.github.sceneview/-scene-view/-camera-gesture-listener/on-grab-update.html","searchKeys":["onGrabUpdate","open override fun onGrabUpdate(x: Int, y: Int)","io.github.sceneview.SceneView.CameraGestureListener.onGrabUpdate"]},{"name":"open override fun onGrabUpdate(x: Int, y: Int)","description":"io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onGrabUpdate","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-simple-on-camera-gesture-listener/on-grab-update.html","searchKeys":["onGrabUpdate","open override fun onGrabUpdate(x: Int, y: Int)","io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onGrabUpdate"]},{"name":"open override fun onLongPress(e: MotionEvent)","description":"io.github.sceneview.node.Node.onLongPress","location":"sceneview/io.github.sceneview.node/-node/on-long-press.html","searchKeys":["onLongPress","open override fun onLongPress(e: MotionEvent)","io.github.sceneview.node.Node.onLongPress"]},{"name":"open override fun onLongPress(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onLongPress","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-long-press.html","searchKeys":["onLongPress","open override fun onLongPress(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onLongPress"]},{"name":"open override fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener.onMove","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-simple-on-move-listener/on-move.html","searchKeys":["onMove","open override fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener.onMove"]},{"name":"open override fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onMove","location":"sceneview/io.github.sceneview.node/-node/on-move.html","searchKeys":["onMove","open override fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.node.Node.onMove"]},{"name":"open override fun onMove(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onMove","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-move.html","searchKeys":["onMove","open override fun onMove(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onMove"]},{"name":"open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener.onMoveBegin","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-simple-on-move-listener/on-move-begin.html","searchKeys":["onMoveBegin","open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener.onMoveBegin"]},{"name":"open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onMoveBegin","location":"sceneview/io.github.sceneview.node/-node/on-move-begin.html","searchKeys":["onMoveBegin","open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.node.Node.onMoveBegin"]},{"name":"open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onMoveBegin","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-move-begin.html","searchKeys":["onMoveBegin","open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onMoveBegin"]},{"name":"open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","description":"io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener.onMoveEnd","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/-simple-on-move-listener/on-move-end.html","searchKeys":["onMoveEnd","open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","io.github.sceneview.gesture.MoveGestureDetector.SimpleOnMoveListener.onMoveEnd"]},{"name":"open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","description":"io.github.sceneview.node.Node.onMoveEnd","location":"sceneview/io.github.sceneview.node/-node/on-move-end.html","searchKeys":["onMoveEnd","open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","io.github.sceneview.node.Node.onMoveEnd"]},{"name":"open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onMoveEnd","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-move-end.html","searchKeys":["onMoveEnd","open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onMoveEnd"]},{"name":"open override fun onRotate(detector: RotateGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener.onRotate","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-simple-on-rotate-listener/on-rotate.html","searchKeys":["onRotate","open override fun onRotate(detector: RotateGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener.onRotate"]},{"name":"open override fun onRotate(detector: RotateGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onRotate","location":"sceneview/io.github.sceneview.node/-node/on-rotate.html","searchKeys":["onRotate","open override fun onRotate(detector: RotateGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.node.Node.onRotate"]},{"name":"open override fun onRotate(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onRotate","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-rotate.html","searchKeys":["onRotate","open override fun onRotate(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onRotate"]},{"name":"open override fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener.onRotateBegin","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-simple-on-rotate-listener/on-rotate-begin.html","searchKeys":["onRotateBegin","open override fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener.onRotateBegin"]},{"name":"open override fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onRotateBegin","location":"sceneview/io.github.sceneview.node/-node/on-rotate-begin.html","searchKeys":["onRotateBegin","open override fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.node.Node.onRotateBegin"]},{"name":"open override fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onRotateBegin","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-rotate-begin.html","searchKeys":["onRotateBegin","open override fun onRotateBegin(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onRotateBegin"]},{"name":"open override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent)","description":"io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener.onRotateEnd","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/-simple-on-rotate-listener/on-rotate-end.html","searchKeys":["onRotateEnd","open override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent)","io.github.sceneview.gesture.RotateGestureDetector.SimpleOnRotateListener.onRotateEnd"]},{"name":"open override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent)","description":"io.github.sceneview.node.Node.onRotateEnd","location":"sceneview/io.github.sceneview.node/-node/on-rotate-end.html","searchKeys":["onRotateEnd","open override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent)","io.github.sceneview.node.Node.onRotateEnd"]},{"name":"open override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onRotateEnd","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-rotate-end.html","searchKeys":["onRotateEnd","open override fun onRotateEnd(detector: RotateGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onRotateEnd"]},{"name":"open override fun onScale(detector: ScaleGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener.onScale","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-simple-on-scale-listener/on-scale.html","searchKeys":["onScale","open override fun onScale(detector: ScaleGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener.onScale"]},{"name":"open override fun onScale(detector: ScaleGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onScale","location":"sceneview/io.github.sceneview.node/-node/on-scale.html","searchKeys":["onScale","open override fun onScale(detector: ScaleGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.node.Node.onScale"]},{"name":"open override fun onScale(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScale","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-scale.html","searchKeys":["onScale","open override fun onScale(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScale"]},{"name":"open override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener.onScaleBegin","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-simple-on-scale-listener/on-scale-begin.html","searchKeys":["onScaleBegin","open override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener.onScaleBegin"]},{"name":"open override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onScaleBegin","location":"sceneview/io.github.sceneview.node/-node/on-scale-begin.html","searchKeys":["onScaleBegin","open override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.node.Node.onScaleBegin"]},{"name":"open override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScaleBegin","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-scale-begin.html","searchKeys":["onScaleBegin","open override fun onScaleBegin(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScaleBegin"]},{"name":"open override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent)","description":"io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener.onScaleEnd","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/-simple-on-scale-listener/on-scale-end.html","searchKeys":["onScaleEnd","open override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent)","io.github.sceneview.gesture.ScaleGestureDetector.SimpleOnScaleListener.onScaleEnd"]},{"name":"open override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent)","description":"io.github.sceneview.node.Node.onScaleEnd","location":"sceneview/io.github.sceneview.node/-node/on-scale-end.html","searchKeys":["onScaleEnd","open override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent)","io.github.sceneview.node.Node.onScaleEnd"]},{"name":"open override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScaleEnd","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-scale-end.html","searchKeys":["onScaleEnd","open override fun onScaleEnd(detector: ScaleGestureDetector, e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScaleEnd"]},{"name":"open override fun onScroll(e1: MotionEvent?, e2: MotionEvent, distanceX: Float, distanceY: Float): Boolean","description":"io.github.sceneview.node.Node.onScroll","location":"sceneview/io.github.sceneview.node/-node/on-scroll.html","searchKeys":["onScroll","open override fun onScroll(e1: MotionEvent?, e2: MotionEvent, distanceX: Float, distanceY: Float): Boolean","io.github.sceneview.node.Node.onScroll"]},{"name":"open override fun onScroll(e1: MotionEvent?, e2: MotionEvent, node: Node?, distance: Float2)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScroll","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-scroll.html","searchKeys":["onScroll","open override fun onScroll(e1: MotionEvent?, e2: MotionEvent, node: Node?, distance: Float2)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onScroll"]},{"name":"open override fun onScroll(x: Int, y: Int, scrollDelta: Float)","description":"io.github.sceneview.SceneView.CameraGestureListener.onScroll","location":"sceneview/io.github.sceneview/-scene-view/-camera-gesture-listener/on-scroll.html","searchKeys":["onScroll","open override fun onScroll(x: Int, y: Int, scrollDelta: Float)","io.github.sceneview.SceneView.CameraGestureListener.onScroll"]},{"name":"open override fun onScroll(x: Int, y: Int, scrollDelta: Float)","description":"io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onScroll","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/-simple-on-camera-gesture-listener/on-scroll.html","searchKeys":["onScroll","open override fun onScroll(x: Int, y: Int, scrollDelta: Float)","io.github.sceneview.gesture.CameraGestureDetector.SimpleOnCameraGestureListener.onScroll"]},{"name":"open override fun onShowPress(e: MotionEvent)","description":"io.github.sceneview.node.Node.onShowPress","location":"sceneview/io.github.sceneview.node/-node/on-show-press.html","searchKeys":["onShowPress","open override fun onShowPress(e: MotionEvent)","io.github.sceneview.node.Node.onShowPress"]},{"name":"open override fun onShowPress(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onShowPress","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-show-press.html","searchKeys":["onShowPress","open override fun onShowPress(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onShowPress"]},{"name":"open override fun onSingleTapConfirmed(e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onSingleTapConfirmed","location":"sceneview/io.github.sceneview.node/-node/on-single-tap-confirmed.html","searchKeys":["onSingleTapConfirmed","open override fun onSingleTapConfirmed(e: MotionEvent): Boolean","io.github.sceneview.node.Node.onSingleTapConfirmed"]},{"name":"open override fun onSingleTapConfirmed(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onSingleTapConfirmed","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-single-tap-confirmed.html","searchKeys":["onSingleTapConfirmed","open override fun onSingleTapConfirmed(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onSingleTapConfirmed"]},{"name":"open override fun onSingleTapUp(e: MotionEvent): Boolean","description":"io.github.sceneview.node.Node.onSingleTapUp","location":"sceneview/io.github.sceneview.node/-node/on-single-tap-up.html","searchKeys":["onSingleTapUp","open override fun onSingleTapUp(e: MotionEvent): Boolean","io.github.sceneview.node.Node.onSingleTapUp"]},{"name":"open override fun onSingleTapUp(e: MotionEvent, node: Node?)","description":"io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onSingleTapUp","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/-simple-on-gesture-listener/on-single-tap-up.html","searchKeys":["onSingleTapUp","open override fun onSingleTapUp(e: MotionEvent, node: Node?)","io.github.sceneview.gesture.GestureDetector.SimpleOnGestureListener.onSingleTapUp"]},{"name":"open override fun onTouchEvent(event: MotionEvent): Boolean","description":"io.github.sceneview.gesture.ScaleGestureDetector.onTouchEvent","location":"sceneview/io.github.sceneview.gesture/-scale-gesture-detector/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(event: MotionEvent): Boolean","io.github.sceneview.gesture.ScaleGestureDetector.onTouchEvent"]},{"name":"open override fun onTouchEvent(motionEvent: MotionEvent): Boolean","description":"io.github.sceneview.SceneView.onTouchEvent","location":"sceneview/io.github.sceneview/-scene-view/on-touch-event.html","searchKeys":["onTouchEvent","open override fun onTouchEvent(motionEvent: MotionEvent): Boolean","io.github.sceneview.SceneView.onTouchEvent"]},{"name":"open override fun reset()","description":"io.github.sceneview.collision.HitResult.reset","location":"sceneview/io.github.sceneview.collision/-hit-result/reset.html","searchKeys":["reset","open override fun reset()","io.github.sceneview.collision.HitResult.reset"]},{"name":"open override val geometry: Cube","description":"io.github.sceneview.node.CubeNode.geometry","location":"sceneview/io.github.sceneview.node/-cube-node/geometry.html","searchKeys":["geometry","open override val geometry: Cube","io.github.sceneview.node.CubeNode.geometry"]},{"name":"open override val geometry: Cylinder","description":"io.github.sceneview.node.CylinderNode.geometry","location":"sceneview/io.github.sceneview.node/-cylinder-node/geometry.html","searchKeys":["geometry","open override val geometry: Cylinder","io.github.sceneview.node.CylinderNode.geometry"]},{"name":"open override val geometry: Plane","description":"io.github.sceneview.node.PlaneNode.geometry","location":"sceneview/io.github.sceneview.node/-plane-node/geometry.html","searchKeys":["geometry","open override val geometry: Plane","io.github.sceneview.node.PlaneNode.geometry"]},{"name":"open override val geometry: Polygon","description":"io.github.sceneview.node.PolygonNode.geometry","location":"sceneview/io.github.sceneview.node/-polygon-node/geometry.html","searchKeys":["geometry","open override val geometry: Polygon","io.github.sceneview.node.PolygonNode.geometry"]},{"name":"open override val geometry: Sphere","description":"io.github.sceneview.node.SphereNode.geometry","location":"sceneview/io.github.sceneview.node/-sphere-node/geometry.html","searchKeys":["geometry","open override val geometry: Sphere","io.github.sceneview.node.SphereNode.geometry"]},{"name":"open override val modelInstance: ModelInstance","description":"io.github.sceneview.node.ModelNode.CameraNode.modelInstance","location":"sceneview/io.github.sceneview.node/-model-node/-camera-node/model-instance.html","searchKeys":["modelInstance","open override val modelInstance: ModelInstance","io.github.sceneview.node.ModelNode.CameraNode.modelInstance"]},{"name":"open override val modelInstance: ModelInstance","description":"io.github.sceneview.node.ModelNode.LightNode.modelInstance","location":"sceneview/io.github.sceneview.node/-model-node/-light-node/model-instance.html","searchKeys":["modelInstance","open override val modelInstance: ModelInstance","io.github.sceneview.node.ModelNode.LightNode.modelInstance"]},{"name":"open override val modelInstance: ModelInstance","description":"io.github.sceneview.node.ModelNode.RenderableNode.modelInstance","location":"sceneview/io.github.sceneview.node/-model-node/-renderable-node/model-instance.html","searchKeys":["modelInstance","open override val modelInstance: ModelInstance","io.github.sceneview.node.ModelNode.RenderableNode.modelInstance"]},{"name":"open override var far: Float","description":"io.github.sceneview.node.CameraNode.far","location":"sceneview/io.github.sceneview.node/-camera-node/far.html","searchKeys":["far","open override var far: Float","io.github.sceneview.node.CameraNode.far"]},{"name":"open override var focalLength: Double","description":"io.github.sceneview.node.CameraNode.focalLength","location":"sceneview/io.github.sceneview.node/-camera-node/focal-length.html","searchKeys":["focalLength","open override var focalLength: Double","io.github.sceneview.node.CameraNode.focalLength"]},{"name":"open override var isEditable: Boolean","description":"io.github.sceneview.node.CameraNode.isEditable","location":"sceneview/io.github.sceneview.node/-camera-node/is-editable.html","searchKeys":["isEditable","open override var isEditable: Boolean","io.github.sceneview.node.CameraNode.isEditable"]},{"name":"open override var isEditable: Boolean","description":"io.github.sceneview.node.LightNode.isEditable","location":"sceneview/io.github.sceneview.node/-light-node/is-editable.html","searchKeys":["isEditable","open override var isEditable: Boolean","io.github.sceneview.node.LightNode.isEditable"]},{"name":"open override var isTouchable: Boolean","description":"io.github.sceneview.node.CameraNode.isTouchable","location":"sceneview/io.github.sceneview.node/-camera-node/is-touchable.html","searchKeys":["isTouchable","open override var isTouchable: Boolean","io.github.sceneview.node.CameraNode.isTouchable"]},{"name":"open override var isTouchable: Boolean","description":"io.github.sceneview.node.LightNode.isTouchable","location":"sceneview/io.github.sceneview.node/-light-node/is-touchable.html","searchKeys":["isTouchable","open override var isTouchable: Boolean","io.github.sceneview.node.LightNode.isTouchable"]},{"name":"open override var near: Float","description":"io.github.sceneview.node.CameraNode.near","location":"sceneview/io.github.sceneview.node/-camera-node/near.html","searchKeys":["near","open override var near: Float","io.github.sceneview.node.CameraNode.near"]},{"name":"open val animationFrameRate: Int","description":"com.google.ar.sceneform.rendering.Renderable.animationFrameRate","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/animation-frame-rate.html","searchKeys":["animationFrameRate","open val animationFrameRate: Int","com.google.ar.sceneform.rendering.Renderable.animationFrameRate"]},{"name":"open val aperture: Float","description":"io.github.sceneview.components.CameraComponent.aperture","location":"sceneview/io.github.sceneview.components/-camera-component/aperture.html","searchKeys":["aperture","open val aperture: Float","io.github.sceneview.components.CameraComponent.aperture"]},{"name":"open val average: Double","description":"com.google.ar.sceneform.utilities.MovingAverage.average","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average/average.html","searchKeys":["average","open val average: Double","com.google.ar.sceneform.utilities.MovingAverage.average"]},{"name":"open val camera: FilamentCamera","description":"io.github.sceneview.components.CameraComponent.camera","location":"sceneview/io.github.sceneview.components/-camera-component/camera.html","searchKeys":["camera","open val camera: FilamentCamera","io.github.sceneview.components.CameraComponent.camera"]},{"name":"open val cameraNode: CameraNode","description":"io.github.sceneview.SceneView.cameraNode","location":"sceneview/io.github.sceneview/-scene-view/camera-node.html","searchKeys":["cameraNode","open val cameraNode: CameraNode","io.github.sceneview.SceneView.cameraNode"]},{"name":"open val cullingFar: Float","description":"io.github.sceneview.components.CameraComponent.cullingFar","location":"sceneview/io.github.sceneview.components/-camera-component/culling-far.html","searchKeys":["cullingFar","open val cullingFar: Float","io.github.sceneview.components.CameraComponent.cullingFar"]},{"name":"open val cullingProjectionTransform: Mat4","description":"io.github.sceneview.components.CameraComponent.cullingProjectionTransform","location":"sceneview/io.github.sceneview.components/-camera-component/culling-projection-transform.html","searchKeys":["cullingProjectionTransform","open val cullingProjectionTransform: Mat4","io.github.sceneview.components.CameraComponent.cullingProjectionTransform"]},{"name":"open val duration: Float","description":"io.github.sceneview.animation.ModelAnimation.duration","location":"sceneview/io.github.sceneview.animation/-model-animation/duration.html","searchKeys":["duration","open val duration: Float","io.github.sceneview.animation.ModelAnimation.duration"]},{"name":"open val elapsedTimeMs: Long","description":"com.google.ar.sceneform.utilities.TimeAccumulator.elapsedTimeMs","location":"sceneview/com.google.ar.sceneform.utilities/-time-accumulator/elapsed-time-ms.html","searchKeys":["elapsedTimeMs","open val elapsedTimeMs: Long","com.google.ar.sceneform.utilities.TimeAccumulator.elapsedTimeMs"]},{"name":"open val enabledAttributes: List<MutableSet<VertexBuffer.VertexAttribute>>","description":"io.github.sceneview.components.RenderableComponent.enabledAttributes","location":"sceneview/io.github.sceneview.components/-renderable-component/enabled-attributes.html","searchKeys":["enabledAttributes","open val enabledAttributes: List<MutableSet<VertexBuffer.VertexAttribute>>","io.github.sceneview.components.RenderableComponent.enabledAttributes"]},{"name":"open val entity: Int","description":"com.google.ar.sceneform.rendering.RenderableInstance.entity","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/entity.html","searchKeys":["entity","open val entity: Int","com.google.ar.sceneform.rendering.RenderableInstance.entity"]},{"name":"open val extras: String?","description":"io.github.sceneview.node.ModelNode.ChildNode.extras","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/extras.html","searchKeys":["extras","open val extras: String?","io.github.sceneview.node.ModelNode.ChildNode.extras"]},{"name":"open val far: Float","description":"io.github.sceneview.components.CameraComponent.far","location":"sceneview/io.github.sceneview.components/-camera-component/far.html","searchKeys":["far","open val far: Float","io.github.sceneview.components.CameraComponent.far"]},{"name":"open val filamentAsset: FilamentAsset","description":"com.google.ar.sceneform.rendering.RenderableInstance.filamentAsset","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/filament-asset.html","searchKeys":["filamentAsset","open val filamentAsset: FilamentAsset","com.google.ar.sceneform.rendering.RenderableInstance.filamentAsset"]},{"name":"open val filamentStream: Stream","description":"com.google.ar.sceneform.rendering.ExternalTexture.filamentStream","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/filament-stream.html","searchKeys":["filamentStream","open val filamentStream: Stream","com.google.ar.sceneform.rendering.ExternalTexture.filamentStream"]},{"name":"open val filamentTexture: Texture","description":"com.google.ar.sceneform.rendering.ExternalTexture.filamentTexture","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/filament-texture.html","searchKeys":["filamentTexture","open val filamentTexture: Texture","com.google.ar.sceneform.rendering.ExternalTexture.filamentTexture"]},{"name":"open val focalLength: Double","description":"io.github.sceneview.components.CameraComponent.focalLength","location":"sceneview/io.github.sceneview.components/-camera-component/focal-length.html","searchKeys":["focalLength","open val focalLength: Double","io.github.sceneview.components.CameraComponent.focalLength"]},{"name":"open val forwardDirection: Direction","description":"io.github.sceneview.components.CameraComponent.forwardDirection","location":"sceneview/io.github.sceneview.components/-camera-component/forward-direction.html","searchKeys":["forwardDirection","open val forwardDirection: Direction","io.github.sceneview.components.CameraComponent.forwardDirection"]},{"name":"open val frameRate: Int","description":"io.github.sceneview.animation.ModelAnimation.frameRate","location":"sceneview/io.github.sceneview.animation/-model-animation/frame-rate.html","searchKeys":["frameRate","open val frameRate: Int","io.github.sceneview.animation.ModelAnimation.frameRate"]},{"name":"open val geometry: Geometry","description":"io.github.sceneview.node.GeometryNode.geometry","location":"sceneview/io.github.sceneview.node/-geometry-node/geometry.html","searchKeys":["geometry","open val geometry: Geometry","io.github.sceneview.node.GeometryNode.geometry"]},{"name":"open val innerConeAngle: Float","description":"io.github.sceneview.components.LightComponent.innerConeAngle","location":"sceneview/io.github.sceneview.components/-light-component/inner-cone-angle.html","searchKeys":["innerConeAngle","open val innerConeAngle: Float","io.github.sceneview.components.LightComponent.innerConeAngle"]},{"name":"open val instance: ResourceManager","description":"com.google.ar.sceneform.rendering.ResourceManager.instance","location":"sceneview/com.google.ar.sceneform.rendering/-resource-manager/instance.html","searchKeys":["instance","open val instance: ResourceManager","com.google.ar.sceneform.rendering.ResourceManager.instance"]},{"name":"open val leftDirection: Direction","description":"io.github.sceneview.components.CameraComponent.leftDirection","location":"sceneview/io.github.sceneview.components/-camera-component/left-direction.html","searchKeys":["leftDirection","open val leftDirection: Direction","io.github.sceneview.components.CameraComponent.leftDirection"]},{"name":"open val lightInstance: EntityInstance","description":"io.github.sceneview.components.LightComponent.lightInstance","location":"sceneview/io.github.sceneview.components/-light-component/light-instance.html","searchKeys":["lightInstance","open val lightInstance: EntityInstance","io.github.sceneview.components.LightComponent.lightInstance"]},{"name":"open val lightManager: LightManager","description":"io.github.sceneview.components.LightComponent.lightManager","location":"sceneview/io.github.sceneview.components/-light-component/light-manager.html","searchKeys":["lightManager","open val lightManager: LightManager","io.github.sceneview.components.LightComponent.lightManager"]},{"name":"open val model: FilamentAsset","description":"io.github.sceneview.node.ModelNode.ChildNode.model","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/model.html","searchKeys":["model","open val model: FilamentAsset","io.github.sceneview.node.ModelNode.ChildNode.model"]},{"name":"open val morphTargetCount: Int","description":"io.github.sceneview.components.RenderableComponent.morphTargetCount","location":"sceneview/io.github.sceneview.components/-renderable-component/morph-target-count.html","searchKeys":["morphTargetCount","open val morphTargetCount: Int","io.github.sceneview.components.RenderableComponent.morphTargetCount"]},{"name":"open val morphTargetNames: List<String>","description":"io.github.sceneview.node.ModelNode.ChildNode.morphTargetNames","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/morph-target-names.html","searchKeys":["morphTargetNames","open val morphTargetNames: List<String>","io.github.sceneview.node.ModelNode.ChildNode.morphTargetNames"]},{"name":"open val name: String","description":"io.github.sceneview.animation.ModelAnimation.name","location":"sceneview/io.github.sceneview.animation/-model-animation/name.html","searchKeys":["name","open val name: String","io.github.sceneview.animation.ModelAnimation.name"]},{"name":"open val name: String?","description":"io.github.sceneview.node.ModelNode.ChildNode.name","location":"sceneview/io.github.sceneview.node/-model-node/-child-node/name.html","searchKeys":["name","open val name: String?","io.github.sceneview.node.ModelNode.ChildNode.name"]},{"name":"open val near: Float","description":"io.github.sceneview.components.CameraComponent.near","location":"sceneview/io.github.sceneview.components/-camera-component/near.html","searchKeys":["near","open val near: Float","io.github.sceneview.components.CameraComponent.near"]},{"name":"open val outerConeAngle: Float","description":"io.github.sceneview.components.LightComponent.outerConeAngle","location":"sceneview/io.github.sceneview.components/-light-component/outer-cone-angle.html","searchKeys":["outerConeAngle","open val outerConeAngle: Float","io.github.sceneview.components.LightComponent.outerConeAngle"]},{"name":"open val primitiveCount: Int","description":"io.github.sceneview.components.RenderableComponent.primitiveCount","location":"sceneview/io.github.sceneview.components/-renderable-component/primitive-count.html","searchKeys":["primitiveCount","open val primitiveCount: Int","io.github.sceneview.components.RenderableComponent.primitiveCount"]},{"name":"open val renderableInstance: RenderableInstance","description":"io.github.sceneview.components.RenderableComponent.renderableInstance","location":"sceneview/io.github.sceneview.components/-renderable-component/renderable-instance.html","searchKeys":["renderableInstance","open val renderableInstance: RenderableInstance","io.github.sceneview.components.RenderableComponent.renderableInstance"]},{"name":"open val renderableManager: RenderableManager","description":"io.github.sceneview.components.RenderableComponent.renderableManager","location":"sceneview/io.github.sceneview.components/-renderable-component/renderable-manager.html","searchKeys":["renderableManager","open val renderableManager: RenderableManager","io.github.sceneview.components.RenderableComponent.renderableManager"]},{"name":"open val scaling: Float4","description":"io.github.sceneview.components.CameraComponent.scaling","location":"sceneview/io.github.sceneview.components/-camera-component/scaling.html","searchKeys":["scaling","open val scaling: Float4","io.github.sceneview.components.CameraComponent.scaling"]},{"name":"open val sensitivity: Float","description":"io.github.sceneview.components.CameraComponent.sensitivity","location":"sceneview/io.github.sceneview.components/-camera-component/sensitivity.html","searchKeys":["sensitivity","open val sensitivity: Float","io.github.sceneview.components.CameraComponent.sensitivity"]},{"name":"open val shutterSpeed: Float","description":"io.github.sceneview.components.CameraComponent.shutterSpeed","location":"sceneview/io.github.sceneview.components/-camera-component/shutter-speed.html","searchKeys":["shutterSpeed","open val shutterSpeed: Float","io.github.sceneview.components.CameraComponent.shutterSpeed"]},{"name":"open val transformationMatrixInverted: Matrix","description":"io.github.sceneview.node.ViewNode.transformationMatrixInverted","location":"sceneview/io.github.sceneview.node/-view-node/transformation-matrix-inverted.html","searchKeys":["transformationMatrixInverted","open val transformationMatrixInverted: Matrix","io.github.sceneview.node.ViewNode.transformationMatrixInverted"]},{"name":"open val type: LightManager.Type","description":"io.github.sceneview.components.LightComponent.type","location":"sceneview/io.github.sceneview.components/-light-component/type.html","searchKeys":["type","open val type: LightManager.Type","io.github.sceneview.components.LightComponent.type"]},{"name":"open val upDirection: Direction","description":"io.github.sceneview.components.CameraComponent.upDirection","location":"sceneview/io.github.sceneview.components/-camera-component/up-direction.html","searchKeys":["upDirection","open val upDirection: Direction","io.github.sceneview.components.CameraComponent.upDirection"]},{"name":"open val viewTransform: Transform","description":"io.github.sceneview.components.CameraComponent.viewTransform","location":"sceneview/io.github.sceneview.components/-camera-component/view-transform.html","searchKeys":["viewTransform","open val viewTransform: Transform","io.github.sceneview.components.CameraComponent.viewTransform"]},{"name":"open var a: Float","description":"com.google.ar.sceneform.rendering.Color.a","location":"sceneview/com.google.ar.sceneform.rendering/-color/a.html","searchKeys":["a","open var a: Float","com.google.ar.sceneform.rendering.Color.a"]},{"name":"open var axisAlignedBoundingBox: Box","description":"io.github.sceneview.components.RenderableComponent.axisAlignedBoundingBox","location":"sceneview/io.github.sceneview.components/-renderable-component/axis-aligned-bounding-box.html","searchKeys":["axisAlignedBoundingBox","open var axisAlignedBoundingBox: Box","io.github.sceneview.components.RenderableComponent.axisAlignedBoundingBox"]},{"name":"open var b: Float","description":"com.google.ar.sceneform.rendering.Color.b","location":"sceneview/com.google.ar.sceneform.rendering/-color/b.html","searchKeys":["b","open var b: Float","com.google.ar.sceneform.rendering.Color.b"]},{"name":"open var color: Color","description":"com.google.ar.sceneform.rendering.Vertex.color","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/color.html","searchKeys":["color","open var color: Color","com.google.ar.sceneform.rendering.Vertex.color"]},{"name":"open var color: Color","description":"io.github.sceneview.components.LightComponent.color","location":"sceneview/io.github.sceneview.components/-light-component/color.html","searchKeys":["color","open var color: Color","io.github.sceneview.components.LightComponent.color"]},{"name":"open var data: Array<Float>","description":"io.github.sceneview.collision.Matrix.data","location":"sceneview/io.github.sceneview.collision/-matrix/data.html","searchKeys":["data","open var data: Array<Float>","io.github.sceneview.collision.Matrix.data"]},{"name":"open var direction: Vector3","description":"io.github.sceneview.collision.Ray.direction","location":"sceneview/io.github.sceneview.collision/-ray/direction.html","searchKeys":["direction","open var direction: Vector3","io.github.sceneview.collision.Ray.direction"]},{"name":"open var distance: Float","description":"io.github.sceneview.collision.RayHit.distance","location":"sceneview/io.github.sceneview.collision/-ray-hit/distance.html","searchKeys":["distance","open var distance: Float","io.github.sceneview.collision.RayHit.distance"]},{"name":"open var environment: Environment?","description":"io.github.sceneview.SceneView.environment","location":"sceneview/io.github.sceneview/-scene-view/environment.html","searchKeys":["environment","open var environment: Environment?","io.github.sceneview.SceneView.environment"]},{"name":"open var falloff: Float","description":"io.github.sceneview.components.LightComponent.falloff","location":"sceneview/io.github.sceneview.components/-light-component/falloff.html","searchKeys":["falloff","open var falloff: Float","io.github.sceneview.components.LightComponent.falloff"]},{"name":"open var focusDistance: Float","description":"io.github.sceneview.components.CameraComponent.focusDistance","location":"sceneview/io.github.sceneview.components/-camera-component/focus-distance.html","searchKeys":["focusDistance","open var focusDistance: Float","io.github.sceneview.components.CameraComponent.focusDistance"]},{"name":"open var g: Float","description":"com.google.ar.sceneform.rendering.Color.g","location":"sceneview/com.google.ar.sceneform.rendering/-color/g.html","searchKeys":["g","open var g: Float","com.google.ar.sceneform.rendering.Color.g"]},{"name":"open var horizontalAlignment: ViewRenderable.HorizontalAlignment","description":"com.google.ar.sceneform.rendering.ViewRenderable.horizontalAlignment","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/horizontal-alignment.html","searchKeys":["horizontalAlignment","open var horizontalAlignment: ViewRenderable.HorizontalAlignment","com.google.ar.sceneform.rendering.ViewRenderable.horizontalAlignment"]},{"name":"open var indirectLight: IndirectLight?","description":"io.github.sceneview.SceneView.indirectLight","location":"sceneview/io.github.sceneview/-scene-view/indirect-light.html","searchKeys":["indirectLight","open var indirectLight: IndirectLight?","io.github.sceneview.SceneView.indirectLight"]},{"name":"open var intensity: Float","description":"io.github.sceneview.components.LightComponent.intensity","location":"sceneview/io.github.sceneview.components/-light-component/intensity.html","searchKeys":["intensity","open var intensity: Float","io.github.sceneview.components.LightComponent.intensity"]},{"name":"open var isDirty: Boolean","description":"io.github.sceneview.animation.ModelAnimation.isDirty","location":"sceneview/io.github.sceneview.animation/-model-animation/is-dirty.html","searchKeys":["isDirty","open var isDirty: Boolean","io.github.sceneview.animation.ModelAnimation.isDirty"]},{"name":"open var isEditable: Boolean","description":"io.github.sceneview.node.Node.isEditable","location":"sceneview/io.github.sceneview.node/-node/is-editable.html","searchKeys":["isEditable","open var isEditable: Boolean","io.github.sceneview.node.Node.isEditable"]},{"name":"open var isPositionEditable: Boolean","description":"io.github.sceneview.node.Node.isPositionEditable","location":"sceneview/io.github.sceneview.node/-node/is-position-editable.html","searchKeys":["isPositionEditable","open var isPositionEditable: Boolean","io.github.sceneview.node.Node.isPositionEditable"]},{"name":"open var isRotationEditable: Boolean","description":"io.github.sceneview.node.Node.isRotationEditable","location":"sceneview/io.github.sceneview.node/-node/is-rotation-editable.html","searchKeys":["isRotationEditable","open var isRotationEditable: Boolean","io.github.sceneview.node.Node.isRotationEditable"]},{"name":"open var isScaleEditable: Boolean","description":"io.github.sceneview.node.Node.isScaleEditable","location":"sceneview/io.github.sceneview.node/-node/is-scale-editable.html","searchKeys":["isScaleEditable","open var isScaleEditable: Boolean","io.github.sceneview.node.Node.isScaleEditable"]},{"name":"open var isShadowCaster: Boolean","description":"com.google.ar.sceneform.rendering.Renderable.isShadowCaster","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/is-shadow-caster.html","searchKeys":["isShadowCaster","open var isShadowCaster: Boolean","com.google.ar.sceneform.rendering.Renderable.isShadowCaster"]},{"name":"open var isShadowCaster: Boolean","description":"com.google.ar.sceneform.rendering.RenderableInstance.isShadowCaster","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/is-shadow-caster.html","searchKeys":["isShadowCaster","open var isShadowCaster: Boolean","com.google.ar.sceneform.rendering.RenderableInstance.isShadowCaster"]},{"name":"open var isShadowCaster: Boolean","description":"io.github.sceneview.components.LightComponent.isShadowCaster","location":"sceneview/io.github.sceneview.components/-light-component/is-shadow-caster.html","searchKeys":["isShadowCaster","open var isShadowCaster: Boolean","io.github.sceneview.components.LightComponent.isShadowCaster"]},{"name":"open var isShadowCaster: Boolean","description":"io.github.sceneview.components.RenderableComponent.isShadowCaster","location":"sceneview/io.github.sceneview.components/-renderable-component/is-shadow-caster.html","searchKeys":["isShadowCaster","open var isShadowCaster: Boolean","io.github.sceneview.components.RenderableComponent.isShadowCaster"]},{"name":"open var isShadowReceiver: Boolean","description":"com.google.ar.sceneform.rendering.Renderable.isShadowReceiver","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/is-shadow-receiver.html","searchKeys":["isShadowReceiver","open var isShadowReceiver: Boolean","com.google.ar.sceneform.rendering.Renderable.isShadowReceiver"]},{"name":"open var isShadowReceiver: Boolean","description":"com.google.ar.sceneform.rendering.RenderableInstance.isShadowReceiver","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/is-shadow-receiver.html","searchKeys":["isShadowReceiver","open var isShadowReceiver: Boolean","com.google.ar.sceneform.rendering.RenderableInstance.isShadowReceiver"]},{"name":"open var isShadowReceiver: Boolean","description":"io.github.sceneview.components.RenderableComponent.isShadowReceiver","location":"sceneview/io.github.sceneview.components/-renderable-component/is-shadow-receiver.html","searchKeys":["isShadowReceiver","open var isShadowReceiver: Boolean","io.github.sceneview.components.RenderableComponent.isShadowReceiver"]},{"name":"open var isTouchable: Boolean","description":"io.github.sceneview.node.Node.isTouchable","location":"sceneview/io.github.sceneview.node/-node/is-touchable.html","searchKeys":["isTouchable","open var isTouchable: Boolean","io.github.sceneview.node.Node.isTouchable"]},{"name":"open var isUnderTesting: Boolean","description":"com.google.ar.sceneform.utilities.AndroidPreconditions.isUnderTesting","location":"sceneview/com.google.ar.sceneform.utilities/-android-preconditions/is-under-testing.html","searchKeys":["isUnderTesting","open var isUnderTesting: Boolean","com.google.ar.sceneform.utilities.AndroidPreconditions.isUnderTesting"]},{"name":"open var isVisible: Boolean","description":"io.github.sceneview.node.Node.isVisible","location":"sceneview/io.github.sceneview.node/-node/is-visible.html","searchKeys":["isVisible","open var isVisible: Boolean","io.github.sceneview.node.Node.isVisible"]},{"name":"open var lifecycle: Lifecycle?","description":"io.github.sceneview.SceneView.lifecycle","location":"sceneview/io.github.sceneview/-scene-view/lifecycle.html","searchKeys":["lifecycle","open var lifecycle: Lifecycle?","io.github.sceneview.SceneView.lifecycle"]},{"name":"open var lightDirection: Direction","description":"io.github.sceneview.components.LightComponent.lightDirection","location":"sceneview/io.github.sceneview.components/-light-component/light-direction.html","searchKeys":["lightDirection","open var lightDirection: Direction","io.github.sceneview.components.LightComponent.lightDirection"]},{"name":"open var lightPosition: Position","description":"io.github.sceneview.components.LightComponent.lightPosition","location":"sceneview/io.github.sceneview.components/-light-component/light-position.html","searchKeys":["lightPosition","open var lightPosition: Position","io.github.sceneview.components.LightComponent.lightPosition"]},{"name":"open var lightQuaternion: Quaternion","description":"io.github.sceneview.components.LightComponent.lightQuaternion","location":"sceneview/io.github.sceneview.components/-light-component/light-quaternion.html","searchKeys":["lightQuaternion","open var lightQuaternion: Quaternion","io.github.sceneview.components.LightComponent.lightQuaternion"]},{"name":"open var mainExecutor: Executor","description":"com.google.ar.sceneform.rendering.ThreadPools.mainExecutor","location":"sceneview/com.google.ar.sceneform.rendering/-thread-pools/main-executor.html","searchKeys":["mainExecutor","open var mainExecutor: Executor","com.google.ar.sceneform.rendering.ThreadPools.mainExecutor"]},{"name":"open var mainLightNode: LightNode?","description":"io.github.sceneview.SceneView.mainLightNode","location":"sceneview/io.github.sceneview/-scene-view/main-light-node.html","searchKeys":["mainLightNode","open var mainLightNode: LightNode?","io.github.sceneview.SceneView.mainLightNode"]},{"name":"open var material: MaterialInstance","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.material","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/material.html","searchKeys":["material","open var material: MaterialInstance","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.material"]},{"name":"open var materialInstance: MaterialInstance","description":"io.github.sceneview.components.RenderableComponent.materialInstance","location":"sceneview/io.github.sceneview.components/-renderable-component/material-instance.html","searchKeys":["materialInstance","open var materialInstance: MaterialInstance","io.github.sceneview.components.RenderableComponent.materialInstance"]},{"name":"open var materialInstances: List<MaterialInstance>","description":"io.github.sceneview.components.RenderableComponent.materialInstances","location":"sceneview/io.github.sceneview.components/-renderable-component/material-instances.html","searchKeys":["materialInstances","open var materialInstances: List<MaterialInstance>","io.github.sceneview.components.RenderableComponent.materialInstances"]},{"name":"open var modelTransform: Transform","description":"io.github.sceneview.components.CameraComponent.modelTransform","location":"sceneview/io.github.sceneview.components/-camera-component/model-transform.html","searchKeys":["modelTransform","open var modelTransform: Transform","io.github.sceneview.components.CameraComponent.modelTransform"]},{"name":"open var name: String","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.name","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/name.html","searchKeys":["name","open var name: String","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.name"]},{"name":"open var node: Node","description":"io.github.sceneview.collision.Collider.node","location":"sceneview/io.github.sceneview.collision/-collider/node.html","searchKeys":["node","open var node: Node","io.github.sceneview.collision.Collider.node"]},{"name":"open var normal: Vector3","description":"com.google.ar.sceneform.rendering.Vertex.normal","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/normal.html","searchKeys":["normal","open var normal: Vector3","com.google.ar.sceneform.rendering.Vertex.normal"]},{"name":"open var origin: Vector3","description":"io.github.sceneview.collision.Ray.origin","location":"sceneview/io.github.sceneview.collision/-ray/origin.html","searchKeys":["origin","open var origin: Vector3","io.github.sceneview.collision.Ray.origin"]},{"name":"open var position: Position","description":"io.github.sceneview.node.Node.position","location":"sceneview/io.github.sceneview.node/-node/position.html","searchKeys":["position","open var position: Position","io.github.sceneview.node.Node.position"]},{"name":"open var projectionTransform: Mat4","description":"io.github.sceneview.components.CameraComponent.projectionTransform","location":"sceneview/io.github.sceneview.components/-camera-component/projection-transform.html","searchKeys":["projectionTransform","open var projectionTransform: Mat4","io.github.sceneview.components.CameraComponent.projectionTransform"]},{"name":"open var quaternion: Quaternion","description":"io.github.sceneview.node.Node.quaternion","location":"sceneview/io.github.sceneview.node/-node/quaternion.html","searchKeys":["quaternion","open var quaternion: Quaternion","io.github.sceneview.node.Node.quaternion"]},{"name":"open var r: Float","description":"com.google.ar.sceneform.rendering.Color.r","location":"sceneview/com.google.ar.sceneform.rendering/-color/r.html","searchKeys":["r","open var r: Float","com.google.ar.sceneform.rendering.Color.r"]},{"name":"open var radius: Float","description":"io.github.sceneview.collision.Sphere.radius","location":"sceneview/io.github.sceneview.collision/-sphere/radius.html","searchKeys":["radius","open var radius: Float","io.github.sceneview.collision.Sphere.radius"]},{"name":"open var renderPriority: Int","description":"com.google.ar.sceneform.rendering.Renderable.renderPriority","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/render-priority.html","searchKeys":["renderPriority","open var renderPriority: Int","com.google.ar.sceneform.rendering.Renderable.renderPriority"]},{"name":"open var renderPriority: Int","description":"com.google.ar.sceneform.rendering.RenderableInstance.renderPriority","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/render-priority.html","searchKeys":["renderPriority","open var renderPriority: Int","com.google.ar.sceneform.rendering.RenderableInstance.renderPriority"]},{"name":"open var renderableId: Int","description":"com.google.ar.sceneform.rendering.RenderableInstance.renderableId","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/renderable-id.html","searchKeys":["renderableId","open var renderableId: Int","com.google.ar.sceneform.rendering.RenderableInstance.renderableId"]},{"name":"open var rotation: Rotation","description":"io.github.sceneview.node.Node.rotation","location":"sceneview/io.github.sceneview.node/-node/rotation.html","searchKeys":["rotation","open var rotation: Rotation","io.github.sceneview.node.Node.rotation"]},{"name":"open var scale: Scale","description":"io.github.sceneview.node.Node.scale","location":"sceneview/io.github.sceneview.node/-node/scale.html","searchKeys":["scale","open var scale: Scale","io.github.sceneview.node.Node.scale"]},{"name":"open var submeshes: List<RenderableDefinition.Submesh>","description":"com.google.ar.sceneform.rendering.RenderableDefinition.submeshes","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/submeshes.html","searchKeys":["submeshes","open var submeshes: List<RenderableDefinition.Submesh>","com.google.ar.sceneform.rendering.RenderableDefinition.submeshes"]},{"name":"open var sunAngularRadius: Float","description":"io.github.sceneview.components.LightComponent.sunAngularRadius","location":"sceneview/io.github.sceneview.components/-light-component/sun-angular-radius.html","searchKeys":["sunAngularRadius","open var sunAngularRadius: Float","io.github.sceneview.components.LightComponent.sunAngularRadius"]},{"name":"open var sunHaloFalloff: Float","description":"io.github.sceneview.components.LightComponent.sunHaloFalloff","location":"sceneview/io.github.sceneview.components/-light-component/sun-halo-falloff.html","searchKeys":["sunHaloFalloff","open var sunHaloFalloff: Float","io.github.sceneview.components.LightComponent.sunHaloFalloff"]},{"name":"open var sunHaloSize: Float","description":"io.github.sceneview.components.LightComponent.sunHaloSize","location":"sceneview/io.github.sceneview.components/-light-component/sun-halo-size.html","searchKeys":["sunHaloSize","open var sunHaloSize: Float","io.github.sceneview.components.LightComponent.sunHaloSize"]},{"name":"open var threadPoolExecutor: Executor","description":"com.google.ar.sceneform.rendering.ThreadPools.threadPoolExecutor","location":"sceneview/com.google.ar.sceneform.rendering/-thread-pools/thread-pool-executor.html","searchKeys":["threadPoolExecutor","open var threadPoolExecutor: Executor","com.google.ar.sceneform.rendering.ThreadPools.threadPoolExecutor"]},{"name":"open var timePosition: Float","description":"io.github.sceneview.animation.ModelAnimation.timePosition","location":"sceneview/io.github.sceneview.animation/-model-animation/time-position.html","searchKeys":["timePosition","open var timePosition: Float","io.github.sceneview.animation.ModelAnimation.timePosition"]},{"name":"open var transform: Transform","description":"io.github.sceneview.node.Node.transform","location":"sceneview/io.github.sceneview.node/-node/transform.html","searchKeys":["transform","open var transform: Transform","io.github.sceneview.node.Node.transform"]},{"name":"open var triangleIndices: List<Integer>","description":"com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.triangleIndices","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-definition/-submesh/triangle-indices.html","searchKeys":["triangleIndices","open var triangleIndices: List<Integer>","com.google.ar.sceneform.rendering.RenderableDefinition.Submesh.triangleIndices"]},{"name":"open var uvCoordinate: Vertex.UvCoordinate","description":"com.google.ar.sceneform.rendering.Vertex.uvCoordinate","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/uv-coordinate.html","searchKeys":["uvCoordinate","open var uvCoordinate: Vertex.UvCoordinate","com.google.ar.sceneform.rendering.Vertex.uvCoordinate"]},{"name":"open var verticalAlignment: ViewRenderable.VerticalAlignment","description":"com.google.ar.sceneform.rendering.ViewRenderable.verticalAlignment","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/vertical-alignment.html","searchKeys":["verticalAlignment","open var verticalAlignment: ViewRenderable.VerticalAlignment","com.google.ar.sceneform.rendering.ViewRenderable.verticalAlignment"]},{"name":"open var viewRenderableData: ViewRenderableInternalData","description":"com.google.ar.sceneform.rendering.ViewRenderable.viewRenderableData","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/view-renderable-data.html","searchKeys":["viewRenderableData","open var viewRenderableData: ViewRenderableInternalData","com.google.ar.sceneform.rendering.ViewRenderable.viewRenderableData"]},{"name":"open var w: Float","description":"io.github.sceneview.collision.Quaternion.w","location":"sceneview/io.github.sceneview.collision/-quaternion/w.html","searchKeys":["w","open var w: Float","io.github.sceneview.collision.Quaternion.w"]},{"name":"open var worldPosition: Position","description":"io.github.sceneview.node.Node.worldPosition","location":"sceneview/io.github.sceneview.node/-node/world-position.html","searchKeys":["worldPosition","open var worldPosition: Position","io.github.sceneview.node.Node.worldPosition"]},{"name":"open var worldQuaternion: Quaternion","description":"io.github.sceneview.node.Node.worldQuaternion","location":"sceneview/io.github.sceneview.node/-node/world-quaternion.html","searchKeys":["worldQuaternion","open var worldQuaternion: Quaternion","io.github.sceneview.node.Node.worldQuaternion"]},{"name":"open var worldRotation: Rotation","description":"io.github.sceneview.node.Node.worldRotation","location":"sceneview/io.github.sceneview.node/-node/world-rotation.html","searchKeys":["worldRotation","open var worldRotation: Rotation","io.github.sceneview.node.Node.worldRotation"]},{"name":"open var worldScale: Scale","description":"io.github.sceneview.node.Node.worldScale","location":"sceneview/io.github.sceneview.node/-node/world-scale.html","searchKeys":["worldScale","open var worldScale: Scale","io.github.sceneview.node.Node.worldScale"]},{"name":"open var x: Float","description":"com.google.ar.sceneform.rendering.Vertex.UvCoordinate.x","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-uv-coordinate/x.html","searchKeys":["x","open var x: Float","com.google.ar.sceneform.rendering.Vertex.UvCoordinate.x"]},{"name":"open var x: Float","description":"io.github.sceneview.collision.Quaternion.x","location":"sceneview/io.github.sceneview.collision/-quaternion/x.html","searchKeys":["x","open var x: Float","io.github.sceneview.collision.Quaternion.x"]},{"name":"open var x: Float","description":"io.github.sceneview.collision.Vector3.x","location":"sceneview/io.github.sceneview.collision/-vector3/x.html","searchKeys":["x","open var x: Float","io.github.sceneview.collision.Vector3.x"]},{"name":"open var y: Float","description":"com.google.ar.sceneform.rendering.Vertex.UvCoordinate.y","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/-uv-coordinate/y.html","searchKeys":["y","open var y: Float","com.google.ar.sceneform.rendering.Vertex.UvCoordinate.y"]},{"name":"open var y: Float","description":"io.github.sceneview.collision.Quaternion.y","location":"sceneview/io.github.sceneview.collision/-quaternion/y.html","searchKeys":["y","open var y: Float","io.github.sceneview.collision.Quaternion.y"]},{"name":"open var y: Float","description":"io.github.sceneview.collision.Vector3.y","location":"sceneview/io.github.sceneview.collision/-vector3/y.html","searchKeys":["y","open var y: Float","io.github.sceneview.collision.Vector3.y"]},{"name":"open var z: Float","description":"io.github.sceneview.collision.Quaternion.z","location":"sceneview/io.github.sceneview.collision/-quaternion/z.html","searchKeys":["z","open var z: Float","io.github.sceneview.collision.Quaternion.z"]},{"name":"open var z: Float","description":"io.github.sceneview.collision.Vector3.z","location":"sceneview/io.github.sceneview.collision/-vector3/z.html","searchKeys":["z","open var z: Float","io.github.sceneview.collision.Vector3.z"]},{"name":"operator fun Mat4.times(v: Float3): Float3","description":"io.github.sceneview.math.times","location":"sceneview/io.github.sceneview.math/times.html","searchKeys":["times","operator fun Mat4.times(v: Float3): Float3","io.github.sceneview.math.times"]},{"name":"suspend fun <T : Renderable, B : Renderable.Builder<T, B>> Renderable.Builder<T, B>.await(engine: Engine): T","description":"io.github.sceneview.model.await","location":"sceneview/io.github.sceneview.model/await.html","searchKeys":["await","suspend fun <T : Renderable, B : Renderable.Builder<T, B>> Renderable.Builder<T, B>.await(engine: Engine): T","io.github.sceneview.model.await"]},{"name":"suspend fun <T : Renderable, B : Renderable.Builder<T, B>> Renderable.Builder<T, B>.build(engine: Engine, coroutineScope: LifecycleCoroutineScope)","description":"io.github.sceneview.model.build","location":"sceneview/io.github.sceneview.model/build.html","searchKeys":["build","suspend fun <T : Renderable, B : Renderable.Builder<T, B>> Renderable.Builder<T, B>.build(engine: Engine, coroutineScope: LifecycleCoroutineScope)","io.github.sceneview.model.build"]},{"name":"suspend fun Context.loadFileBuffer(fileLocation: String): ByteBuffer?","description":"io.github.sceneview.utils.loadFileBuffer","location":"sceneview/io.github.sceneview.utils/load-file-buffer.html","searchKeys":["loadFileBuffer","suspend fun Context.loadFileBuffer(fileLocation: String): ByteBuffer?","io.github.sceneview.utils.loadFileBuffer"]},{"name":"suspend fun HDRLoader.loadEnvironment(engine: Engine, iblPrefilter: IBLPrefilter, context: Context, hdrFileLocation: String, specularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox): HDREnvironment?","description":"io.github.sceneview.loaders.loadEnvironment","location":"sceneview/io.github.sceneview.loaders/load-environment.html","searchKeys":["loadEnvironment","suspend fun HDRLoader.loadEnvironment(engine: Engine, iblPrefilter: IBLPrefilter, context: Context, hdrFileLocation: String, specularFilter: Boolean = defaultSpecularFilter, createSkybox: Boolean = defaultCreateSkybox): HDREnvironment?","io.github.sceneview.loaders.loadEnvironment"]},{"name":"suspend fun KTX1Loader.loadEnvironment(engine: Engine, context: Context, iblKtxFileLocation: String, skyboxKtxFileLocation: String? = null): Environment","description":"io.github.sceneview.loaders.loadEnvironment","location":"sceneview/io.github.sceneview.loaders/load-environment.html","searchKeys":["loadEnvironment","suspend fun KTX1Loader.loadEnvironment(engine: Engine, context: Context, iblKtxFileLocation: String, skyboxKtxFileLocation: String? = null): Environment","io.github.sceneview.loaders.loadEnvironment"]},{"name":"suspend fun loadFileBuffer(context: Context, fileLocation: String): ByteBuffer?","description":"io.github.sceneview.utils.FileLoader.loadFileBuffer","location":"sceneview/io.github.sceneview.utils/-file-loader/load-file-buffer.html","searchKeys":["loadFileBuffer","suspend fun loadFileBuffer(context: Context, fileLocation: String): ByteBuffer?","io.github.sceneview.utils.FileLoader.loadFileBuffer"]},{"name":"suspend fun loadInstancedModel(fileLocation: String, count: Int, resourceResolver: (resourceFileName: String) -> String = { getFolderPath(fileLocation, it) }): List<ModelInstance>","description":"io.github.sceneview.loaders.ModelLoader.loadInstancedModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/load-instanced-model.html","searchKeys":["loadInstancedModel","suspend fun loadInstancedModel(fileLocation: String, count: Int, resourceResolver: (resourceFileName: String) -> String = { getFolderPath(fileLocation, it) }): List<ModelInstance>","io.github.sceneview.loaders.ModelLoader.loadInstancedModel"]},{"name":"suspend fun loadMaterial(fileLocation: String): Material?","description":"io.github.sceneview.loaders.MaterialLoader.loadMaterial","location":"sceneview/io.github.sceneview.loaders/-material-loader/load-material.html","searchKeys":["loadMaterial","suspend fun loadMaterial(fileLocation: String): Material?","io.github.sceneview.loaders.MaterialLoader.loadMaterial"]},{"name":"suspend fun loadModel(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = { getFolderPath(fileLocation, it) }): Model?","description":"io.github.sceneview.loaders.ModelLoader.loadModel","location":"sceneview/io.github.sceneview.loaders/-model-loader/load-model.html","searchKeys":["loadModel","suspend fun loadModel(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = { getFolderPath(fileLocation, it) }): Model?","io.github.sceneview.loaders.ModelLoader.loadModel"]},{"name":"suspend fun loadModelInstance(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = { getFolderPath(fileLocation, it) }): ModelInstance?","description":"io.github.sceneview.loaders.ModelLoader.loadModelInstance","location":"sceneview/io.github.sceneview.loaders/-model-loader/load-model-instance.html","searchKeys":["loadModelInstance","suspend fun loadModelInstance(fileLocation: String, resourceResolver: (resourceFileName: String) -> String = { getFolderPath(fileLocation, it) }): ModelInstance?","io.github.sceneview.loaders.ModelLoader.loadModelInstance"]},{"name":"typealias Color = Float4","description":"io.github.sceneview.math.Color","location":"sceneview/io.github.sceneview.math/-color/index.html","searchKeys":["Color","typealias Color = Float4","io.github.sceneview.math.Color"]},{"name":"typealias Direction = Float3","description":"io.github.sceneview.math.Direction","location":"sceneview/io.github.sceneview.math/-direction/index.html","searchKeys":["Direction","typealias Direction = Float3","io.github.sceneview.math.Direction"]},{"name":"typealias Entity = Int","description":"io.github.sceneview.Entity","location":"sceneview/io.github.sceneview/-entity/index.html","searchKeys":["Entity","typealias Entity = Int","io.github.sceneview.Entity"]},{"name":"typealias EntityInstance = Int","description":"io.github.sceneview.EntityInstance","location":"sceneview/io.github.sceneview/-entity-instance/index.html","searchKeys":["EntityInstance","typealias EntityInstance = Int","io.github.sceneview.EntityInstance"]},{"name":"typealias FilamentCamera = Camera","description":"io.github.sceneview.components.FilamentCamera","location":"sceneview/io.github.sceneview.components/-filament-camera/index.html","searchKeys":["FilamentCamera","typealias FilamentCamera = Camera","io.github.sceneview.components.FilamentCamera"]},{"name":"typealias FilamentEntity = Entity","description":"io.github.sceneview.FilamentEntity","location":"sceneview/io.github.sceneview/-filament-entity/index.html","searchKeys":["FilamentEntity","typealias FilamentEntity = Entity","io.github.sceneview.FilamentEntity"]},{"name":"typealias FilamentEntityInstance = EntityInstance","description":"io.github.sceneview.FilamentEntityInstance","location":"sceneview/io.github.sceneview/-filament-entity-instance/index.html","searchKeys":["FilamentEntityInstance","typealias FilamentEntityInstance = EntityInstance","io.github.sceneview.FilamentEntityInstance"]},{"name":"typealias Model = FilamentAsset","description":"io.github.sceneview.model.Model","location":"sceneview/io.github.sceneview.model/-model/index.html","searchKeys":["Model","typealias Model = FilamentAsset","io.github.sceneview.model.Model"]},{"name":"typealias ModelInstance = FilamentInstance","description":"io.github.sceneview.model.ModelInstance","location":"sceneview/io.github.sceneview.model/-model-instance/index.html","searchKeys":["ModelInstance","typealias ModelInstance = FilamentInstance","io.github.sceneview.model.ModelInstance"]},{"name":"typealias Position = Float3","description":"io.github.sceneview.math.Position","location":"sceneview/io.github.sceneview.math/-position/index.html","searchKeys":["Position","typealias Position = Float3","io.github.sceneview.math.Position"]},{"name":"typealias RenderableInstance = Int","description":"io.github.sceneview.components.RenderableInstance","location":"sceneview/io.github.sceneview.components/-renderable-instance/index.html","searchKeys":["RenderableInstance","typealias RenderableInstance = Int","io.github.sceneview.components.RenderableInstance"]},{"name":"typealias Rotation = Float3","description":"io.github.sceneview.math.Rotation","location":"sceneview/io.github.sceneview.math/-rotation/index.html","searchKeys":["Rotation","typealias Rotation = Float3","io.github.sceneview.math.Rotation"]},{"name":"typealias Scale = Float3","description":"io.github.sceneview.math.Scale","location":"sceneview/io.github.sceneview.math/-scale/index.html","searchKeys":["Scale","typealias Scale = Float3","io.github.sceneview.math.Scale"]},{"name":"typealias Size = Float3","description":"io.github.sceneview.math.Size","location":"sceneview/io.github.sceneview.math/-size/index.html","searchKeys":["Size","typealias Size = Float3","io.github.sceneview.math.Size"]},{"name":"typealias Transform = Mat4","description":"io.github.sceneview.math.Transform","location":"sceneview/io.github.sceneview.math/-transform/index.html","searchKeys":["Transform","typealias Transform = Mat4","io.github.sceneview.math.Transform"]},{"name":"typealias UvCoordinate = Float2","description":"io.github.sceneview.geometries.UvCoordinate","location":"sceneview/io.github.sceneview.geometries/-uv-coordinate/index.html","searchKeys":["UvCoordinate","typealias UvCoordinate = Float2","io.github.sceneview.geometries.UvCoordinate"]},{"name":"val Ambient: Int = 6","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Ambient","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-ambient.html","searchKeys":["Ambient","val Ambient: Int = 6","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Ambient"]},{"name":"val BaseColor: Int = 0","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.BaseColor","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-base-color.html","searchKeys":["BaseColor","val BaseColor: Int = 0","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.BaseColor"]},{"name":"val BoneIndices: Int = 7","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.BoneIndices","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-bone-indices.html","searchKeys":["BoneIndices","val BoneIndices: Int = 7","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.BoneIndices"]},{"name":"val BoneWeights: Int = 8","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.BoneWeights","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-bone-weights.html","searchKeys":["BoneWeights","val BoneWeights: Int = 8","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.BoneWeights"]},{"name":"val Bottom: Int = 2","description":"com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.Bottom","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-vertical-alignment/-bottom.html","searchKeys":["Bottom","val Bottom: Int = 2","com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.Bottom"]},{"name":"val BrdfLookupTable: Int = 15","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.BrdfLookupTable","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-brdf-lookup-table.html","searchKeys":["BrdfLookupTable","val BrdfLookupTable: Int = 15","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.BrdfLookupTable"]},{"name":"val Bump: Int = 3","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Bump","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-bump.html","searchKeys":["Bump","val Bump: Int = 3","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Bump"]},{"name":"val Camera.cullingProjectionTransform: Transform","description":"io.github.sceneview.utils.cullingProjectionTransform","location":"sceneview/io.github.sceneview.utils/culling-projection-transform.html","searchKeys":["cullingProjectionTransform","val Camera.cullingProjectionTransform: Transform","io.github.sceneview.utils.cullingProjectionTransform"]},{"name":"val Camera.ev100: Float","description":"io.github.sceneview.utils.ev100","location":"sceneview/io.github.sceneview.utils/ev100.html","searchKeys":["ev100","val Camera.ev100: Float","io.github.sceneview.utils.ev100"]},{"name":"val Camera.exposureFactor: Float","description":"io.github.sceneview.utils.exposureFactor","location":"sceneview/io.github.sceneview.utils/exposure-factor.html","searchKeys":["exposureFactor","val Camera.exposureFactor: Float","io.github.sceneview.utils.exposureFactor"]},{"name":"val Camera.forwardDirection: Direction","description":"io.github.sceneview.utils.forwardDirection","location":"sceneview/io.github.sceneview.utils/forward-direction.html","searchKeys":["forwardDirection","val Camera.forwardDirection: Direction","io.github.sceneview.utils.forwardDirection"]},{"name":"val Camera.illuminance: Float","description":"io.github.sceneview.utils.illuminance","location":"sceneview/io.github.sceneview.utils/illuminance.html","searchKeys":["illuminance","val Camera.illuminance: Float","io.github.sceneview.utils.illuminance"]},{"name":"val Camera.leftDirection: Direction","description":"io.github.sceneview.utils.leftDirection","location":"sceneview/io.github.sceneview.utils/left-direction.html","searchKeys":["leftDirection","val Camera.leftDirection: Direction","io.github.sceneview.utils.leftDirection"]},{"name":"val Camera.luminance: Float","description":"io.github.sceneview.utils.luminance","location":"sceneview/io.github.sceneview.utils/luminance.html","searchKeys":["luminance","val Camera.luminance: Float","io.github.sceneview.utils.luminance"]},{"name":"val Camera.scaling: Float4","description":"io.github.sceneview.utils.scaling","location":"sceneview/io.github.sceneview.utils/scaling.html","searchKeys":["scaling","val Camera.scaling: Float4","io.github.sceneview.utils.scaling"]},{"name":"val Camera.upDirection: Direction","description":"io.github.sceneview.utils.upDirection","location":"sceneview/io.github.sceneview.utils/up-direction.html","searchKeys":["upDirection","val Camera.upDirection: Direction","io.github.sceneview.utils.upDirection"]},{"name":"val Camera.viewTransform: Transform","description":"io.github.sceneview.utils.viewTransform","location":"sceneview/io.github.sceneview.utils/view-transform.html","searchKeys":["viewTransform","val Camera.viewTransform: Transform","io.github.sceneview.utils.viewTransform"]},{"name":"val Center: Int = 1","description":"com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.Center","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-horizontal-alignment/-center.html","searchKeys":["Center","val Center: Int = 1","com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.Center"]},{"name":"val Center: Int = 1","description":"com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.Center","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-vertical-alignment/-center.html","searchKeys":["Center","val Center: Int = 1","com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.Center"]},{"name":"val ClampToBorder: Short = 0","description":"com.google.ar.sceneform.lullmodel.TextureWrap.ClampToBorder","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/-clamp-to-border.html","searchKeys":["ClampToBorder","val ClampToBorder: Short = 0","com.google.ar.sceneform.lullmodel.TextureWrap.ClampToBorder"]},{"name":"val ClampToEdge: Short = 1","description":"com.google.ar.sceneform.lullmodel.TextureWrap.ClampToEdge","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/-clamp-to-edge.html","searchKeys":["ClampToEdge","val ClampToEdge: Short = 1","com.google.ar.sceneform.lullmodel.TextureWrap.ClampToEdge"]},{"name":"val Color: Int = 2","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Color","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-color.html","searchKeys":["Color","val Color: Int = 2","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Color"]},{"name":"val Controller2: Int = 4","description":"com.google.ar.sceneform.lullmodel.DeviceType.Controller2","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/-controller2.html","searchKeys":["Controller2","val Controller2: Int = 4","com.google.ar.sceneform.lullmodel.DeviceType.Controller2"]},{"name":"val Controller: Int = 3","description":"com.google.ar.sceneform.lullmodel.DeviceType.Controller","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/-controller.html","searchKeys":["Controller","val Controller: Int = 3","com.google.ar.sceneform.lullmodel.DeviceType.Controller"]},{"name":"val CubeMap: Short = 1","description":"com.google.ar.sceneform.lullmodel.TextureTargetType.CubeMap","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-target-type/-cube-map.html","searchKeys":["CubeMap","val CubeMap: Short = 1","com.google.ar.sceneform.lullmodel.TextureTargetType.CubeMap"]},{"name":"val DEFAULT_ANIMATION_FRAME_RATE: Int = 24","description":"com.google.ar.sceneform.rendering.Renderable.DEFAULT_ANIMATION_FRAME_RATE","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-d-e-f-a-u-l-t_-a-n-i-m-a-t-i-o-n_-f-r-a-m-e_-r-a-t-e.html","searchKeys":["DEFAULT_ANIMATION_FRAME_RATE","val DEFAULT_ANIMATION_FRAME_RATE: Int = 24","com.google.ar.sceneform.rendering.Renderable.DEFAULT_ANIMATION_FRAME_RATE"]},{"name":"val DEFAULT_CENTER: Float3","description":"io.github.sceneview.geometries.Cube.Companion.DEFAULT_CENTER","location":"sceneview/io.github.sceneview.geometries/-cube/-companion/-d-e-f-a-u-l-t_-c-e-n-t-e-r.html","searchKeys":["DEFAULT_CENTER","val DEFAULT_CENTER: Float3","io.github.sceneview.geometries.Cube.Companion.DEFAULT_CENTER"]},{"name":"val DEFAULT_CENTER: Float3","description":"io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_CENTER","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/-d-e-f-a-u-l-t_-c-e-n-t-e-r.html","searchKeys":["DEFAULT_CENTER","val DEFAULT_CENTER: Float3","io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_CENTER"]},{"name":"val DEFAULT_CENTER: Float3","description":"io.github.sceneview.geometries.Plane.Companion.DEFAULT_CENTER","location":"sceneview/io.github.sceneview.geometries/-plane/-companion/-d-e-f-a-u-l-t_-c-e-n-t-e-r.html","searchKeys":["DEFAULT_CENTER","val DEFAULT_CENTER: Float3","io.github.sceneview.geometries.Plane.Companion.DEFAULT_CENTER"]},{"name":"val DEFAULT_CENTER: Float3","description":"io.github.sceneview.geometries.Sphere.Companion.DEFAULT_CENTER","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/-d-e-f-a-u-l-t_-c-e-n-t-e-r.html","searchKeys":["DEFAULT_CENTER","val DEFAULT_CENTER: Float3","io.github.sceneview.geometries.Sphere.Companion.DEFAULT_CENTER"]},{"name":"val DEFAULT_HEIGHT: Float = 2.0f","description":"io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_HEIGHT","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/-d-e-f-a-u-l-t_-h-e-i-g-h-t.html","searchKeys":["DEFAULT_HEIGHT","val DEFAULT_HEIGHT: Float = 2.0f","io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_HEIGHT"]},{"name":"val DEFAULT_MAIN_LIGHT_COLOR: Float4","description":"io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_COLOR","location":"sceneview/io.github.sceneview/-scene-view/-companion/-d-e-f-a-u-l-t_-m-a-i-n_-l-i-g-h-t_-c-o-l-o-r.html","searchKeys":["DEFAULT_MAIN_LIGHT_COLOR","val DEFAULT_MAIN_LIGHT_COLOR: Float4","io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_COLOR"]},{"name":"val DEFAULT_MAIN_LIGHT_INTENSITY: Float","description":"io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_INTENSITY","location":"sceneview/io.github.sceneview/-scene-view/-companion/-d-e-f-a-u-l-t_-m-a-i-n_-l-i-g-h-t_-i-n-t-e-n-s-i-t-y.html","searchKeys":["DEFAULT_MAIN_LIGHT_INTENSITY","val DEFAULT_MAIN_LIGHT_INTENSITY: Float","io.github.sceneview.SceneView.Companion.DEFAULT_MAIN_LIGHT_INTENSITY"]},{"name":"val DEFAULT_NORMAL: Float3","description":"io.github.sceneview.geometries.Plane.Companion.DEFAULT_NORMAL","location":"sceneview/io.github.sceneview.geometries/-plane/-companion/-d-e-f-a-u-l-t_-n-o-r-m-a-l.html","searchKeys":["DEFAULT_NORMAL","val DEFAULT_NORMAL: Float3","io.github.sceneview.geometries.Plane.Companion.DEFAULT_NORMAL"]},{"name":"val DEFAULT_NORMAL: Float3","description":"io.github.sceneview.geometries.Polygon.Companion.DEFAULT_NORMAL","location":"sceneview/io.github.sceneview.geometries/-polygon/-companion/-d-e-f-a-u-l-t_-n-o-r-m-a-l.html","searchKeys":["DEFAULT_NORMAL","val DEFAULT_NORMAL: Float3","io.github.sceneview.geometries.Polygon.Companion.DEFAULT_NORMAL"]},{"name":"val DEFAULT_OBJECT_POSITION: Float3","description":"io.github.sceneview.SceneView.Companion.DEFAULT_OBJECT_POSITION","location":"sceneview/io.github.sceneview/-scene-view/-companion/-d-e-f-a-u-l-t_-o-b-j-e-c-t_-p-o-s-i-t-i-o-n.html","searchKeys":["DEFAULT_OBJECT_POSITION","val DEFAULT_OBJECT_POSITION: Float3","io.github.sceneview.SceneView.Companion.DEFAULT_OBJECT_POSITION"]},{"name":"val DEFAULT_POSITION: Float3","description":"io.github.sceneview.node.ViewNode.Companion.DEFAULT_POSITION","location":"sceneview/io.github.sceneview.node/-view-node/-companion/-d-e-f-a-u-l-t_-p-o-s-i-t-i-o-n.html","searchKeys":["DEFAULT_POSITION","val DEFAULT_POSITION: Float3","io.github.sceneview.node.ViewNode.Companion.DEFAULT_POSITION"]},{"name":"val DEFAULT_QUATERNION: Quaternion","description":"io.github.sceneview.node.ViewNode.Companion.DEFAULT_QUATERNION","location":"sceneview/io.github.sceneview.node/-view-node/-companion/-d-e-f-a-u-l-t_-q-u-a-t-e-r-n-i-o-n.html","searchKeys":["DEFAULT_QUATERNION","val DEFAULT_QUATERNION: Quaternion","io.github.sceneview.node.ViewNode.Companion.DEFAULT_QUATERNION"]},{"name":"val DEFAULT_RADIUS: Float = 1.0f","description":"io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_RADIUS","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/-d-e-f-a-u-l-t_-r-a-d-i-u-s.html","searchKeys":["DEFAULT_RADIUS","val DEFAULT_RADIUS: Float = 1.0f","io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_RADIUS"]},{"name":"val DEFAULT_RADIUS: Float = 1.0f","description":"io.github.sceneview.geometries.Sphere.Companion.DEFAULT_RADIUS","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/-d-e-f-a-u-l-t_-r-a-d-i-u-s.html","searchKeys":["DEFAULT_RADIUS","val DEFAULT_RADIUS: Float = 1.0f","io.github.sceneview.geometries.Sphere.Companion.DEFAULT_RADIUS"]},{"name":"val DEFAULT_ROTATION: Float3","description":"io.github.sceneview.node.ViewNode.Companion.DEFAULT_ROTATION","location":"sceneview/io.github.sceneview.node/-view-node/-companion/-d-e-f-a-u-l-t_-r-o-t-a-t-i-o-n.html","searchKeys":["DEFAULT_ROTATION","val DEFAULT_ROTATION: Float3","io.github.sceneview.node.ViewNode.Companion.DEFAULT_ROTATION"]},{"name":"val DEFAULT_SCALE: Float3","description":"io.github.sceneview.node.ViewNode.Companion.DEFAULT_SCALE","location":"sceneview/io.github.sceneview.node/-view-node/-companion/-d-e-f-a-u-l-t_-s-c-a-l-e.html","searchKeys":["DEFAULT_SCALE","val DEFAULT_SCALE: Float3","io.github.sceneview.node.ViewNode.Companion.DEFAULT_SCALE"]},{"name":"val DEFAULT_SIDE_COUNT: Int = 24","description":"io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_SIDE_COUNT","location":"sceneview/io.github.sceneview.geometries/-cylinder/-companion/-d-e-f-a-u-l-t_-s-i-d-e_-c-o-u-n-t.html","searchKeys":["DEFAULT_SIDE_COUNT","val DEFAULT_SIDE_COUNT: Int = 24","io.github.sceneview.geometries.Cylinder.Companion.DEFAULT_SIDE_COUNT"]},{"name":"val DEFAULT_SIZE: Float3","description":"io.github.sceneview.geometries.Cube.Companion.DEFAULT_SIZE","location":"sceneview/io.github.sceneview.geometries/-cube/-companion/-d-e-f-a-u-l-t_-s-i-z-e.html","searchKeys":["DEFAULT_SIZE","val DEFAULT_SIZE: Float3","io.github.sceneview.geometries.Cube.Companion.DEFAULT_SIZE"]},{"name":"val DEFAULT_SIZE: Float3","description":"io.github.sceneview.geometries.Plane.Companion.DEFAULT_SIZE","location":"sceneview/io.github.sceneview.geometries/-plane/-companion/-d-e-f-a-u-l-t_-s-i-z-e.html","searchKeys":["DEFAULT_SIZE","val DEFAULT_SIZE: Float3","io.github.sceneview.geometries.Plane.Companion.DEFAULT_SIZE"]},{"name":"val DEFAULT_SLICES: Int = 24","description":"io.github.sceneview.geometries.Sphere.Companion.DEFAULT_SLICES","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/-d-e-f-a-u-l-t_-s-l-i-c-e-s.html","searchKeys":["DEFAULT_SLICES","val DEFAULT_SLICES: Int = 24","io.github.sceneview.geometries.Sphere.Companion.DEFAULT_SLICES"]},{"name":"val DEFAULT_STACKS: Int = 24","description":"io.github.sceneview.geometries.Sphere.Companion.DEFAULT_STACKS","location":"sceneview/io.github.sceneview.geometries/-sphere/-companion/-d-e-f-a-u-l-t_-s-t-a-c-k-s.html","searchKeys":["DEFAULT_STACKS","val DEFAULT_STACKS: Int = 24","io.github.sceneview.geometries.Sphere.Companion.DEFAULT_STACKS"]},{"name":"val DEFAULT_TYPE: TextureType","description":"io.github.sceneview.texture.ImageTexture.Companion.DEFAULT_TYPE","location":"sceneview/io.github.sceneview.texture/-image-texture/-companion/-d-e-f-a-u-l-t_-t-y-p-e.html","searchKeys":["DEFAULT_TYPE","val DEFAULT_TYPE: TextureType","io.github.sceneview.texture.ImageTexture.Companion.DEFAULT_TYPE"]},{"name":"val DEFAULT_UV_COORDINATE: Float2","description":"io.github.sceneview.geometries.Polygon.Companion.DEFAULT_UV_COORDINATE","location":"sceneview/io.github.sceneview.geometries/-polygon/-companion/-d-e-f-a-u-l-t_-u-v_-c-o-o-r-d-i-n-a-t-e.html","searchKeys":["DEFAULT_UV_COORDINATE","val DEFAULT_UV_COORDINATE: Float2","io.github.sceneview.geometries.Polygon.Companion.DEFAULT_UV_COORDINATE"]},{"name":"val DEFAULT_WEIGHT: Double = 0.8999999761581421","description":"com.google.ar.sceneform.utilities.MovingAverage.DEFAULT_WEIGHT","location":"sceneview/com.google.ar.sceneform.utilities/-moving-average/-d-e-f-a-u-l-t_-w-e-i-g-h-t.html","searchKeys":["DEFAULT_WEIGHT","val DEFAULT_WEIGHT: Double = 0.8999999761581421","com.google.ar.sceneform.utilities.MovingAverage.DEFAULT_WEIGHT"]},{"name":"val DataBool: Byte = 1","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataBool","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-bool.html","searchKeys":["DataBool","val DataBool: Byte = 1","com.google.ar.sceneform.lullmodel.VariantDef.DataBool"]},{"name":"val DataBytes: Byte = 10","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataBytes","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-bytes.html","searchKeys":["DataBytes","val DataBytes: Byte = 10","com.google.ar.sceneform.lullmodel.VariantDef.DataBytes"]},{"name":"val DataFloat: Byte = 3","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataFloat","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-float.html","searchKeys":["DataFloat","val DataFloat: Byte = 3","com.google.ar.sceneform.lullmodel.VariantDef.DataFloat"]},{"name":"val DataHashValue: Byte = 5","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataHashValue","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-hash-value.html","searchKeys":["DataHashValue","val DataHashValue: Byte = 5","com.google.ar.sceneform.lullmodel.VariantDef.DataHashValue"]},{"name":"val DataInt: Byte = 2","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataInt","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-int.html","searchKeys":["DataInt","val DataInt: Byte = 2","com.google.ar.sceneform.lullmodel.VariantDef.DataInt"]},{"name":"val DataQuat: Byte = 9","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataQuat","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-quat.html","searchKeys":["DataQuat","val DataQuat: Byte = 9","com.google.ar.sceneform.lullmodel.VariantDef.DataQuat"]},{"name":"val DataString: Byte = 4","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataString","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-string.html","searchKeys":["DataString","val DataString: Byte = 4","com.google.ar.sceneform.lullmodel.VariantDef.DataString"]},{"name":"val DataVec2: Byte = 6","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataVec2","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-vec2.html","searchKeys":["DataVec2","val DataVec2: Byte = 6","com.google.ar.sceneform.lullmodel.VariantDef.DataVec2"]},{"name":"val DataVec3: Byte = 7","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataVec3","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-vec3.html","searchKeys":["DataVec3","val DataVec3: Byte = 7","com.google.ar.sceneform.lullmodel.VariantDef.DataVec3"]},{"name":"val DataVec4: Byte = 8","description":"com.google.ar.sceneform.lullmodel.VariantDef.DataVec4","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-data-vec4.html","searchKeys":["DataVec4","val DataVec4: Byte = 8","com.google.ar.sceneform.lullmodel.VariantDef.DataVec4"]},{"name":"val DiffuseColor: Int = 18","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.DiffuseColor","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-diffuse-color.html","searchKeys":["DiffuseColor","val DiffuseColor: Int = 18","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.DiffuseColor"]},{"name":"val DiffuseEnvironment: Int = 16","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.DiffuseEnvironment","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-diffuse-environment.html","searchKeys":["DiffuseEnvironment","val DiffuseEnvironment: Int = 16","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.DiffuseEnvironment"]},{"name":"val DownLeft: Int = 3","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.DownLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-down-left.html","searchKeys":["DownLeft","val DownLeft: Int = 3","com.google.ar.sceneform.lullmodel.LayoutFillOrder.DownLeft"]},{"name":"val DownRight: Int = 2","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.DownRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-down-right.html","searchKeys":["DownRight","val DownRight: Int = 2","com.google.ar.sceneform.lullmodel.LayoutFillOrder.DownRight"]},{"name":"val EMPTY_ID: Int = 0","description":"io.github.sceneview.collision.ChangeId.EMPTY_ID","location":"sceneview/io.github.sceneview.collision/-change-id/-e-m-p-t-y_-i-d.html","searchKeys":["EMPTY_ID","val EMPTY_ID: Int = 0","io.github.sceneview.collision.ChangeId.EMPTY_ID"]},{"name":"val Emissive: Int = 7","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Emissive","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-emissive.html","searchKeys":["Emissive","val Emissive: Int = 7","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Emissive"]},{"name":"val Empty: Int = 0","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Empty","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-empty.html","searchKeys":["Empty","val Empty: Int = 0","com.google.ar.sceneform.lullmodel.VertexAttributeType.Empty"]},{"name":"val FRACTION_POSITION: Property<ModelAnimation, Float>","description":"io.github.sceneview.animation.ModelAnimation.FRACTION_POSITION","location":"sceneview/io.github.sceneview.animation/-model-animation/-f-r-a-c-t-i-o-n_-p-o-s-i-t-i-o-n.html","searchKeys":["FRACTION_POSITION","val FRACTION_POSITION: Property<ModelAnimation, Float>","io.github.sceneview.animation.ModelAnimation.FRACTION_POSITION"]},{"name":"val FRAME_POSITION: Property<ModelAnimation, Integer>","description":"io.github.sceneview.animation.ModelAnimation.FRAME_POSITION","location":"sceneview/io.github.sceneview.animation/-model-animation/-f-r-a-m-e_-p-o-s-i-t-i-o-n.html","searchKeys":["FRAME_POSITION","val FRAME_POSITION: Property<ModelAnimation, Integer>","io.github.sceneview.animation.ModelAnimation.FRAME_POSITION"]},{"name":"val False: Int = 2","description":"com.google.ar.sceneform.lullmodel.OptionalBool.False","location":"sceneview/com.google.ar.sceneform.lullmodel/-optional-bool/-false.html","searchKeys":["False","val False: Int = 2","com.google.ar.sceneform.lullmodel.OptionalBool.False"]},{"name":"val Hand: Int = 5","description":"com.google.ar.sceneform.lullmodel.DeviceType.Hand","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/-hand.html","searchKeys":["Hand","val Hand: Int = 5","com.google.ar.sceneform.lullmodel.DeviceType.Hand"]},{"name":"val Height: Int = 4","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Height","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-height.html","searchKeys":["Height","val Height: Int = 4","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Height"]},{"name":"val Hmd: Int = 0","description":"com.google.ar.sceneform.lullmodel.DeviceType.Hmd","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/-hmd.html","searchKeys":["Hmd","val Hmd: Int = 0","com.google.ar.sceneform.lullmodel.DeviceType.Hmd"]},{"name":"val IDENTITY_DATA: Array<Float>","description":"io.github.sceneview.collision.Matrix.IDENTITY_DATA","location":"sceneview/io.github.sceneview.collision/-matrix/-i-d-e-n-t-i-t-y_-d-a-t-a.html","searchKeys":["IDENTITY_DATA","val IDENTITY_DATA: Array<Float>","io.github.sceneview.collision.Matrix.IDENTITY_DATA"]},{"name":"val INDICES: List<Geometry.PrimitiveIndices>","description":"io.github.sceneview.geometries.Cube.Companion.INDICES","location":"sceneview/io.github.sceneview.geometries/-cube/-companion/-i-n-d-i-c-e-s.html","searchKeys":["INDICES","val INDICES: List<Geometry.PrimitiveIndices>","io.github.sceneview.geometries.Cube.Companion.INDICES"]},{"name":"val INDICES: List<Geometry.PrimitiveIndices>","description":"io.github.sceneview.geometries.Plane.Companion.INDICES","location":"sceneview/io.github.sceneview.geometries/-plane/-companion/-i-n-d-i-c-e-s.html","searchKeys":["INDICES","val INDICES: List<Geometry.PrimitiveIndices>","io.github.sceneview.geometries.Plane.Companion.INDICES"]},{"name":"val INSTANCE: FlatBufferBuilder.HeapByteBufferFactory","description":"com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory.INSTANCE","location":"sceneview/com.google.flatbuffers/-flat-buffer-builder/-heap-byte-buffer-factory/-i-n-s-t-a-n-c-e.html","searchKeys":["INSTANCE","val INSTANCE: FlatBufferBuilder.HeapByteBufferFactory","com.google.flatbuffers.FlatBufferBuilder.HeapByteBufferFactory.INSTANCE"]},{"name":"val INVALID_RESOURCE_IDENTIFIER: Int = 0","description":"com.google.ar.sceneform.utilities.LoadHelper.INVALID_RESOURCE_IDENTIFIER","location":"sceneview/com.google.ar.sceneform.utilities/-load-helper/-i-n-v-a-l-i-d_-r-e-s-o-u-r-c-e_-i-d-e-n-t-i-f-i-e-r.html","searchKeys":["INVALID_RESOURCE_IDENTIFIER","val INVALID_RESOURCE_IDENTIFIER: Int = 0","com.google.ar.sceneform.utilities.LoadHelper.INVALID_RESOURCE_IDENTIFIER"]},{"name":"val Invalid: Int = 0","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Invalid","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-invalid.html","searchKeys":["Invalid","val Invalid: Int = 0","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Invalid"]},{"name":"val Keyboard: Int = 2","description":"com.google.ar.sceneform.lullmodel.DeviceType.Keyboard","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/-keyboard.html","searchKeys":["Keyboard","val Keyboard: Int = 2","com.google.ar.sceneform.lullmodel.DeviceType.Keyboard"]},{"name":"val Left: Int = 0","description":"com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.Left","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-horizontal-alignment/-left.html","searchKeys":["Left","val Left: Int = 0","com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.Left"]},{"name":"val LeftDown: Int = 1","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.LeftDown","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-left-down.html","searchKeys":["LeftDown","val LeftDown: Int = 1","com.google.ar.sceneform.lullmodel.LayoutFillOrder.LeftDown"]},{"name":"val LeftUp: Int = 5","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.LeftUp","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-left-up.html","searchKeys":["LeftUp","val LeftUp: Int = 5","com.google.ar.sceneform.lullmodel.LayoutFillOrder.LeftUp"]},{"name":"val Light: Int = 8","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Light","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-light.html","searchKeys":["Light","val Light: Int = 8","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Light"]},{"name":"val Linear: Short = 1","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.Linear","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/-linear.html","searchKeys":["Linear","val Linear: Short = 1","com.google.ar.sceneform.lullmodel.TextureFiltering.Linear"]},{"name":"val LinearMipmapLinear: Short = 5","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.LinearMipmapLinear","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/-linear-mipmap-linear.html","searchKeys":["LinearMipmapLinear","val LinearMipmapLinear: Short = 5","com.google.ar.sceneform.lullmodel.TextureFiltering.LinearMipmapLinear"]},{"name":"val LinearMipmapNearest: Short = 3","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.LinearMipmapNearest","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/-linear-mipmap-nearest.html","searchKeys":["LinearMipmapNearest","val LinearMipmapNearest: Short = 3","com.google.ar.sceneform.lullmodel.TextureFiltering.LinearMipmapNearest"]},{"name":"val List<Geometry.Vertex>.hasColors: Boolean","description":"io.github.sceneview.geometries.hasColors","location":"sceneview/io.github.sceneview.geometries/has-colors.html","searchKeys":["hasColors","val List<Geometry.Vertex>.hasColors: Boolean","io.github.sceneview.geometries.hasColors"]},{"name":"val List<Geometry.Vertex>.hasNormals: Boolean","description":"io.github.sceneview.geometries.hasNormals","location":"sceneview/io.github.sceneview.geometries/has-normals.html","searchKeys":["hasNormals","val List<Geometry.Vertex>.hasNormals: Boolean","io.github.sceneview.geometries.hasNormals"]},{"name":"val List<Geometry.Vertex>.hasUvCoordinates: Boolean","description":"io.github.sceneview.geometries.hasUvCoordinates","location":"sceneview/io.github.sceneview.geometries/has-uv-coordinates.html","searchKeys":["hasUvCoordinates","val List<Geometry.Vertex>.hasUvCoordinates: Boolean","io.github.sceneview.geometries.hasUvCoordinates"]},{"name":"val Manipulator.transform: Transform","description":"io.github.sceneview.gesture.transform","location":"sceneview/io.github.sceneview.gesture/transform.html","searchKeys":["transform","val Manipulator.transform: Transform","io.github.sceneview.gesture.transform"]},{"name":"val Mat4.quaternion: Quaternion","description":"io.github.sceneview.math.quaternion","location":"sceneview/io.github.sceneview.math/quaternion.html","searchKeys":["quaternion","val Mat4.quaternion: Quaternion","io.github.sceneview.math.quaternion"]},{"name":"val Metallic: Int = 1","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Metallic","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-metallic.html","searchKeys":["Metallic","val Metallic: Int = 1","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Metallic"]},{"name":"val MirrorClampToEdge: Short = 3","description":"com.google.ar.sceneform.lullmodel.TextureWrap.MirrorClampToEdge","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/-mirror-clamp-to-edge.html","searchKeys":["MirrorClampToEdge","val MirrorClampToEdge: Short = 3","com.google.ar.sceneform.lullmodel.TextureWrap.MirrorClampToEdge"]},{"name":"val MirroredRepeat: Short = 2","description":"com.google.ar.sceneform.lullmodel.TextureWrap.MirroredRepeat","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/-mirrored-repeat.html","searchKeys":["MirroredRepeat","val MirroredRepeat: Short = 2","com.google.ar.sceneform.lullmodel.TextureWrap.MirroredRepeat"]},{"name":"val Model.collisionShape: Box","description":"io.github.sceneview.model.collisionShape","location":"sceneview/io.github.sceneview.model/collision-shape.html","searchKeys":["collisionShape","val Model.collisionShape: Box","io.github.sceneview.model.collisionShape"]},{"name":"val Model.renderableNames: List<String>","description":"io.github.sceneview.model.renderableNames","location":"sceneview/io.github.sceneview.model/renderable-names.html","searchKeys":["renderableNames","val Model.renderableNames: List<String>","io.github.sceneview.model.renderableNames"]},{"name":"val ModelInstance.cameras: List<Camera>","description":"io.github.sceneview.model.cameras","location":"sceneview/io.github.sceneview.model/cameras.html","searchKeys":["cameras","val ModelInstance.cameras: List<Camera>","io.github.sceneview.model.cameras"]},{"name":"val ModelInstance.camerasEntities: List<Entity>","description":"io.github.sceneview.model.camerasEntities","location":"sceneview/io.github.sceneview.model/cameras-entities.html","searchKeys":["camerasEntities","val ModelInstance.camerasEntities: List<Entity>","io.github.sceneview.model.camerasEntities"]},{"name":"val ModelInstance.engine: Engine","description":"io.github.sceneview.model.engine","location":"sceneview/io.github.sceneview.model/engine.html","searchKeys":["engine","val ModelInstance.engine: Engine","io.github.sceneview.model.engine"]},{"name":"val ModelInstance.lightEntities: List<Entity>","description":"io.github.sceneview.model.lightEntities","location":"sceneview/io.github.sceneview.model/light-entities.html","searchKeys":["lightEntities","val ModelInstance.lightEntities: List<Entity>","io.github.sceneview.model.lightEntities"]},{"name":"val ModelInstance.lightEntityInstances: List<EntityInstance>","description":"io.github.sceneview.model.lightEntityInstances","location":"sceneview/io.github.sceneview.model/light-entity-instances.html","searchKeys":["lightEntityInstances","val ModelInstance.lightEntityInstances: List<EntityInstance>","io.github.sceneview.model.lightEntityInstances"]},{"name":"val ModelInstance.lightManager: LightManager","description":"io.github.sceneview.model.lightManager","location":"sceneview/io.github.sceneview.model/light-manager.html","searchKeys":["lightManager","val ModelInstance.lightManager: LightManager","io.github.sceneview.model.lightManager"]},{"name":"val ModelInstance.model: FilamentAsset","description":"io.github.sceneview.model.model","location":"sceneview/io.github.sceneview.model/model.html","searchKeys":["model","val ModelInstance.model: FilamentAsset","io.github.sceneview.model.model"]},{"name":"val ModelInstance.renderableEntities: List<Entity>","description":"io.github.sceneview.model.renderableEntities","location":"sceneview/io.github.sceneview.model/renderable-entities.html","searchKeys":["renderableEntities","val ModelInstance.renderableEntities: List<Entity>","io.github.sceneview.model.renderableEntities"]},{"name":"val ModelInstance.renderableInstances: List<EntityInstance>","description":"io.github.sceneview.model.renderableInstances","location":"sceneview/io.github.sceneview.model/renderable-instances.html","searchKeys":["renderableInstances","val ModelInstance.renderableInstances: List<EntityInstance>","io.github.sceneview.model.renderableInstances"]},{"name":"val ModelInstance.renderableManager: RenderableManager","description":"io.github.sceneview.model.renderableManager","location":"sceneview/io.github.sceneview.model/renderable-manager.html","searchKeys":["renderableManager","val ModelInstance.renderableManager: RenderableManager","io.github.sceneview.model.renderableManager"]},{"name":"val ModelInstance.renderablesPrimitiveCounts: Map<EntityInstance, Int>","description":"io.github.sceneview.model.renderablesPrimitiveCounts","location":"sceneview/io.github.sceneview.model/renderables-primitive-counts.html","searchKeys":["renderablesPrimitiveCounts","val ModelInstance.renderablesPrimitiveCounts: Map<EntityInstance, Int>","io.github.sceneview.model.renderablesPrimitiveCounts"]},{"name":"val Mouse: Int = 1","description":"com.google.ar.sceneform.lullmodel.DeviceType.Mouse","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/-mouse.html","searchKeys":["Mouse","val Mouse: Int = 1","com.google.ar.sceneform.lullmodel.DeviceType.Mouse"]},{"name":"val NONE: Byte = 0","description":"com.google.ar.sceneform.lullmodel.VariantDef.NONE","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-n-o-n-e.html","searchKeys":["NONE","val NONE: Byte = 0","com.google.ar.sceneform.lullmodel.VariantDef.NONE"]},{"name":"val Nearest: Short = 0","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.Nearest","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/-nearest.html","searchKeys":["Nearest","val Nearest: Short = 0","com.google.ar.sceneform.lullmodel.TextureFiltering.Nearest"]},{"name":"val NearestMipmapLinear: Short = 4","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.NearestMipmapLinear","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/-nearest-mipmap-linear.html","searchKeys":["NearestMipmapLinear","val NearestMipmapLinear: Short = 4","com.google.ar.sceneform.lullmodel.TextureFiltering.NearestMipmapLinear"]},{"name":"val NearestMipmapNearest: Short = 2","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.NearestMipmapNearest","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/-nearest-mipmap-nearest.html","searchKeys":["NearestMipmapNearest","val NearestMipmapNearest: Short = 2","com.google.ar.sceneform.lullmodel.TextureFiltering.NearestMipmapNearest"]},{"name":"val Normal: Int = 2","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Normal","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-normal.html","searchKeys":["Normal","val Normal: Int = 2","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Normal"]},{"name":"val Normal: Int = 4","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Normal","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-normal.html","searchKeys":["Normal","val Normal: Int = 4","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Normal"]},{"name":"val Occlusion: Int = 13","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Occlusion","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-occlusion.html","searchKeys":["Occlusion","val Occlusion: Int = 13","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Occlusion"]},{"name":"val Opacity: Int = 11","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Opacity","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-opacity.html","searchKeys":["Opacity","val Opacity: Int = 11","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Opacity"]},{"name":"val Orientation: Int = 6","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Orientation","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-orientation.html","searchKeys":["Orientation","val Orientation: Int = 6","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Orientation"]},{"name":"val Position: Int = 1","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Position","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-position.html","searchKeys":["Position","val Position: Int = 1","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Position"]},{"name":"val RCB_MAJOR_VERSION: Float = 0.54f","description":"com.google.ar.sceneform.rendering.SceneformBundle.RCB_MAJOR_VERSION","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/-r-c-b_-m-a-j-o-r_-v-e-r-s-i-o-n.html","searchKeys":["RCB_MAJOR_VERSION","val RCB_MAJOR_VERSION: Float = 0.54f","com.google.ar.sceneform.rendering.SceneformBundle.RCB_MAJOR_VERSION"]},{"name":"val RCB_MINOR_VERSION: Int = 2","description":"com.google.ar.sceneform.rendering.SceneformBundle.RCB_MINOR_VERSION","location":"sceneview/com.google.ar.sceneform.rendering/-sceneform-bundle/-r-c-b_-m-i-n-o-r_-v-e-r-s-i-o-n.html","searchKeys":["RCB_MINOR_VERSION","val RCB_MINOR_VERSION: Int = 2","com.google.ar.sceneform.rendering.SceneformBundle.RCB_MINOR_VERSION"]},{"name":"val RENDER_PRIORITY_DEFAULT: Int = 4","description":"com.google.ar.sceneform.rendering.Renderable.RENDER_PRIORITY_DEFAULT","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-r-e-n-d-e-r_-p-r-i-o-r-i-t-y_-d-e-f-a-u-l-t.html","searchKeys":["RENDER_PRIORITY_DEFAULT","val RENDER_PRIORITY_DEFAULT: Int = 4","com.google.ar.sceneform.rendering.Renderable.RENDER_PRIORITY_DEFAULT"]},{"name":"val RENDER_PRIORITY_FIRST: Int = 0","description":"com.google.ar.sceneform.rendering.Renderable.RENDER_PRIORITY_FIRST","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-r-e-n-d-e-r_-p-r-i-o-r-i-t-y_-f-i-r-s-t.html","searchKeys":["RENDER_PRIORITY_FIRST","val RENDER_PRIORITY_FIRST: Int = 0","com.google.ar.sceneform.rendering.Renderable.RENDER_PRIORITY_FIRST"]},{"name":"val RENDER_PRIORITY_LAST: Int = 7","description":"com.google.ar.sceneform.rendering.Renderable.RENDER_PRIORITY_LAST","location":"sceneview/com.google.ar.sceneform.rendering/-renderable/-r-e-n-d-e-r_-p-r-i-o-r-i-t-y_-l-a-s-t.html","searchKeys":["RENDER_PRIORITY_LAST","val RENDER_PRIORITY_LAST: Int = 7","com.google.ar.sceneform.rendering.Renderable.RENDER_PRIORITY_LAST"]},{"name":"val Reflection: Int = 10","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Reflection","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-reflection.html","searchKeys":["Reflection","val Reflection: Int = 10","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Reflection"]},{"name":"val Repeat: Short = 4","description":"com.google.ar.sceneform.lullmodel.TextureWrap.Repeat","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/-repeat.html","searchKeys":["Repeat","val Repeat: Short = 4","com.google.ar.sceneform.lullmodel.TextureWrap.Repeat"]},{"name":"val Right: Int = 2","description":"com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.Right","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-horizontal-alignment/-right.html","searchKeys":["Right","val Right: Int = 2","com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.Right"]},{"name":"val RightDown: Int = 0","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.RightDown","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-right-down.html","searchKeys":["RightDown","val RightDown: Int = 0","com.google.ar.sceneform.lullmodel.LayoutFillOrder.RightDown"]},{"name":"val RightUp: Int = 4","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.RightUp","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-right-up.html","searchKeys":["RightUp","val RightUp: Int = 4","com.google.ar.sceneform.lullmodel.LayoutFillOrder.RightUp"]},{"name":"val Roughness: Int = 12","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Roughness","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-roughness.html","searchKeys":["Roughness","val Roughness: Int = 12","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Roughness"]},{"name":"val SIZE_PREFIX_LENGTH: Int = 4","description":"com.google.flatbuffers.Constants.SIZE_PREFIX_LENGTH","location":"sceneview/com.google.flatbuffers/-constants/-s-i-z-e_-p-r-e-f-i-x_-l-e-n-g-t-h.html","searchKeys":["SIZE_PREFIX_LENGTH","val SIZE_PREFIX_LENGTH: Int = 4","com.google.flatbuffers.Constants.SIZE_PREFIX_LENGTH"]},{"name":"val Scalar1f: Int = 1","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Scalar1f","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-scalar1f.html","searchKeys":["Scalar1f","val Scalar1f: Int = 1","com.google.ar.sceneform.lullmodel.VertexAttributeType.Scalar1f"]},{"name":"val Shadow: Int = 9","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Shadow","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-shadow.html","searchKeys":["Shadow","val Shadow: Int = 9","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Shadow"]},{"name":"val Shininess: Int = 14","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Shininess","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-shininess.html","searchKeys":["Shininess","val Shininess: Int = 14","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Shininess"]},{"name":"val Specular: Int = 5","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Specular","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-specular.html","searchKeys":["Specular","val Specular: Int = 5","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Specular"]},{"name":"val SpecularEnvironment: Int = 17","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.SpecularEnvironment","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-specular-environment.html","searchKeys":["SpecularEnvironment","val SpecularEnvironment: Int = 17","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.SpecularEnvironment"]},{"name":"val Standard2d: Short = 0","description":"com.google.ar.sceneform.lullmodel.TextureTargetType.Standard2d","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-target-type/-standard2d.html","searchKeys":["Standard2d","val Standard2d: Short = 0","com.google.ar.sceneform.lullmodel.TextureTargetType.Standard2d"]},{"name":"val TIME_POSITION: FloatProperty<ModelAnimation>","description":"io.github.sceneview.animation.ModelAnimation.TIME_POSITION","location":"sceneview/io.github.sceneview.animation/-model-animation/-t-i-m-e_-p-o-s-i-t-i-o-n.html","searchKeys":["TIME_POSITION","val TIME_POSITION: FloatProperty<ModelAnimation>","io.github.sceneview.animation.ModelAnimation.TIME_POSITION"]},{"name":"val Tangent: Int = 5","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Tangent","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-tangent.html","searchKeys":["Tangent","val Tangent: Int = 5","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.Tangent"]},{"name":"val TexCoord: Int = 3","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.TexCoord","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/-tex-coord.html","searchKeys":["TexCoord","val TexCoord: Int = 3","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.TexCoord"]},{"name":"val Top: Int = 0","description":"com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.Top","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-vertical-alignment/-top.html","searchKeys":["Top","val Top: Int = 0","com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.Top"]},{"name":"val True: Int = 1","description":"com.google.ar.sceneform.lullmodel.OptionalBool.True","location":"sceneview/com.google.ar.sceneform.lullmodel/-optional-bool/-true.html","searchKeys":["True","val True: Int = 1","com.google.ar.sceneform.lullmodel.OptionalBool.True"]},{"name":"val UTF8_CHARSET: ThreadLocal<Charset>","description":"com.google.flatbuffers.Table.UTF8_CHARSET","location":"sceneview/com.google.flatbuffers/-table/-u-t-f8_-c-h-a-r-s-e-t.html","searchKeys":["UTF8_CHARSET","val UTF8_CHARSET: ThreadLocal<Charset>","com.google.flatbuffers.Table.UTF8_CHARSET"]},{"name":"val Unset: Int = 0","description":"com.google.ar.sceneform.lullmodel.OptionalBool.Unset","location":"sceneview/com.google.ar.sceneform.lullmodel/-optional-bool/-unset.html","searchKeys":["Unset","val Unset: Int = 0","com.google.ar.sceneform.lullmodel.OptionalBool.Unset"]},{"name":"val Unspecified: Int = -1","description":"com.google.ar.sceneform.lullmodel.AxisSystem.Unspecified","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-unspecified.html","searchKeys":["Unspecified","val Unspecified: Int = -1","com.google.ar.sceneform.lullmodel.AxisSystem.Unspecified"]},{"name":"val Unused: Int = 255","description":"com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Unused","location":"sceneview/com.google.ar.sceneform.lullmodel/-material-texture-usage/-unused.html","searchKeys":["Unused","val Unused: Int = 255","com.google.ar.sceneform.lullmodel.MaterialTextureUsage.Unused"]},{"name":"val UpLeft: Int = 7","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.UpLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-up-left.html","searchKeys":["UpLeft","val UpLeft: Int = 7","com.google.ar.sceneform.lullmodel.LayoutFillOrder.UpLeft"]},{"name":"val UpRight: Int = 6","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.UpRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/-up-right.html","searchKeys":["UpRight","val UpRight: Int = 6","com.google.ar.sceneform.lullmodel.LayoutFillOrder.UpRight"]},{"name":"val VariantArrayDef: Byte = 11","description":"com.google.ar.sceneform.lullmodel.VariantDef.VariantArrayDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-variant-array-def.html","searchKeys":["VariantArrayDef","val VariantArrayDef: Byte = 11","com.google.ar.sceneform.lullmodel.VariantDef.VariantArrayDef"]},{"name":"val VariantMapDef: Byte = 12","description":"com.google.ar.sceneform.lullmodel.VariantDef.VariantMapDef","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/-variant-map-def.html","searchKeys":["VariantMapDef","val VariantMapDef: Byte = 12","com.google.ar.sceneform.lullmodel.VariantDef.VariantMapDef"]},{"name":"val Vec2f: Int = 2","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec2f","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-vec2f.html","searchKeys":["Vec2f","val Vec2f: Int = 2","com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec2f"]},{"name":"val Vec2us: Int = 5","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec2us","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-vec2us.html","searchKeys":["Vec2us","val Vec2us: Int = 5","com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec2us"]},{"name":"val Vec3f: Int = 3","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec3f","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-vec3f.html","searchKeys":["Vec3f","val Vec3f: Int = 3","com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec3f"]},{"name":"val Vec4f: Int = 4","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec4f","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-vec4f.html","searchKeys":["Vec4f","val Vec4f: Int = 4","com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec4f"]},{"name":"val Vec4ub: Int = 7","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec4ub","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-vec4ub.html","searchKeys":["Vec4ub","val Vec4ub: Int = 7","com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec4ub"]},{"name":"val Vec4us: Int = 6","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec4us","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/-vec4us.html","searchKeys":["Vec4us","val Vec4us: Int = 6","com.google.ar.sceneform.lullmodel.VertexAttributeType.Vec4us"]},{"name":"val Viewport.size: Float2","description":"io.github.sceneview.utils.size","location":"sceneview/io.github.sceneview.utils/size.html","searchKeys":["size","val Viewport.size: Float2","io.github.sceneview.utils.size"]},{"name":"val XUp_YBack_ZLeft: Int = 2","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YBack_ZLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-y-back_-z-left.html","searchKeys":["XUp_YBack_ZLeft","val XUp_YBack_ZLeft: Int = 2","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YBack_ZLeft"]},{"name":"val XUp_YBack_ZRight: Int = 3","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YBack_ZRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-y-back_-z-right.html","searchKeys":["XUp_YBack_ZRight","val XUp_YBack_ZRight: Int = 3","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YBack_ZRight"]},{"name":"val XUp_YFront_ZLeft: Int = 0","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YFront_ZLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-y-front_-z-left.html","searchKeys":["XUp_YFront_ZLeft","val XUp_YFront_ZLeft: Int = 0","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YFront_ZLeft"]},{"name":"val XUp_YFront_ZRight: Int = 1","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YFront_ZRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-y-front_-z-right.html","searchKeys":["XUp_YFront_ZRight","val XUp_YFront_ZRight: Int = 1","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_YFront_ZRight"]},{"name":"val XUp_ZBack_YLeft: Int = 6","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZBack_YLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-z-back_-y-left.html","searchKeys":["XUp_ZBack_YLeft","val XUp_ZBack_YLeft: Int = 6","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZBack_YLeft"]},{"name":"val XUp_ZBack_YRight: Int = 7","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZBack_YRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-z-back_-y-right.html","searchKeys":["XUp_ZBack_YRight","val XUp_ZBack_YRight: Int = 7","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZBack_YRight"]},{"name":"val XUp_ZFront_YLeft: Int = 4","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZFront_YLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-z-front_-y-left.html","searchKeys":["XUp_ZFront_YLeft","val XUp_ZFront_YLeft: Int = 4","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZFront_YLeft"]},{"name":"val XUp_ZFront_YRight: Int = 5","description":"com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZFront_YRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-x-up_-z-front_-y-right.html","searchKeys":["XUp_ZFront_YRight","val XUp_ZFront_YRight: Int = 5","com.google.ar.sceneform.lullmodel.AxisSystem.XUp_ZFront_YRight"]},{"name":"val YUp_XBack_ZLeft: Int = 10","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XBack_ZLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-x-back_-z-left.html","searchKeys":["YUp_XBack_ZLeft","val YUp_XBack_ZLeft: Int = 10","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XBack_ZLeft"]},{"name":"val YUp_XBack_ZRight: Int = 11","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XBack_ZRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-x-back_-z-right.html","searchKeys":["YUp_XBack_ZRight","val YUp_XBack_ZRight: Int = 11","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XBack_ZRight"]},{"name":"val YUp_XFront_ZLeft: Int = 8","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XFront_ZLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-x-front_-z-left.html","searchKeys":["YUp_XFront_ZLeft","val YUp_XFront_ZLeft: Int = 8","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XFront_ZLeft"]},{"name":"val YUp_XFront_ZRight: Int = 9","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XFront_ZRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-x-front_-z-right.html","searchKeys":["YUp_XFront_ZRight","val YUp_XFront_ZRight: Int = 9","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_XFront_ZRight"]},{"name":"val YUp_ZBack_XLeft: Int = 14","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZBack_XLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-z-back_-x-left.html","searchKeys":["YUp_ZBack_XLeft","val YUp_ZBack_XLeft: Int = 14","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZBack_XLeft"]},{"name":"val YUp_ZBack_XRight: Int = 15","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZBack_XRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-z-back_-x-right.html","searchKeys":["YUp_ZBack_XRight","val YUp_ZBack_XRight: Int = 15","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZBack_XRight"]},{"name":"val YUp_ZFront_XLeft: Int = 12","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZFront_XLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-z-front_-x-left.html","searchKeys":["YUp_ZFront_XLeft","val YUp_ZFront_XLeft: Int = 12","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZFront_XLeft"]},{"name":"val YUp_ZFront_XRight: Int = 13","description":"com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZFront_XRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-y-up_-z-front_-x-right.html","searchKeys":["YUp_ZFront_XRight","val YUp_ZFront_XRight: Int = 13","com.google.ar.sceneform.lullmodel.AxisSystem.YUp_ZFront_XRight"]},{"name":"val ZUp_XBack_YLeft: Int = 18","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XBack_YLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-x-back_-y-left.html","searchKeys":["ZUp_XBack_YLeft","val ZUp_XBack_YLeft: Int = 18","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XBack_YLeft"]},{"name":"val ZUp_XBack_YRight: Int = 19","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XBack_YRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-x-back_-y-right.html","searchKeys":["ZUp_XBack_YRight","val ZUp_XBack_YRight: Int = 19","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XBack_YRight"]},{"name":"val ZUp_XFront_YLeft: Int = 16","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XFront_YLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-x-front_-y-left.html","searchKeys":["ZUp_XFront_YLeft","val ZUp_XFront_YLeft: Int = 16","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XFront_YLeft"]},{"name":"val ZUp_XFront_YRight: Int = 17","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XFront_YRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-x-front_-y-right.html","searchKeys":["ZUp_XFront_YRight","val ZUp_XFront_YRight: Int = 17","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_XFront_YRight"]},{"name":"val ZUp_YBack_XLeft: Int = 22","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YBack_XLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-y-back_-x-left.html","searchKeys":["ZUp_YBack_XLeft","val ZUp_YBack_XLeft: Int = 22","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YBack_XLeft"]},{"name":"val ZUp_YBack_XRight: Int = 23","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YBack_XRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-y-back_-x-right.html","searchKeys":["ZUp_YBack_XRight","val ZUp_YBack_XRight: Int = 23","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YBack_XRight"]},{"name":"val ZUp_YFront_XLeft: Int = 20","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YFront_XLeft","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-y-front_-x-left.html","searchKeys":["ZUp_YFront_XLeft","val ZUp_YFront_XLeft: Int = 20","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YFront_XLeft"]},{"name":"val ZUp_YFront_XRight: Int = 21","description":"com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YFront_XRight","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/-z-up_-y-front_-x-right.html","searchKeys":["ZUp_YFront_XRight","val ZUp_YFront_XRight: Int = 21","com.google.ar.sceneform.lullmodel.AxisSystem.ZUp_YFront_XRight"]},{"name":"val animationCount: Int","description":"io.github.sceneview.node.ModelNode.animationCount","location":"sceneview/io.github.sceneview.node/-model-node/animation-count.html","searchKeys":["animationCount","val animationCount: Int","io.github.sceneview.node.ModelNode.animationCount"]},{"name":"val assetLoader: AssetLoader","description":"io.github.sceneview.loaders.ModelLoader.assetLoader","location":"sceneview/io.github.sceneview.loaders/-model-loader/asset-loader.html","searchKeys":["assetLoader","val assetLoader: AssetLoader","io.github.sceneview.loaders.ModelLoader.assetLoader"]},{"name":"val assets: AssetManager","description":"io.github.sceneview.loaders.MaterialLoader.assets","location":"sceneview/io.github.sceneview.loaders/-material-loader/assets.html","searchKeys":["assets","val assets: AssetManager","io.github.sceneview.loaders.MaterialLoader.assets"]},{"name":"val boundingBox: Box","description":"io.github.sceneview.node.ModelNode.boundingBox","location":"sceneview/io.github.sceneview.node/-model-node/bounding-box.html","searchKeys":["boundingBox","val boundingBox: Box","io.github.sceneview.node.ModelNode.boundingBox"]},{"name":"val boundingBox: Box? = null","description":"io.github.sceneview.node.MeshNode.boundingBox","location":"sceneview/io.github.sceneview.node/-mesh-node/bounding-box.html","searchKeys":["boundingBox","val boundingBox: Box? = null","io.github.sceneview.node.MeshNode.boundingBox"]},{"name":"val cameraNodes: List<ModelNode.CameraNode>","description":"io.github.sceneview.node.ModelNode.cameraNodes","location":"sceneview/io.github.sceneview.node/-model-node/camera-nodes.html","searchKeys":["cameraNodes","val cameraNodes: List<ModelNode.CameraNode>","io.github.sceneview.node.ModelNode.cameraNodes"]},{"name":"val center: Float3","description":"io.github.sceneview.node.ModelNode.center","location":"sceneview/io.github.sceneview.node/-model-node/center.html","searchKeys":["center","val center: Float3","io.github.sceneview.node.ModelNode.center"]},{"name":"val collisionSystem: CollisionSystem","description":"io.github.sceneview.SceneView.collisionSystem","location":"sceneview/io.github.sceneview/-scene-view/collision-system.html","searchKeys":["collisionSystem","val collisionSystem: CollisionSystem","io.github.sceneview.SceneView.collisionSystem"]},{"name":"val color: Color? = null","description":"io.github.sceneview.geometries.Geometry.Vertex.color","location":"sceneview/io.github.sceneview.geometries/-geometry/-vertex/color.html","searchKeys":["color","val color: Color? = null","io.github.sceneview.geometries.Geometry.Vertex.color"]},{"name":"val context: Context","description":"io.github.sceneview.loaders.MaterialLoader.context","location":"sceneview/io.github.sceneview.loaders/-material-loader/context.html","searchKeys":["context","val context: Context","io.github.sceneview.loaders.MaterialLoader.context"]},{"name":"val context: IBLPrefilterContext","description":"io.github.sceneview.environment.IBLPrefilter.context","location":"sceneview/io.github.sceneview.environment/-i-b-l-prefilter/context.html","searchKeys":["context","val context: IBLPrefilterContext","io.github.sceneview.environment.IBLPrefilter.context"]},{"name":"val dpPerMeters: Int","description":"com.google.ar.sceneform.rendering.DpToMetersViewSizer.dpPerMeters","location":"sceneview/com.google.ar.sceneform.rendering/-dp-to-meters-view-sizer/dp-per-meters.html","searchKeys":["dpPerMeters","val dpPerMeters: Int","com.google.ar.sceneform.rendering.DpToMetersViewSizer.dpPerMeters"]},{"name":"val engine: Engine","description":"io.github.sceneview.SceneView.engine","location":"sceneview/io.github.sceneview/-scene-view/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.SceneView.engine"]},{"name":"val engine: Engine","description":"io.github.sceneview.environment.Environment.engine","location":"sceneview/io.github.sceneview.environment/-environment/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.environment.Environment.engine"]},{"name":"val engine: Engine","description":"io.github.sceneview.loaders.MaterialLoader.engine","location":"sceneview/io.github.sceneview.loaders/-material-loader/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.loaders.MaterialLoader.engine"]},{"name":"val engine: Engine","description":"io.github.sceneview.loaders.ModelLoader.engine","location":"sceneview/io.github.sceneview.loaders/-model-loader/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.loaders.ModelLoader.engine"]},{"name":"val engine: Engine","description":"io.github.sceneview.material.VideoMaterial.engine","location":"sceneview/io.github.sceneview.material/-video-material/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.material.VideoMaterial.engine"]},{"name":"val engine: Engine","description":"io.github.sceneview.node.Node.engine","location":"sceneview/io.github.sceneview.node/-node/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.node.Node.engine"]},{"name":"val entity: Entity","description":"io.github.sceneview.node.Node.entity","location":"sceneview/io.github.sceneview.node/-node/entity.html","searchKeys":["entity","val entity: Entity","io.github.sceneview.node.Node.entity"]},{"name":"val extents: Float3","description":"io.github.sceneview.node.ModelNode.extents","location":"sceneview/io.github.sceneview.node/-model-node/extents.html","searchKeys":["extents","val extents: Float3","io.github.sceneview.node.ModelNode.extents"]},{"name":"val filamentMaterial: Material","description":"com.google.ar.sceneform.rendering.Material.filamentMaterial","location":"sceneview/com.google.ar.sceneform.rendering/-material/filament-material.html","searchKeys":["filamentMaterial","val filamentMaterial: Material","com.google.ar.sceneform.rendering.Material.filamentMaterial"]},{"name":"val filamentMaterialInstance: MaterialInstance","description":"com.google.ar.sceneform.rendering.Material.filamentMaterialInstance","location":"sceneview/com.google.ar.sceneform.rendering/-material/filament-material-instance.html","searchKeys":["filamentMaterialInstance","val filamentMaterialInstance: MaterialInstance","com.google.ar.sceneform.rendering.Material.filamentMaterialInstance"]},{"name":"val fromLullWrapMode: Array<TextureSampler.WrapMode>","description":"com.google.ar.sceneform.rendering.LullModel.fromLullWrapMode","location":"sceneview/com.google.ar.sceneform.rendering/-lull-model/from-lull-wrap-mode.html","searchKeys":["fromLullWrapMode","val fromLullWrapMode: Array<TextureSampler.WrapMode>","com.google.ar.sceneform.rendering.LullModel.fromLullWrapMode"]},{"name":"val halfExtent: Float3","description":"io.github.sceneview.node.ModelNode.halfExtent","location":"sceneview/io.github.sceneview.node/-model-node/half-extent.html","searchKeys":["halfExtent","val halfExtent: Float3","io.github.sceneview.node.ModelNode.halfExtent"]},{"name":"val iblPrefilter: IBLPrefilter","description":"io.github.sceneview.SceneView.iblPrefilter","location":"sceneview/io.github.sceneview/-scene-view/ibl-prefilter.html","searchKeys":["iblPrefilter","val iblPrefilter: IBLPrefilter","io.github.sceneview.SceneView.iblPrefilter"]},{"name":"val indexBuffer: IndexBuffer","description":"io.github.sceneview.geometries.Geometry.indexBuffer","location":"sceneview/io.github.sceneview.geometries/-geometry/index-buffer.html","searchKeys":["indexBuffer","val indexBuffer: IndexBuffer","io.github.sceneview.geometries.Geometry.indexBuffer"]},{"name":"val indexBuffer: IndexBuffer","description":"io.github.sceneview.node.MeshNode.indexBuffer","location":"sceneview/io.github.sceneview.node/-mesh-node/index-buffer.html","searchKeys":["indexBuffer","val indexBuffer: IndexBuffer","io.github.sceneview.node.MeshNode.indexBuffer"]},{"name":"val indices: List<Int>","description":"io.github.sceneview.geometries.Geometry.PrimitiveIndices.indices","location":"sceneview/io.github.sceneview.geometries/-geometry/-primitive-indices/indices.html","searchKeys":["indices","val indices: List<Int>","io.github.sceneview.geometries.Geometry.PrimitiveIndices.indices"]},{"name":"val indirectLight: IndirectLight? = null","description":"io.github.sceneview.environment.Environment.indirectLight","location":"sceneview/io.github.sceneview.environment/-environment/indirect-light.html","searchKeys":["indirectLight","val indirectLight: IndirectLight? = null","io.github.sceneview.environment.Environment.indirectLight"]},{"name":"val instance: MaterialInstance","description":"io.github.sceneview.material.VideoMaterial.instance","location":"sceneview/io.github.sceneview.material/-video-material/instance.html","searchKeys":["instance","val instance: MaterialInstance","io.github.sceneview.material.VideoMaterial.instance"]},{"name":"val lightNodes: List<ModelNode.LightNode>","description":"io.github.sceneview.node.ModelNode.lightNodes","location":"sceneview/io.github.sceneview.node/-model-node/light-nodes.html","searchKeys":["lightNodes","val lightNodes: List<ModelNode.LightNode>","io.github.sceneview.node.ModelNode.lightNodes"]},{"name":"val loop: Boolean = true","description":"io.github.sceneview.node.ModelNode.PlayingAnimation.loop","location":"sceneview/io.github.sceneview.node/-model-node/-playing-animation/loop.html","searchKeys":["loop","val loop: Boolean = true","io.github.sceneview.node.ModelNode.PlayingAnimation.loop"]},{"name":"val magFilter: Texture.Sampler.MagFilter","description":"com.google.ar.sceneform.rendering.Texture.Sampler.magFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/mag-filter.html","searchKeys":["magFilter","val magFilter: Texture.Sampler.MagFilter","com.google.ar.sceneform.rendering.Texture.Sampler.magFilter"]},{"name":"val materialLoader: MaterialLoader","description":"io.github.sceneview.SceneView.materialLoader","location":"sceneview/io.github.sceneview/-scene-view/material-loader.html","searchKeys":["materialLoader","val materialLoader: MaterialLoader","io.github.sceneview.SceneView.materialLoader"]},{"name":"val materialLoader: MaterialLoader","description":"io.github.sceneview.node.ImageNode.materialLoader","location":"sceneview/io.github.sceneview.node/-image-node/material-loader.html","searchKeys":["materialLoader","val materialLoader: MaterialLoader","io.github.sceneview.node.ImageNode.materialLoader"]},{"name":"val materialProvider: UbershaderProvider","description":"io.github.sceneview.loaders.ModelLoader.materialProvider","location":"sceneview/io.github.sceneview.loaders/-model-loader/material-provider.html","searchKeys":["materialProvider","val materialProvider: UbershaderProvider","io.github.sceneview.loaders.ModelLoader.materialProvider"]},{"name":"val materialVariantNames: List<String>","description":"io.github.sceneview.node.ModelNode.materialVariantNames","location":"sceneview/io.github.sceneview.node/-model-node/material-variant-names.html","searchKeys":["materialVariantNames","val materialVariantNames: List<String>","io.github.sceneview.node.ModelNode.materialVariantNames"]},{"name":"val minFilter: Texture.Sampler.MinFilter","description":"com.google.ar.sceneform.rendering.Texture.Sampler.minFilter","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/min-filter.html","searchKeys":["minFilter","val minFilter: Texture.Sampler.MinFilter","com.google.ar.sceneform.rendering.Texture.Sampler.minFilter"]},{"name":"val model: FilamentAsset","description":"io.github.sceneview.node.ModelNode.model","location":"sceneview/io.github.sceneview.node/-model-node/model.html","searchKeys":["model","val model: FilamentAsset","io.github.sceneview.node.ModelNode.model"]},{"name":"val modelInstance: ModelInstance","description":"io.github.sceneview.node.ModelNode.modelInstance","location":"sceneview/io.github.sceneview.node/-model-node/model-instance.html","searchKeys":["modelInstance","val modelInstance: ModelInstance","io.github.sceneview.node.ModelNode.modelInstance"]},{"name":"val modelLoader: ModelLoader","description":"io.github.sceneview.SceneView.modelLoader","location":"sceneview/io.github.sceneview/-scene-view/model-loader.html","searchKeys":["modelLoader","val modelLoader: ModelLoader","io.github.sceneview.SceneView.modelLoader"]},{"name":"val modelLoader: ModelLoader","description":"io.github.sceneview.node.ViewNode.modelLoader","location":"sceneview/io.github.sceneview.node/-view-node/model-loader.html","searchKeys":["modelLoader","val modelLoader: ModelLoader","io.github.sceneview.node.ViewNode.modelLoader"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.AxisSystem.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-axis-system/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.AxisSystem.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.DeviceType.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-device-type/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.DeviceType.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.LayoutFillOrder.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-fill-order/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.LayoutFillOrder.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-horizontal-alignment/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.LayoutHorizontalAlignment.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-layout-vertical-alignment/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.LayoutVerticalAlignment.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.OptionalBool.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-optional-bool/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.OptionalBool.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.TextureFiltering.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-filtering/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.TextureFiltering.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.TextureTargetType.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-target-type/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.TextureTargetType.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.TextureWrap.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-texture-wrap/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.TextureWrap.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.VariantDef.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-variant-def/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.VariantDef.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.VertexAttributeType.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-type/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.VertexAttributeType.names"]},{"name":"val names: Array<String>","description":"com.google.ar.sceneform.lullmodel.VertexAttributeUsage.names","location":"sceneview/com.google.ar.sceneform.lullmodel/-vertex-attribute-usage/names.html","searchKeys":["names","val names: Array<String>","com.google.ar.sceneform.lullmodel.VertexAttributeUsage.names"]},{"name":"val nodes: Map<String?, Any>","description":"io.github.sceneview.node.ModelNode.nodes","location":"sceneview/io.github.sceneview.node/-model-node/nodes.html","searchKeys":["nodes","val nodes: Map<String?, Any>","io.github.sceneview.node.ModelNode.nodes"]},{"name":"val normal: Direction? = null","description":"io.github.sceneview.geometries.Geometry.Vertex.normal","location":"sceneview/io.github.sceneview.geometries/-geometry/-vertex/normal.html","searchKeys":["normal","val normal: Direction? = null","io.github.sceneview.geometries.Geometry.Vertex.normal"]},{"name":"val position: Position","description":"io.github.sceneview.geometries.Geometry.Vertex.position","location":"sceneview/io.github.sceneview.geometries/-geometry/-vertex/position.html","searchKeys":["position","val position: Position","io.github.sceneview.geometries.Geometry.Vertex.position"]},{"name":"val primitiveType: RenderableManager.PrimitiveType","description":"io.github.sceneview.geometries.Geometry.Builder.primitiveType","location":"sceneview/io.github.sceneview.geometries/-geometry/-builder/primitive-type.html","searchKeys":["primitiveType","val primitiveType: RenderableManager.PrimitiveType","io.github.sceneview.geometries.Geometry.Builder.primitiveType"]},{"name":"val primitiveType: RenderableManager.PrimitiveType","description":"io.github.sceneview.geometries.Geometry.primitiveType","location":"sceneview/io.github.sceneview.geometries/-geometry/primitive-type.html","searchKeys":["primitiveType","val primitiveType: RenderableManager.PrimitiveType","io.github.sceneview.geometries.Geometry.primitiveType"]},{"name":"val progress: Float","description":"io.github.sceneview.loaders.ModelLoader.progress","location":"sceneview/io.github.sceneview.loaders/-model-loader/progress.html","searchKeys":["progress","val progress: Float","io.github.sceneview.loaders.ModelLoader.progress"]},{"name":"val renderView: RenderViewToExternalTexture","description":"com.google.ar.sceneform.rendering.ViewRenderableInternalData.renderView","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable-internal-data/render-view.html","searchKeys":["renderView","val renderView: RenderViewToExternalTexture","com.google.ar.sceneform.rendering.ViewRenderableInternalData.renderView"]},{"name":"val renderable: Renderable","description":"com.google.ar.sceneform.rendering.RenderableInstance.renderable","location":"sceneview/com.google.ar.sceneform.rendering/-renderable-instance/renderable.html","searchKeys":["renderable","val renderable: Renderable","com.google.ar.sceneform.rendering.RenderableInstance.renderable"]},{"name":"val renderable: ViewRenderable?","description":"io.github.sceneview.node.ViewNode.renderable","location":"sceneview/io.github.sceneview.node/-view-node/renderable.html","searchKeys":["renderable","val renderable: ViewRenderable?","io.github.sceneview.node.ViewNode.renderable"]},{"name":"val renderableNodes: List<ModelNode.RenderableNode>","description":"io.github.sceneview.node.ModelNode.renderableNodes","location":"sceneview/io.github.sceneview.node/-model-node/renderable-nodes.html","searchKeys":["renderableNodes","val renderableNodes: List<ModelNode.RenderableNode>","io.github.sceneview.node.ModelNode.renderableNodes"]},{"name":"val renderer: Renderer","description":"io.github.sceneview.SceneView.renderer","location":"sceneview/io.github.sceneview/-scene-view/renderer.html","searchKeys":["renderer","val renderer: Renderer","io.github.sceneview.SceneView.renderer"]},{"name":"val sharedCubemap: Boolean = false","description":"io.github.sceneview.environment.HDREnvironment.sharedCubemap","location":"sceneview/io.github.sceneview.environment/-h-d-r-environment/shared-cubemap.html","searchKeys":["sharedCubemap","val sharedCubemap: Boolean = false","io.github.sceneview.environment.HDREnvironment.sharedCubemap"]},{"name":"val size: Float3","description":"io.github.sceneview.node.ModelNode.size","location":"sceneview/io.github.sceneview.node/-model-node/size.html","searchKeys":["size","val size: Float3","io.github.sceneview.node.ModelNode.size"]},{"name":"val size: Size? = null","description":"io.github.sceneview.node.ImageNode.size","location":"sceneview/io.github.sceneview.node/-image-node/size.html","searchKeys":["size","val size: Size? = null","io.github.sceneview.node.ImageNode.size"]},{"name":"val skinCount: Int","description":"io.github.sceneview.node.ModelNode.skinCount","location":"sceneview/io.github.sceneview.node/-model-node/skin-count.html","searchKeys":["skinCount","val skinCount: Int","io.github.sceneview.node.ModelNode.skinCount"]},{"name":"val skinNames: List<String>","description":"io.github.sceneview.node.ModelNode.skinNames","location":"sceneview/io.github.sceneview.node/-model-node/skin-names.html","searchKeys":["skinNames","val skinNames: List<String>","io.github.sceneview.node.ModelNode.skinNames"]},{"name":"val skybox: Skybox? = null","description":"io.github.sceneview.environment.Environment.skybox","location":"sceneview/io.github.sceneview.environment/-environment/skybox.html","searchKeys":["skybox","val skybox: Skybox? = null","io.github.sceneview.environment.Environment.skybox"]},{"name":"val sphericalHarmonics: FloatArray? = null","description":"io.github.sceneview.environment.Environment.sphericalHarmonics","location":"sceneview/io.github.sceneview.environment/-environment/spherical-harmonics.html","searchKeys":["sphericalHarmonics","val sphericalHarmonics: FloatArray? = null","io.github.sceneview.environment.Environment.sphericalHarmonics"]},{"name":"val startTime: Long","description":"io.github.sceneview.node.ModelNode.PlayingAnimation.startTime","location":"sceneview/io.github.sceneview.node/-model-node/-playing-animation/start-time.html","searchKeys":["startTime","val startTime: Long","io.github.sceneview.node.ModelNode.PlayingAnimation.startTime"]},{"name":"val stream: Stream","description":"io.github.sceneview.material.VideoMaterial.stream","location":"sceneview/io.github.sceneview.material/-video-material/stream.html","searchKeys":["stream","val stream: Stream","io.github.sceneview.material.VideoMaterial.stream"]},{"name":"val surface: Surface","description":"com.google.ar.sceneform.rendering.ExternalTexture.surface","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/surface.html","searchKeys":["surface","val surface: Surface","com.google.ar.sceneform.rendering.ExternalTexture.surface"]},{"name":"val surface: Surface","description":"io.github.sceneview.material.VideoMaterial.surface","location":"sceneview/io.github.sceneview.material/-video-material/surface.html","searchKeys":["surface","val surface: Surface","io.github.sceneview.material.VideoMaterial.surface"]},{"name":"val surface: Surface","description":"io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.surface","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/-surface-mirror/surface.html","searchKeys":["surface","val surface: Surface","io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.surface"]},{"name":"val surfaceTexture: SurfaceTexture","description":"com.google.ar.sceneform.rendering.ExternalTexture.surfaceTexture","location":"sceneview/com.google.ar.sceneform.rendering/-external-texture/surface-texture.html","searchKeys":["surfaceTexture","val surfaceTexture: SurfaceTexture","com.google.ar.sceneform.rendering.ExternalTexture.surfaceTexture"]},{"name":"val surfaceTexture: SurfaceTexture","description":"io.github.sceneview.material.VideoMaterial.surfaceTexture","location":"sceneview/io.github.sceneview.material/-video-material/surface-texture.html","searchKeys":["surfaceTexture","val surfaceTexture: SurfaceTexture","io.github.sceneview.material.VideoMaterial.surfaceTexture"]},{"name":"val texture: Texture","description":"io.github.sceneview.material.VideoMaterial.texture","location":"sceneview/io.github.sceneview.material/-video-material/texture.html","searchKeys":["texture","val texture: Texture","io.github.sceneview.material.VideoMaterial.texture"]},{"name":"val texture: Texture","description":"io.github.sceneview.node.ImageNode.texture","location":"sceneview/io.github.sceneview.node/-image-node/texture.html","searchKeys":["texture","val texture: Texture","io.github.sceneview.node.ImageNode.texture"]},{"name":"val uiHelper: UiHelper","description":"io.github.sceneview.SceneView.uiHelper","location":"sceneview/io.github.sceneview/-scene-view/ui-helper.html","searchKeys":["uiHelper","val uiHelper: UiHelper","io.github.sceneview.SceneView.uiHelper"]},{"name":"val uvCoordinate: UvCoordinate? = null","description":"io.github.sceneview.geometries.Geometry.Vertex.uvCoordinate","location":"sceneview/io.github.sceneview.geometries/-geometry/-vertex/uv-coordinate.html","searchKeys":["uvCoordinate","val uvCoordinate: UvCoordinate? = null","io.github.sceneview.geometries.Geometry.Vertex.uvCoordinate"]},{"name":"val vertexBuffer: VertexBuffer","description":"io.github.sceneview.geometries.Geometry.vertexBuffer","location":"sceneview/io.github.sceneview.geometries/-geometry/vertex-buffer.html","searchKeys":["vertexBuffer","val vertexBuffer: VertexBuffer","io.github.sceneview.geometries.Geometry.vertexBuffer"]},{"name":"val vertexBuffer: VertexBuffer","description":"io.github.sceneview.node.MeshNode.vertexBuffer","location":"sceneview/io.github.sceneview.node/-mesh-node/vertex-buffer.html","searchKeys":["vertexBuffer","val vertexBuffer: VertexBuffer","io.github.sceneview.node.MeshNode.vertexBuffer"]},{"name":"val view: View","description":"com.google.ar.sceneform.rendering.ViewRenderable.view","location":"sceneview/com.google.ar.sceneform.rendering/-view-renderable/view.html","searchKeys":["view","val view: View","com.google.ar.sceneform.rendering.ViewRenderable.view"]},{"name":"val view: View","description":"io.github.sceneview.SceneView.view","location":"sceneview/io.github.sceneview/-scene-view/view.html","searchKeys":["view","val view: View","io.github.sceneview.SceneView.view"]},{"name":"val viewAttachmentManager: ViewAttachmentManager","description":"io.github.sceneview.node.ViewNode.viewAttachmentManager","location":"sceneview/io.github.sceneview.node/-view-node/view-attachment-manager.html","searchKeys":["viewAttachmentManager","val viewAttachmentManager: ViewAttachmentManager","io.github.sceneview.node.ViewNode.viewAttachmentManager"]},{"name":"val viewport: Viewport","description":"io.github.sceneview.node.CameraNode.viewport","location":"sceneview/io.github.sceneview.node/-camera-node/viewport.html","searchKeys":["viewport","val viewport: Viewport","io.github.sceneview.node.CameraNode.viewport"]},{"name":"val viewport: Viewport","description":"io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.viewport","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/-surface-mirror/viewport.html","searchKeys":["viewport","val viewport: Viewport","io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.viewport"]},{"name":"val worldToLocal: Transform","description":"io.github.sceneview.node.Node.worldToLocal","location":"sceneview/io.github.sceneview.node/-node/world-to-local.html","searchKeys":["worldToLocal","val worldToLocal: Transform","io.github.sceneview.node.Node.worldToLocal"]},{"name":"val wrapModeR: Texture.Sampler.WrapMode","description":"com.google.ar.sceneform.rendering.Texture.Sampler.wrapModeR","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/wrap-mode-r.html","searchKeys":["wrapModeR","val wrapModeR: Texture.Sampler.WrapMode","com.google.ar.sceneform.rendering.Texture.Sampler.wrapModeR"]},{"name":"val wrapModeS: Texture.Sampler.WrapMode","description":"com.google.ar.sceneform.rendering.Texture.Sampler.wrapModeS","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/wrap-mode-s.html","searchKeys":["wrapModeS","val wrapModeS: Texture.Sampler.WrapMode","com.google.ar.sceneform.rendering.Texture.Sampler.wrapModeS"]},{"name":"val wrapModeT: Texture.Sampler.WrapMode","description":"com.google.ar.sceneform.rendering.Texture.Sampler.wrapModeT","location":"sceneview/com.google.ar.sceneform.rendering/-texture/-sampler/wrap-mode-t.html","searchKeys":["wrapModeT","val wrapModeT: Texture.Sampler.WrapMode","com.google.ar.sceneform.rendering.Texture.Sampler.wrapModeT"]},{"name":"var Box.centerPosition: Position","description":"io.github.sceneview.math.centerPosition","location":"sceneview/io.github.sceneview.math/center-position.html","searchKeys":["centerPosition","var Box.centerPosition: Position","io.github.sceneview.math.centerPosition"]},{"name":"var Box.halfExtentSize: Size","description":"io.github.sceneview.math.halfExtentSize","location":"sceneview/io.github.sceneview.math/half-extent-size.html","searchKeys":["halfExtentSize","var Box.halfExtentSize: Size","io.github.sceneview.math.halfExtentSize"]},{"name":"var Camera.modelTransform: Transform","description":"io.github.sceneview.utils.modelTransform","location":"sceneview/io.github.sceneview.utils/model-transform.html","searchKeys":["modelTransform","var Camera.modelTransform: Transform","io.github.sceneview.utils.modelTransform"]},{"name":"var Camera.projectionTransform: Transform","description":"io.github.sceneview.utils.projectionTransform","location":"sceneview/io.github.sceneview.utils/projection-transform.html","searchKeys":["projectionTransform","var Camera.projectionTransform: Transform","io.github.sceneview.utils.projectionTransform"]},{"name":"var ModelInstance.isShadowCaster: Boolean","description":"io.github.sceneview.model.isShadowCaster","location":"sceneview/io.github.sceneview.model/is-shadow-caster.html","searchKeys":["isShadowCaster","var ModelInstance.isShadowCaster: Boolean","io.github.sceneview.model.isShadowCaster"]},{"name":"var ModelInstance.isShadowReceiver: Boolean","description":"io.github.sceneview.model.isShadowReceiver","location":"sceneview/io.github.sceneview.model/is-shadow-receiver.html","searchKeys":["isShadowReceiver","var ModelInstance.isShadowReceiver: Boolean","io.github.sceneview.model.isShadowReceiver"]},{"name":"var ModelInstance.materialInstances: Map<EntityInstance, List<MaterialInstance>>","description":"io.github.sceneview.model.materialInstances","location":"sceneview/io.github.sceneview.model/material-instances.html","searchKeys":["materialInstances","var ModelInstance.materialInstances: Map<EntityInstance, List<MaterialInstance>>","io.github.sceneview.model.materialInstances"]},{"name":"var animator: Animator","description":"io.github.sceneview.node.ModelNode.animator","location":"sceneview/io.github.sceneview.node/-model-node/animator.html","searchKeys":["animator","var animator: Animator","io.github.sceneview.node.ModelNode.animator"]},{"name":"var bitmap: Bitmap","description":"io.github.sceneview.node.ImageNode.bitmap","location":"sceneview/io.github.sceneview.node/-image-node/bitmap.html","searchKeys":["bitmap","var bitmap: Bitmap","io.github.sceneview.node.ImageNode.bitmap"]},{"name":"var boundary: List<Geometry.Vertex>","description":"io.github.sceneview.geometries.Polygon.boundary","location":"sceneview/io.github.sceneview.geometries/-polygon/boundary.html","searchKeys":["boundary","var boundary: List<Geometry.Vertex>","io.github.sceneview.geometries.Polygon.boundary"]},{"name":"var boundary: List<Geometry.Vertex>","description":"io.github.sceneview.node.PolygonNode.boundary","location":"sceneview/io.github.sceneview.node/-polygon-node/boundary.html","searchKeys":["boundary","var boundary: List<Geometry.Vertex>","io.github.sceneview.node.PolygonNode.boundary"]},{"name":"var boundingBox: Box","description":"io.github.sceneview.geometries.Geometry.boundingBox","location":"sceneview/io.github.sceneview.geometries/-geometry/bounding-box.html","searchKeys":["boundingBox","var boundingBox: Box","io.github.sceneview.geometries.Geometry.boundingBox"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Cube.Builder.center","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Cube.Builder.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Cube.center","location":"sceneview/io.github.sceneview.geometries/-cube/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Cube.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Cylinder.Builder.center","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Cylinder.Builder.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Cylinder.center","location":"sceneview/io.github.sceneview.geometries/-cylinder/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Cylinder.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Plane.Builder.center","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Plane.Builder.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Plane.center","location":"sceneview/io.github.sceneview.geometries/-plane/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Plane.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Sphere.Builder.center","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Sphere.Builder.center"]},{"name":"var center: Position","description":"io.github.sceneview.geometries.Sphere.center","location":"sceneview/io.github.sceneview.geometries/-sphere/center.html","searchKeys":["center","var center: Position","io.github.sceneview.geometries.Sphere.center"]},{"name":"var center: Vector3","description":"io.github.sceneview.collision.Box.center","location":"sceneview/io.github.sceneview.collision/-box/center.html","searchKeys":["center","var center: Vector3","io.github.sceneview.collision.Box.center"]},{"name":"var center: Vector3","description":"io.github.sceneview.collision.Plane.center","location":"sceneview/io.github.sceneview.collision/-plane/center.html","searchKeys":["center","var center: Vector3","io.github.sceneview.collision.Plane.center"]},{"name":"var center: Vector3","description":"io.github.sceneview.collision.Sphere.center","location":"sceneview/io.github.sceneview.collision/-sphere/center.html","searchKeys":["center","var center: Vector3","io.github.sceneview.collision.Sphere.center"]},{"name":"var childNodes: List<Node>","description":"io.github.sceneview.SceneView.childNodes","location":"sceneview/io.github.sceneview/-scene-view/child-nodes.html","searchKeys":["childNodes","var childNodes: List<Node>","io.github.sceneview.SceneView.childNodes"]},{"name":"var childNodes: List<Node>","description":"io.github.sceneview.node.Node.childNodes","location":"sceneview/io.github.sceneview.node/-node/child-nodes.html","searchKeys":["childNodes","var childNodes: List<Node>","io.github.sceneview.node.Node.childNodes"]},{"name":"var collider: Collider?","description":"io.github.sceneview.node.Node.collider","location":"sceneview/io.github.sceneview.node/-node/collider.html","searchKeys":["collider","var collider: Collider?","io.github.sceneview.node.Node.collider"]},{"name":"var collisionShape: CollisionShape?","description":"io.github.sceneview.node.Node.collisionShape","location":"sceneview/io.github.sceneview.node/-node/collision-shape.html","searchKeys":["collisionShape","var collisionShape: CollisionShape?","io.github.sceneview.node.Node.collisionShape"]},{"name":"var collisionSystem: CollisionSystem?","description":"io.github.sceneview.node.Node.collisionSystem","location":"sceneview/io.github.sceneview.node/-node/collision-system.html","searchKeys":["collisionSystem","var collisionSystem: CollisionSystem?","io.github.sceneview.node.Node.collisionSystem"]},{"name":"var cubemap: Texture?","description":"io.github.sceneview.environment.HDREnvironment.cubemap","location":"sceneview/io.github.sceneview.environment/-h-d-r-environment/cubemap.html","searchKeys":["cubemap","var cubemap: Texture?","io.github.sceneview.environment.HDREnvironment.cubemap"]},{"name":"var currentAngle: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.currentAngle","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/current-angle.html","searchKeys":["currentAngle","var currentAngle: Float","io.github.sceneview.gesture.RotateGestureDetector.currentAngle"]},{"name":"var currentMotionEvent: MotionEvent?","description":"io.github.sceneview.gesture.MoveGestureDetector.currentMotionEvent","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/current-motion-event.html","searchKeys":["currentMotionEvent","var currentMotionEvent: MotionEvent?","io.github.sceneview.gesture.MoveGestureDetector.currentMotionEvent"]},{"name":"var currentSpan: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.currentSpan","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/current-span.html","searchKeys":["currentSpan","var currentSpan: Float","io.github.sceneview.gesture.RotateGestureDetector.currentSpan"]},{"name":"var editableScaleRange: ClosedFloatingPointRange<Float>","description":"io.github.sceneview.node.Node.editableScaleRange","location":"sceneview/io.github.sceneview.node/-node/editable-scale-range.html","searchKeys":["editableScaleRange","var editableScaleRange: ClosedFloatingPointRange<Float>","io.github.sceneview.node.Node.editableScaleRange"]},{"name":"var editingTransforms: Set<KProperty1<Node, Any>>","description":"io.github.sceneview.node.Node.editingTransforms","location":"sceneview/io.github.sceneview.node/-node/editing-transforms.html","searchKeys":["editingTransforms","var editingTransforms: Set<KProperty1<Node, Any>>","io.github.sceneview.node.Node.editingTransforms"]},{"name":"var firstMotionEvent: MotionEvent?","description":"io.github.sceneview.gesture.MoveGestureDetector.firstMotionEvent","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/first-motion-event.html","searchKeys":["firstMotionEvent","var firstMotionEvent: MotionEvent?","io.github.sceneview.gesture.MoveGestureDetector.firstMotionEvent"]},{"name":"var focusX: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.focusX","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/focus-x.html","searchKeys":["focusX","var focusX: Float","io.github.sceneview.gesture.RotateGestureDetector.focusX"]},{"name":"var focusY: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.focusY","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/focus-y.html","searchKeys":["focusY","var focusY: Float","io.github.sceneview.gesture.RotateGestureDetector.focusY"]},{"name":"var fuelManager: FuelManager","description":"io.github.sceneview.utils.FileLoader.fuelManager","location":"sceneview/io.github.sceneview.utils/-file-loader/fuel-manager.html","searchKeys":["fuelManager","var fuelManager: FuelManager","io.github.sceneview.utils.FileLoader.fuelManager"]},{"name":"var gestureDetector: GestureDetector","description":"io.github.sceneview.SceneView.gestureDetector","location":"sceneview/io.github.sceneview/-scene-view/gesture-detector.html","searchKeys":["gestureDetector","var gestureDetector: GestureDetector","io.github.sceneview.SceneView.gestureDetector"]},{"name":"var height: Float","description":"io.github.sceneview.geometries.Cylinder.Builder.height","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/height.html","searchKeys":["height","var height: Float","io.github.sceneview.geometries.Cylinder.Builder.height"]},{"name":"var height: Float","description":"io.github.sceneview.geometries.Cylinder.height","location":"sceneview/io.github.sceneview.geometries/-cylinder/height.html","searchKeys":["height","var height: Float","io.github.sceneview.geometries.Cylinder.height"]},{"name":"var indices: List<Geometry.PrimitiveIndices>","description":"io.github.sceneview.geometries.Geometry.indices","location":"sceneview/io.github.sceneview.geometries/-geometry/indices.html","searchKeys":["indices","var indices: List<Geometry.PrimitiveIndices>","io.github.sceneview.geometries.Geometry.indices"]},{"name":"var indirectLightIntensity: Float?","description":"io.github.sceneview.environment.HDREnvironment.indirectLightIntensity","location":"sceneview/io.github.sceneview.environment/-h-d-r-environment/indirect-light-intensity.html","searchKeys":["indirectLightIntensity","var indirectLightIntensity: Float?","io.github.sceneview.environment.HDREnvironment.indirectLightIntensity"]},{"name":"var isFrontFaceWindingInverted: Boolean","description":"io.github.sceneview.SceneView.isFrontFaceWindingInverted","location":"sceneview/io.github.sceneview/-scene-view/is-front-face-winding-inverted.html","searchKeys":["isFrontFaceWindingInverted","var isFrontFaceWindingInverted: Boolean","io.github.sceneview.SceneView.isFrontFaceWindingInverted"]},{"name":"var isGestureInProgress: Boolean","description":"io.github.sceneview.gesture.RotateGestureDetector.isGestureInProgress","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/is-gesture-in-progress.html","searchKeys":["isGestureInProgress","var isGestureInProgress: Boolean","io.github.sceneview.gesture.RotateGestureDetector.isGestureInProgress"]},{"name":"var isHittable: Boolean","description":"io.github.sceneview.node.Node.isHittable","location":"sceneview/io.github.sceneview.node/-node/is-hittable.html","searchKeys":["isHittable","var isHittable: Boolean","io.github.sceneview.node.Node.isHittable"]},{"name":"var isPanEnabled: Boolean","description":"io.github.sceneview.gesture.CameraGestureDetector.isPanEnabled","location":"sceneview/io.github.sceneview.gesture/-camera-gesture-detector/is-pan-enabled.html","searchKeys":["isPanEnabled","var isPanEnabled: Boolean","io.github.sceneview.gesture.CameraGestureDetector.isPanEnabled"]},{"name":"var isShadowCaster: Boolean","description":"io.github.sceneview.node.ModelNode.isShadowCaster","location":"sceneview/io.github.sceneview.node/-model-node/is-shadow-caster.html","searchKeys":["isShadowCaster","var isShadowCaster: Boolean","io.github.sceneview.node.ModelNode.isShadowCaster"]},{"name":"var isShadowReceiver: Boolean","description":"io.github.sceneview.node.ModelNode.isShadowReceiver","location":"sceneview/io.github.sceneview.node/-model-node/is-shadow-receiver.html","searchKeys":["isShadowReceiver","var isShadowReceiver: Boolean","io.github.sceneview.node.ModelNode.isShadowReceiver"]},{"name":"var isSmoothTransformEnabled: Boolean","description":"io.github.sceneview.node.Node.isSmoothTransformEnabled","location":"sceneview/io.github.sceneview.node/-node/is-smooth-transform-enabled.html","searchKeys":["isSmoothTransformEnabled","var isSmoothTransformEnabled: Boolean","io.github.sceneview.node.Node.isSmoothTransformEnabled"]},{"name":"var lastAngle: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.lastAngle","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/last-angle.html","searchKeys":["lastAngle","var lastAngle: Float","io.github.sceneview.gesture.RotateGestureDetector.lastAngle"]},{"name":"var lastDistanceX: Float?","description":"io.github.sceneview.gesture.MoveGestureDetector.lastDistanceX","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/last-distance-x.html","searchKeys":["lastDistanceX","var lastDistanceX: Float?","io.github.sceneview.gesture.MoveGestureDetector.lastDistanceX"]},{"name":"var lastDistanceY: Float?","description":"io.github.sceneview.gesture.MoveGestureDetector.lastDistanceY","location":"sceneview/io.github.sceneview.gesture/-move-gesture-detector/last-distance-y.html","searchKeys":["lastDistanceY","var lastDistanceY: Float?","io.github.sceneview.gesture.MoveGestureDetector.lastDistanceY"]},{"name":"var listener: GestureDetector.OnGestureListener?","description":"io.github.sceneview.gesture.GestureDetector.listener","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/listener.html","searchKeys":["listener","var listener: GestureDetector.OnGestureListener?","io.github.sceneview.gesture.GestureDetector.listener"]},{"name":"var materialInstances: List<List<MaterialInstance>>","description":"io.github.sceneview.node.ModelNode.materialInstances","location":"sceneview/io.github.sceneview.node/-model-node/material-instances.html","searchKeys":["materialInstances","var materialInstances: List<List<MaterialInstance>>","io.github.sceneview.node.ModelNode.materialInstances"]},{"name":"var node: Node","description":"io.github.sceneview.collision.HitResult.node","location":"sceneview/io.github.sceneview.collision/-hit-result/node.html","searchKeys":["node","var node: Node","io.github.sceneview.collision.HitResult.node"]},{"name":"var nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit","description":"io.github.sceneview.gesture.GestureDetector.nodeSelector","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/node-selector.html","searchKeys":["nodeSelector","var nodeSelector: (e: MotionEvent, (node: Node?) -> Unit) -> Unit","io.github.sceneview.gesture.GestureDetector.nodeSelector"]},{"name":"var normal: Direction","description":"io.github.sceneview.geometries.Plane.Builder.normal","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/normal.html","searchKeys":["normal","var normal: Direction","io.github.sceneview.geometries.Plane.Builder.normal"]},{"name":"var normal: Direction","description":"io.github.sceneview.geometries.Plane.normal","location":"sceneview/io.github.sceneview.geometries/-plane/normal.html","searchKeys":["normal","var normal: Direction","io.github.sceneview.geometries.Plane.normal"]},{"name":"var normal: Vector3","description":"io.github.sceneview.collision.Plane.normal","location":"sceneview/io.github.sceneview.collision/-plane/normal.html","searchKeys":["normal","var normal: Vector3","io.github.sceneview.collision.Plane.normal"]},{"name":"var onContextClick: (e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onContextClick","location":"sceneview/io.github.sceneview.node/-node/on-context-click.html","searchKeys":["onContextClick","var onContextClick: (e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onContextClick"]},{"name":"var onDoubleTap: (e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onDoubleTap","location":"sceneview/io.github.sceneview.node/-node/on-double-tap.html","searchKeys":["onDoubleTap","var onDoubleTap: (e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onDoubleTap"]},{"name":"var onDoubleTapEvent: (e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onDoubleTapEvent","location":"sceneview/io.github.sceneview.node/-node/on-double-tap-event.html","searchKeys":["onDoubleTapEvent","var onDoubleTapEvent: (e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onDoubleTapEvent"]},{"name":"var onDown: (e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onDown","location":"sceneview/io.github.sceneview.node/-node/on-down.html","searchKeys":["onDown","var onDown: (e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onDown"]},{"name":"var onEditingChanged: (editingTransforms: Set<KProperty1<Node, Any>?>) -> Unit?","description":"io.github.sceneview.node.Node.onEditingChanged","location":"sceneview/io.github.sceneview.node/-node/on-editing-changed.html","searchKeys":["onEditingChanged","var onEditingChanged: (editingTransforms: Set<KProperty1<Node, Any>?>) -> Unit?","io.github.sceneview.node.Node.onEditingChanged"]},{"name":"var onError: (Exception) -> Unit?","description":"io.github.sceneview.node.ViewNode.onError","location":"sceneview/io.github.sceneview.node/-view-node/on-error.html","searchKeys":["onError","var onError: (Exception) -> Unit?","io.github.sceneview.node.ViewNode.onError"]},{"name":"var onFling: (e1: MotionEvent?, e2: MotionEvent, velocity: Float2) -> Boolean?","description":"io.github.sceneview.node.Node.onFling","location":"sceneview/io.github.sceneview.node/-node/on-fling.html","searchKeys":["onFling","var onFling: (e1: MotionEvent?, e2: MotionEvent, velocity: Float2) -> Boolean?","io.github.sceneview.node.Node.onFling"]},{"name":"var onFrame: (frameTimeNanos: Long) -> Unit?","description":"io.github.sceneview.SceneView.onFrame","location":"sceneview/io.github.sceneview/-scene-view/on-frame.html","searchKeys":["onFrame","var onFrame: (frameTimeNanos: Long) -> Unit?","io.github.sceneview.SceneView.onFrame"]},{"name":"var onFrame: (frameTimeNanos: Long) -> Unit?","description":"io.github.sceneview.node.Node.onFrame","location":"sceneview/io.github.sceneview.node/-node/on-frame.html","searchKeys":["onFrame","var onFrame: (frameTimeNanos: Long) -> Unit?","io.github.sceneview.node.Node.onFrame"]},{"name":"var onGestureListener: GestureDetector.OnGestureListener?","description":"io.github.sceneview.SceneView.onGestureListener","location":"sceneview/io.github.sceneview/-scene-view/on-gesture-listener.html","searchKeys":["onGestureListener","var onGestureListener: GestureDetector.OnGestureListener?","io.github.sceneview.SceneView.onGestureListener"]},{"name":"var onLongPress: (e: MotionEvent) -> Unit?","description":"io.github.sceneview.node.Node.onLongPress","location":"sceneview/io.github.sceneview.node/-node/on-long-press.html","searchKeys":["onLongPress","var onLongPress: (e: MotionEvent) -> Unit?","io.github.sceneview.node.Node.onLongPress"]},{"name":"var onMove: (detector: MoveGestureDetector, e: MotionEvent, Position) -> Boolean?","description":"io.github.sceneview.node.Node.onMove","location":"sceneview/io.github.sceneview.node/-node/on-move.html","searchKeys":["onMove","var onMove: (detector: MoveGestureDetector, e: MotionEvent, Position) -> Boolean?","io.github.sceneview.node.Node.onMove"]},{"name":"var onMoveBegin: (detector: MoveGestureDetector, e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onMoveBegin","location":"sceneview/io.github.sceneview.node/-node/on-move-begin.html","searchKeys":["onMoveBegin","var onMoveBegin: (detector: MoveGestureDetector, e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onMoveBegin"]},{"name":"var onMoveEnd: (detector: MoveGestureDetector, e: MotionEvent) -> Unit?","description":"io.github.sceneview.node.Node.onMoveEnd","location":"sceneview/io.github.sceneview.node/-node/on-move-end.html","searchKeys":["onMoveEnd","var onMoveEnd: (detector: MoveGestureDetector, e: MotionEvent) -> Unit?","io.github.sceneview.node.Node.onMoveEnd"]},{"name":"var onRotate: (detector: RotateGestureDetector, e: MotionEvent, rotationDelta: Quaternion) -> Boolean?","description":"io.github.sceneview.node.Node.onRotate","location":"sceneview/io.github.sceneview.node/-node/on-rotate.html","searchKeys":["onRotate","var onRotate: (detector: RotateGestureDetector, e: MotionEvent, rotationDelta: Quaternion) -> Boolean?","io.github.sceneview.node.Node.onRotate"]},{"name":"var onRotateBegin: (detector: RotateGestureDetector, e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onRotateBegin","location":"sceneview/io.github.sceneview.node/-node/on-rotate-begin.html","searchKeys":["onRotateBegin","var onRotateBegin: (detector: RotateGestureDetector, e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onRotateBegin"]},{"name":"var onRotateEnd: (detector: RotateGestureDetector, e: MotionEvent) -> Unit?","description":"io.github.sceneview.node.Node.onRotateEnd","location":"sceneview/io.github.sceneview.node/-node/on-rotate-end.html","searchKeys":["onRotateEnd","var onRotateEnd: (detector: RotateGestureDetector, e: MotionEvent) -> Unit?","io.github.sceneview.node.Node.onRotateEnd"]},{"name":"var onScale: (detector: ScaleGestureDetector, e: MotionEvent, scaleFactor: Float) -> Boolean?","description":"io.github.sceneview.node.Node.onScale","location":"sceneview/io.github.sceneview.node/-node/on-scale.html","searchKeys":["onScale","var onScale: (detector: ScaleGestureDetector, e: MotionEvent, scaleFactor: Float) -> Boolean?","io.github.sceneview.node.Node.onScale"]},{"name":"var onScaleBegin: (detector: ScaleGestureDetector, e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onScaleBegin","location":"sceneview/io.github.sceneview.node/-node/on-scale-begin.html","searchKeys":["onScaleBegin","var onScaleBegin: (detector: ScaleGestureDetector, e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onScaleBegin"]},{"name":"var onScaleEnd: (detector: ScaleGestureDetector, e: MotionEvent) -> Unit?","description":"io.github.sceneview.node.Node.onScaleEnd","location":"sceneview/io.github.sceneview.node/-node/on-scale-end.html","searchKeys":["onScaleEnd","var onScaleEnd: (detector: ScaleGestureDetector, e: MotionEvent) -> Unit?","io.github.sceneview.node.Node.onScaleEnd"]},{"name":"var onScroll: (e1: MotionEvent?, e2: MotionEvent, distance: Float2) -> Boolean?","description":"io.github.sceneview.node.Node.onScroll","location":"sceneview/io.github.sceneview.node/-node/on-scroll.html","searchKeys":["onScroll","var onScroll: (e1: MotionEvent?, e2: MotionEvent, distance: Float2) -> Boolean?","io.github.sceneview.node.Node.onScroll"]},{"name":"var onShowPress: (e: MotionEvent) -> Unit?","description":"io.github.sceneview.node.Node.onShowPress","location":"sceneview/io.github.sceneview.node/-node/on-show-press.html","searchKeys":["onShowPress","var onShowPress: (e: MotionEvent) -> Unit?","io.github.sceneview.node.Node.onShowPress"]},{"name":"var onSingleTapConfirmed: (e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onSingleTapConfirmed","location":"sceneview/io.github.sceneview.node/-node/on-single-tap-confirmed.html","searchKeys":["onSingleTapConfirmed","var onSingleTapConfirmed: (e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onSingleTapConfirmed"]},{"name":"var onSingleTapUp: (e: MotionEvent) -> Boolean?","description":"io.github.sceneview.node.Node.onSingleTapUp","location":"sceneview/io.github.sceneview.node/-node/on-single-tap-up.html","searchKeys":["onSingleTapUp","var onSingleTapUp: (e: MotionEvent) -> Boolean?","io.github.sceneview.node.Node.onSingleTapUp"]},{"name":"var onSmoothEnd: (node: Node) -> Unit?","description":"io.github.sceneview.node.Node.onSmoothEnd","location":"sceneview/io.github.sceneview.node/-node/on-smooth-end.html","searchKeys":["onSmoothEnd","var onSmoothEnd: (node: Node) -> Unit?","io.github.sceneview.node.Node.onSmoothEnd"]},{"name":"var onViewLoaded: (renderableInstance: RenderableInstance, view: View) -> Unit?","description":"io.github.sceneview.node.ViewNode.onViewLoaded","location":"sceneview/io.github.sceneview.node/-view-node/on-view-loaded.html","searchKeys":["onViewLoaded","var onViewLoaded: (renderableInstance: RenderableInstance, view: View) -> Unit?","io.github.sceneview.node.ViewNode.onViewLoaded"]},{"name":"var parent: Node?","description":"io.github.sceneview.node.Node.parent","location":"sceneview/io.github.sceneview.node/-node/parent.html","searchKeys":["parent","var parent: Node?","io.github.sceneview.node.Node.parent"]},{"name":"var playingAnimations: MutableMap<Int, ModelNode.PlayingAnimation>","description":"io.github.sceneview.node.ModelNode.playingAnimations","location":"sceneview/io.github.sceneview.node/-model-node/playing-animations.html","searchKeys":["playingAnimations","var playingAnimations: MutableMap<Int, ModelNode.PlayingAnimation>","io.github.sceneview.node.ModelNode.playingAnimations"]},{"name":"var point: Vector3","description":"io.github.sceneview.collision.RayHit.point","location":"sceneview/io.github.sceneview.collision/-ray-hit/point.html","searchKeys":["point","var point: Vector3","io.github.sceneview.collision.RayHit.point"]},{"name":"var position: Vector3","description":"com.google.ar.sceneform.rendering.Vertex.position","location":"sceneview/com.google.ar.sceneform.rendering/-vertex/position.html","searchKeys":["position","var position: Vector3","com.google.ar.sceneform.rendering.Vertex.position"]},{"name":"var previousAngle: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.previousAngle","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/previous-angle.html","searchKeys":["previousAngle","var previousAngle: Float","io.github.sceneview.gesture.RotateGestureDetector.previousAngle"]},{"name":"var previousSpan: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.previousSpan","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/previous-span.html","searchKeys":["previousSpan","var previousSpan: Float","io.github.sceneview.gesture.RotateGestureDetector.previousSpan"]},{"name":"var primitivesOffsets: List<IntRange>","description":"io.github.sceneview.geometries.Geometry.primitivesOffsets","location":"sceneview/io.github.sceneview.geometries/-geometry/primitives-offsets.html","searchKeys":["primitivesOffsets","var primitivesOffsets: List<IntRange>","io.github.sceneview.geometries.Geometry.primitivesOffsets"]},{"name":"var radius: Float","description":"io.github.sceneview.geometries.Cylinder.Builder.radius","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/radius.html","searchKeys":["radius","var radius: Float","io.github.sceneview.geometries.Cylinder.Builder.radius"]},{"name":"var radius: Float","description":"io.github.sceneview.geometries.Cylinder.radius","location":"sceneview/io.github.sceneview.geometries/-cylinder/radius.html","searchKeys":["radius","var radius: Float","io.github.sceneview.geometries.Cylinder.radius"]},{"name":"var radius: Float","description":"io.github.sceneview.geometries.Sphere.Builder.radius","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/radius.html","searchKeys":["radius","var radius: Float","io.github.sceneview.geometries.Sphere.Builder.radius"]},{"name":"var radius: Float","description":"io.github.sceneview.geometries.Sphere.radius","location":"sceneview/io.github.sceneview.geometries/-sphere/radius.html","searchKeys":["radius","var radius: Float","io.github.sceneview.geometries.Sphere.radius"]},{"name":"var renderableInstance: RenderableInstance?","description":"io.github.sceneview.node.ViewNode.renderableInstance","location":"sceneview/io.github.sceneview.node/-view-node/renderable-instance.html","searchKeys":["renderableInstance","var renderableInstance: RenderableInstance?","io.github.sceneview.node.ViewNode.renderableInstance"]},{"name":"var resourceLoader: ResourceLoader","description":"io.github.sceneview.loaders.ModelLoader.resourceLoader","location":"sceneview/io.github.sceneview.loaders/-model-loader/resource-loader.html","searchKeys":["resourceLoader","var resourceLoader: ResourceLoader","io.github.sceneview.loaders.ModelLoader.resourceLoader"]},{"name":"var rotation: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.rotation","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/rotation.html","searchKeys":["rotation","var rotation: Float","io.github.sceneview.gesture.RotateGestureDetector.rotation"]},{"name":"var rotationThreshold: Float","description":"io.github.sceneview.gesture.RotateGestureDetector.rotationThreshold","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/rotation-threshold.html","searchKeys":["rotationThreshold","var rotationThreshold: Float","io.github.sceneview.gesture.RotateGestureDetector.rotationThreshold"]},{"name":"var scene: Scene","description":"io.github.sceneview.SceneView.scene","location":"sceneview/io.github.sceneview/-scene-view/scene.html","searchKeys":["scene","var scene: Scene","io.github.sceneview.SceneView.scene"]},{"name":"var selectedNode: Node?","description":"io.github.sceneview.gesture.SelectedNodeGestureDetector.selectedNode","location":"sceneview/io.github.sceneview.gesture/-selected-node-gesture-detector/selected-node.html","searchKeys":["selectedNode","var selectedNode: Node?","io.github.sceneview.gesture.SelectedNodeGestureDetector.selectedNode"]},{"name":"var sideCount: Int","description":"io.github.sceneview.geometries.Cylinder.Builder.sideCount","location":"sceneview/io.github.sceneview.geometries/-cylinder/-builder/side-count.html","searchKeys":["sideCount","var sideCount: Int","io.github.sceneview.geometries.Cylinder.Builder.sideCount"]},{"name":"var sideCount: Int","description":"io.github.sceneview.geometries.Cylinder.sideCount","location":"sceneview/io.github.sceneview.geometries/-cylinder/side-count.html","searchKeys":["sideCount","var sideCount: Int","io.github.sceneview.geometries.Cylinder.sideCount"]},{"name":"var size: Size","description":"io.github.sceneview.geometries.Cube.Builder.size","location":"sceneview/io.github.sceneview.geometries/-cube/-builder/size.html","searchKeys":["size","var size: Size","io.github.sceneview.geometries.Cube.Builder.size"]},{"name":"var size: Size","description":"io.github.sceneview.geometries.Cube.size","location":"sceneview/io.github.sceneview.geometries/-cube/size.html","searchKeys":["size","var size: Size","io.github.sceneview.geometries.Cube.size"]},{"name":"var size: Size","description":"io.github.sceneview.geometries.Plane.Builder.size","location":"sceneview/io.github.sceneview.geometries/-plane/-builder/size.html","searchKeys":["size","var size: Size","io.github.sceneview.geometries.Plane.Builder.size"]},{"name":"var size: Size","description":"io.github.sceneview.geometries.Plane.size","location":"sceneview/io.github.sceneview.geometries/-plane/size.html","searchKeys":["size","var size: Size","io.github.sceneview.geometries.Plane.size"]},{"name":"var size: Vector3","description":"io.github.sceneview.collision.Box.size","location":"sceneview/io.github.sceneview.collision/-box/size.html","searchKeys":["size","var size: Vector3","io.github.sceneview.collision.Box.size"]},{"name":"var skybox: Skybox?","description":"io.github.sceneview.SceneView.skybox","location":"sceneview/io.github.sceneview/-scene-view/skybox.html","searchKeys":["skybox","var skybox: Skybox?","io.github.sceneview.SceneView.skybox"]},{"name":"var slices: Int","description":"io.github.sceneview.geometries.Sphere.Builder.slices","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/slices.html","searchKeys":["slices","var slices: Int","io.github.sceneview.geometries.Sphere.Builder.slices"]},{"name":"var slices: Int","description":"io.github.sceneview.geometries.Sphere.slices","location":"sceneview/io.github.sceneview.geometries/-sphere/slices.html","searchKeys":["slices","var slices: Int","io.github.sceneview.geometries.Sphere.slices"]},{"name":"var smoothTransform: Transform?","description":"io.github.sceneview.node.Node.smoothTransform","location":"sceneview/io.github.sceneview.node/-node/smooth-transform.html","searchKeys":["smoothTransform","var smoothTransform: Transform?","io.github.sceneview.node.Node.smoothTransform"]},{"name":"var smoothTransformSpeed: Float","description":"io.github.sceneview.node.Node.smoothTransformSpeed","location":"sceneview/io.github.sceneview.node/-node/smooth-transform-speed.html","searchKeys":["smoothTransformSpeed","var smoothTransformSpeed: Float","io.github.sceneview.node.Node.smoothTransformSpeed"]},{"name":"var stacks: Int","description":"io.github.sceneview.geometries.Sphere.Builder.stacks","location":"sceneview/io.github.sceneview.geometries/-sphere/-builder/stacks.html","searchKeys":["stacks","var stacks: Int","io.github.sceneview.geometries.Sphere.Builder.stacks"]},{"name":"var stacks: Int","description":"io.github.sceneview.geometries.Sphere.stacks","location":"sceneview/io.github.sceneview.geometries/-sphere/stacks.html","searchKeys":["stacks","var stacks: Int","io.github.sceneview.geometries.Sphere.stacks"]},{"name":"var swapChain: SwapChain?","description":"io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.swapChain","location":"sceneview/io.github.sceneview.utils/-surface-mirrorer/-surface-mirror/swap-chain.html","searchKeys":["swapChain","var swapChain: SwapChain?","io.github.sceneview.utils.SurfaceMirrorer.SurfaceMirror.swapChain"]},{"name":"var timeDelta: Long","description":"io.github.sceneview.gesture.RotateGestureDetector.timeDelta","location":"sceneview/io.github.sceneview.gesture/-rotate-gesture-detector/time-delta.html","searchKeys":["timeDelta","var timeDelta: Long","io.github.sceneview.gesture.RotateGestureDetector.timeDelta"]},{"name":"var touchedNode: Node?","description":"io.github.sceneview.gesture.GestureDetector.touchedNode","location":"sceneview/io.github.sceneview.gesture/-gesture-detector/touched-node.html","searchKeys":["touchedNode","var touchedNode: Node?","io.github.sceneview.gesture.GestureDetector.touchedNode"]},{"name":"var vertices: List<Geometry.Vertex>","description":"io.github.sceneview.geometries.Geometry.vertices","location":"sceneview/io.github.sceneview.geometries/-geometry/vertices.html","searchKeys":["vertices","var vertices: List<Geometry.Vertex>","io.github.sceneview.geometries.Geometry.vertices"]},{"name":"var view: View","description":"io.github.sceneview.collision.CollisionSystem.view","location":"sceneview/io.github.sceneview.collision/-collision-system/view.html","searchKeys":["view","var view: View","io.github.sceneview.collision.CollisionSystem.view"]},{"name":"var worldTransform: Transform","description":"io.github.sceneview.node.Node.worldTransform","location":"sceneview/io.github.sceneview.node/-node/world-transform.html","searchKeys":["worldTransform","var worldTransform: Transform","io.github.sceneview.node.Node.worldTransform"]},{"name":"RENDER_ALL","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.RENDER_ALL","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer-mode/-r-e-n-d-e-r_-a-l-l/index.html","searchKeys":["RENDER_ALL","RENDER_ALL","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.RENDER_ALL"]},{"name":"RENDER_CENTER","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.RENDER_CENTER","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer-mode/-r-e-n-d-e-r_-c-e-n-t-e-r/index.html","searchKeys":["RENDER_CENTER","RENDER_CENTER","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.RENDER_CENTER"]},{"name":"class ARCore(val onSessionCreated: (session: Session) -> Unit, val onSessionResumed: (session: Session) -> Unit, val onSessionPaused: (session: Session) -> Unit, val onArSessionFailed: (Exception) -> Unit, val onSessionConfigChanged: (session: Session, config: Config) -> Unit)","description":"io.github.sceneview.ar.ARCore","location":"arsceneview/io.github.sceneview.ar/-a-r-core/index.html","searchKeys":["ARCore","class ARCore(val onSessionCreated: (session: Session) -> Unit, val onSessionResumed: (session: Session) -> Unit, val onSessionPaused: (session: Session) -> Unit, val onArSessionFailed: (Exception) -> Unit, val onSessionConfigChanged: (session: Session, config: Config) -> Unit)","io.github.sceneview.ar.ARCore"]},{"name":"class ARSession(context: Context, features: Set<Session.Feature> = setOf(), val onResumed: (session: Session) -> Unit, val onPaused: (session: Session) -> Unit, val onConfigChanged: (session: Session, config: Config) -> Unit) : Session","description":"io.github.sceneview.ar.arcore.ARSession","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/index.html","searchKeys":["ARSession","class ARSession(context: Context, features: Set<Session.Feature> = setOf(), val onResumed: (session: Session) -> Unit, val onPaused: (session: Session) -> Unit, val onConfigChanged: (session: Session, config: Config) -> Unit) : Session","io.github.sceneview.ar.arcore.ARSession"]},{"name":"class ArFragment : BaseArFragment","description":"io.github.sceneview.ar.ArFragment","location":"arsceneview/io.github.sceneview.ar/-ar-fragment/index.html","searchKeys":["ArFragment","class ArFragment : BaseArFragment","io.github.sceneview.ar.ArFragment"]},{"name":"class DefaultARCameraNode(engine: Engine) : ARCameraNode","description":"io.github.sceneview.ar.ARSceneView.DefaultARCameraNode","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/-default-a-r-camera-node/index.html","searchKeys":["DefaultARCameraNode","class DefaultARCameraNode(engine: Engine) : ARCameraNode","io.github.sceneview.ar.ARSceneView.DefaultARCameraNode"]},{"name":"class Estimation(var mainLightColor: Color? = null, var mainLightIntensity: Float? = null, var mainLightDirection: Direction? = null, var reflections: Texture? = null, var irradiance: FloatArray? = null)","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/index.html","searchKeys":["Estimation","class Estimation(var mainLightColor: Color? = null, var mainLightIntensity: Float? = null, var mainLightDirection: Direction? = null, var reflections: Texture? = null, var irradiance: FloatArray? = null)","io.github.sceneview.ar.arcore.LightEstimator.Estimation"]},{"name":"class LightEstimator(val engine: Engine, val iblPrefilter: IBLPrefilter)","description":"io.github.sceneview.ar.arcore.LightEstimator","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/index.html","searchKeys":["LightEstimator","class LightEstimator(val engine: Engine, val iblPrefilter: IBLPrefilter)","io.github.sceneview.ar.arcore.LightEstimator"]},{"name":"class PlaneRenderer(val engine: Engine, modelLoader: ModelLoader, materialLoader: MaterialLoader, scene: Scene)","description":"io.github.sceneview.ar.scene.PlaneRenderer","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/index.html","searchKeys":["PlaneRenderer","class PlaneRenderer(val engine: Engine, modelLoader: ModelLoader, materialLoader: MaterialLoader, scene: Scene)","io.github.sceneview.ar.scene.PlaneRenderer"]},{"name":"class Scene","description":"io.github.sceneview.ar.Scene","location":"arsceneview/io.github.sceneview.ar/-scene/index.html","searchKeys":["Scene","class Scene","io.github.sceneview.ar.Scene"]},{"name":"const val MATERIAL_COLOR: String","description":"io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_COLOR","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-companion/-m-a-t-e-r-i-a-l_-c-o-l-o-r.html","searchKeys":["MATERIAL_COLOR","const val MATERIAL_COLOR: String","io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_COLOR"]},{"name":"const val MATERIAL_SPOTLIGHT_RADIUS: String","description":"io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_SPOTLIGHT_RADIUS","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-companion/-m-a-t-e-r-i-a-l_-s-p-o-t-l-i-g-h-t_-r-a-d-i-u-s.html","searchKeys":["MATERIAL_SPOTLIGHT_RADIUS","const val MATERIAL_SPOTLIGHT_RADIUS: String","io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_SPOTLIGHT_RADIUS"]},{"name":"const val MATERIAL_TEXTURE: String","description":"io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_TEXTURE","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-companion/-m-a-t-e-r-i-a-l_-t-e-x-t-u-r-e.html","searchKeys":["MATERIAL_TEXTURE","const val MATERIAL_TEXTURE: String","io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_TEXTURE"]},{"name":"const val MATERIAL_UV_SCALE: String","description":"io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_UV_SCALE","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-companion/-m-a-t-e-r-i-a-l_-u-v_-s-c-a-l-e.html","searchKeys":["MATERIAL_UV_SCALE","const val MATERIAL_UV_SCALE: String","io.github.sceneview.ar.scene.PlaneRenderer.Companion.MATERIAL_UV_SCALE"]},{"name":"const val kCameraTextureParameter: String","description":"io.github.sceneview.ar.camera.kCameraTextureParameter","location":"arsceneview/io.github.sceneview.ar.camera/k-camera-texture-parameter.html","searchKeys":["kCameraTextureParameter","const val kCameraTextureParameter: String","io.github.sceneview.ar.camera.kCameraTextureParameter"]},{"name":"const val kDefaultHitTestInstantDistance: Float = 2.0f","description":"io.github.sceneview.ar.kDefaultHitTestInstantDistance","location":"arsceneview/io.github.sceneview.ar/k-default-hit-test-instant-distance.html","searchKeys":["kDefaultHitTestInstantDistance","const val kDefaultHitTestInstantDistance: Float = 2.0f","io.github.sceneview.ar.kDefaultHitTestInstantDistance"]},{"name":"const val kDepthTextureParameter: String","description":"io.github.sceneview.ar.camera.kDepthTextureParameter","location":"arsceneview/io.github.sceneview.ar.camera/k-depth-texture-parameter.html","searchKeys":["kDepthTextureParameter","const val kDepthTextureParameter: String","io.github.sceneview.ar.camera.kDepthTextureParameter"]},{"name":"const val kUVTransformParameter: String","description":"io.github.sceneview.ar.camera.kUVTransformParameter","location":"arsceneview/io.github.sceneview.ar.camera/k-u-v-transform-parameter.html","searchKeys":["kUVTransformParameter","const val kUVTransformParameter: String","io.github.sceneview.ar.camera.kUVTransformParameter"]},{"name":"constructor()","description":"io.github.sceneview.ar.ArFragment.ArFragment","location":"arsceneview/io.github.sceneview.ar/-ar-fragment/-ar-fragment.html","searchKeys":["ArFragment","constructor()","io.github.sceneview.ar.ArFragment.ArFragment"]},{"name":"constructor()","description":"io.github.sceneview.ar.BaseArFragment.BaseArFragment","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/-base-ar-fragment.html","searchKeys":["BaseArFragment","constructor()","io.github.sceneview.ar.BaseArFragment.BaseArFragment"]},{"name":"constructor()","description":"io.github.sceneview.ar.Scene.Scene","location":"arsceneview/io.github.sceneview.ar/-scene/-scene.html","searchKeys":["Scene","constructor()","io.github.sceneview.ar.Scene.Scene"]},{"name":"constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: ARCameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null, sharedCameraStream: ARCameraStream? = null, sessionFeatures: Set<Session.Feature> = setOf(), sessionCameraConfig: (Session) -> CameraConfig? = null, sessionConfiguration: (session: Session, Config) -> Unit? = null, onSessionCreated: (session: Session) -> Unit? = null, onSessionResumed: (session: Session) -> Unit? = null, onSessionPaused: (session: Session) -> Unit? = null, onSessionFailed: (Exception) -> Unit? = null, onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit? = null, onSessionUpdated: (session: Session, frame: Frame) -> Unit? = null)","description":"io.github.sceneview.ar.ARSceneView.ARSceneView","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/-a-r-scene-view.html","searchKeys":["ARSceneView","constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: ARCameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null, sharedCameraStream: ARCameraStream? = null, sessionFeatures: Set<Session.Feature> = setOf(), sessionCameraConfig: (Session) -> CameraConfig? = null, sessionConfiguration: (session: Session, Config) -> Unit? = null, onSessionCreated: (session: Session) -> Unit? = null, onSessionResumed: (session: Session) -> Unit? = null, onSessionPaused: (session: Session) -> Unit? = null, onSessionFailed: (Exception) -> Unit? = null, onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit? = null, onSessionUpdated: (session: Session, frame: Frame) -> Unit? = null)","io.github.sceneview.ar.ARSceneView.ARSceneView"]},{"name":"constructor(context: Context, features: Set<Session.Feature> = setOf(), onResumed: (session: Session) -> Unit, onPaused: (session: Session) -> Unit, onConfigChanged: (session: Session, config: Config) -> Unit)","description":"io.github.sceneview.ar.arcore.ARSession.ARSession","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/-a-r-session.html","searchKeys":["ARSession","constructor(context: Context, features: Set<Session.Feature> = setOf(), onResumed: (session: Session) -> Unit, onPaused: (session: Session) -> Unit, onConfigChanged: (session: Session, config: Config) -> Unit)","io.github.sceneview.ar.arcore.ARSession.ARSession"]},{"name":"constructor(engine: Engine)","description":"io.github.sceneview.ar.ARSceneView.DefaultARCameraNode.DefaultARCameraNode","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/-default-a-r-camera-node/-default-a-r-camera-node.html","searchKeys":["DefaultARCameraNode","constructor(engine: Engine)","io.github.sceneview.ar.ARSceneView.DefaultARCameraNode.DefaultARCameraNode"]},{"name":"constructor(engine: Engine)","description":"io.github.sceneview.ar.node.ARCameraNode.ARCameraNode","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/-a-r-camera-node.html","searchKeys":["ARCameraNode","constructor(engine: Engine)","io.github.sceneview.ar.node.ARCameraNode.ARCameraNode"]},{"name":"constructor(engine: Engine, anchor: Anchor, cloudAnchorId: String? = null, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (Anchor?) -> Unit? = null, onHosted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit? = null)","description":"io.github.sceneview.ar.node.CloudAnchorNode.CloudAnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/-cloud-anchor-node.html","searchKeys":["CloudAnchorNode","constructor(engine: Engine, anchor: Anchor, cloudAnchorId: String? = null, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (Anchor?) -> Unit? = null, onHosted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit? = null)","io.github.sceneview.ar.node.CloudAnchorNode.CloudAnchorNode"]},{"name":"constructor(engine: Engine, anchor: Anchor, onTrackingStateChanged: (TrackingState) -> Unit? = null, onPoseChanged: (Pose) -> Unit? = null, onAnchorChanged: (Anchor) -> Unit? = null, onUpdated: (Anchor) -> Unit? = null)","description":"io.github.sceneview.ar.node.AnchorNode.AnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/-anchor-node.html","searchKeys":["AnchorNode","constructor(engine: Engine, anchor: Anchor, onTrackingStateChanged: (TrackingState) -> Unit? = null, onPoseChanged: (Pose) -> Unit? = null, onAnchorChanged: (Anchor) -> Unit? = null, onUpdated: (Anchor) -> Unit? = null)","io.github.sceneview.ar.node.AnchorNode.AnchorNode"]},{"name":"constructor(engine: Engine, augmentedFace: AugmentedFace, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (AugmentedFace) -> Unit? = null)","description":"io.github.sceneview.ar.node.AugmentedFaceNode.AugmentedFaceNode","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/-augmented-face-node.html","searchKeys":["AugmentedFaceNode","constructor(engine: Engine, augmentedFace: AugmentedFace, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (AugmentedFace) -> Unit? = null)","io.github.sceneview.ar.node.AugmentedFaceNode.AugmentedFaceNode"]},{"name":"constructor(engine: Engine, augmentedImage: AugmentedImage, applyImageScale: Boolean = false, visibleTrackingMethods: Set<AugmentedImage.TrackingMethod> = setOf(\n        TrackingMethod.FULL_TRACKING, TrackingMethod.LAST_KNOWN_POSE\n    ), onTrackingStateChanged: (TrackingState) -> Unit? = null, onTrackingMethodChanged: (AugmentedImage.TrackingMethod) -> Unit? = null, onUpdated: (AugmentedImage) -> Unit? = null)","description":"io.github.sceneview.ar.node.AugmentedImageNode.AugmentedImageNode","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/-augmented-image-node.html","searchKeys":["AugmentedImageNode","constructor(engine: Engine, augmentedImage: AugmentedImage, applyImageScale: Boolean = false, visibleTrackingMethods: Set<AugmentedImage.TrackingMethod> = setOf(\n        TrackingMethod.FULL_TRACKING, TrackingMethod.LAST_KNOWN_POSE\n    ), onTrackingStateChanged: (TrackingState) -> Unit? = null, onTrackingMethodChanged: (AugmentedImage.TrackingMethod) -> Unit? = null, onUpdated: (AugmentedImage) -> Unit? = null)","io.github.sceneview.ar.node.AugmentedImageNode.AugmentedImageNode"]},{"name":"constructor(engine: Engine, hitTest: HitResultNode.(Frame) -> HitResult?)","description":"io.github.sceneview.ar.node.HitResultNode.HitResultNode","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/-hit-result-node.html","searchKeys":["HitResultNode","constructor(engine: Engine, hitTest: HitResultNode.(Frame) -> HitResult?)","io.github.sceneview.ar.node.HitResultNode.HitResultNode"]},{"name":"constructor(engine: Engine, iblPrefilter: IBLPrefilter)","description":"io.github.sceneview.ar.arcore.LightEstimator.LightEstimator","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-light-estimator.html","searchKeys":["LightEstimator","constructor(engine: Engine, iblPrefilter: IBLPrefilter)","io.github.sceneview.ar.arcore.LightEstimator.LightEstimator"]},{"name":"constructor(engine: Engine, materialLoader: MaterialLoader, standardMaterialFile: String = \"sceneview/materials/camera_stream_flat.filamat\", depthOcclusionMaterialFile: String = \"sceneview/materials/camera_stream_depth.filamat\")","description":"io.github.sceneview.ar.camera.ARCameraStream.ARCameraStream","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/-a-r-camera-stream.html","searchKeys":["ARCameraStream","constructor(engine: Engine, materialLoader: MaterialLoader, standardMaterialFile: String = \"sceneview/materials/camera_stream_flat.filamat\", depthOcclusionMaterialFile: String = \"sceneview/materials/camera_stream_depth.filamat\")","io.github.sceneview.ar.camera.ARCameraStream.ARCameraStream"]},{"name":"constructor(engine: Engine, modelLoader: ModelLoader, materialLoader: MaterialLoader, scene: Scene)","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRenderer","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer.html","searchKeys":["PlaneRenderer","constructor(engine: Engine, modelLoader: ModelLoader, materialLoader: MaterialLoader, scene: Scene)","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRenderer"]},{"name":"constructor(engine: Engine, modelLoader: ModelLoader, scene: Scene, plane: Plane)","description":"io.github.sceneview.ar.PlaneVisualizer.PlaneVisualizer","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/-plane-visualizer.html","searchKeys":["PlaneVisualizer","constructor(engine: Engine, modelLoader: ModelLoader, scene: Scene, plane: Plane)","io.github.sceneview.ar.PlaneVisualizer.PlaneVisualizer"]},{"name":"constructor(engine: Engine, pose: Pose = Pose.IDENTITY, moveHitTest: PoseNode.(Frame, MotionEvent) -> HitResult? = { frame, motionEvent ->\n        frame.hitTest(motionEvent).firstOrNull()?.takeIf { it.trackable.isTracking }\n    }, onPoseChanged: (Pose) -> Unit? = null)","description":"io.github.sceneview.ar.node.PoseNode.PoseNode","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/-pose-node.html","searchKeys":["PoseNode","constructor(engine: Engine, pose: Pose = Pose.IDENTITY, moveHitTest: PoseNode.(Frame, MotionEvent) -> HitResult? = { frame, motionEvent ->\n        frame.hitTest(motionEvent).firstOrNull()?.takeIf { it.trackable.isTracking }\n    }, onPoseChanged: (Pose) -> Unit? = null)","io.github.sceneview.ar.node.PoseNode.PoseNode"]},{"name":"constructor(engine: Engine, streetscapeGeometry: StreetscapeGeometry, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (StreetscapeGeometry) -> Unit? = null)","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode.StreetscapeGeometryNode","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/-streetscape-geometry-node.html","searchKeys":["StreetscapeGeometryNode","constructor(engine: Engine, streetscapeGeometry: StreetscapeGeometry, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (StreetscapeGeometry) -> Unit? = null)","io.github.sceneview.ar.node.StreetscapeGeometryNode.StreetscapeGeometryNode"]},{"name":"constructor(engine: Engine, visibleTrackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (T) -> Unit? = null)","description":"io.github.sceneview.ar.node.TrackableNode.TrackableNode","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/-trackable-node.html","searchKeys":["TrackableNode","constructor(engine: Engine, visibleTrackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (T) -> Unit? = null)","io.github.sceneview.ar.node.TrackableNode.TrackableNode"]},{"name":"constructor(engine: Engine, xPx: Float, yPx: Float, planeTypes: Set<Plane.Type> = Plane.Type.values().toSet(), point: Boolean = true, depthPoint: Boolean = true, instantPlacementPoint: Boolean = true, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(Point.OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null)","description":"io.github.sceneview.ar.node.HitResultNode.HitResultNode","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/-hit-result-node.html","searchKeys":["HitResultNode","constructor(engine: Engine, xPx: Float, yPx: Float, planeTypes: Set<Plane.Type> = Plane.Type.values().toSet(), point: Boolean = true, depthPoint: Boolean = true, instantPlacementPoint: Boolean = true, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(Point.OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null)","io.github.sceneview.ar.node.HitResultNode.HitResultNode"]},{"name":"constructor(mainLightColor: Color? = null, mainLightIntensity: Float? = null, mainLightDirection: Direction? = null, reflections: Texture? = null, irradiance: FloatArray? = null)","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation.Estimation","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/-estimation.html","searchKeys":["Estimation","constructor(mainLightColor: Color? = null, mainLightIntensity: Float? = null, mainLightDirection: Direction? = null, reflections: Texture? = null, irradiance: FloatArray? = null)","io.github.sceneview.ar.arcore.LightEstimator.Estimation.Estimation"]},{"name":"constructor(onSessionCreated: (session: Session) -> Unit, onSessionResumed: (session: Session) -> Unit, onSessionPaused: (session: Session) -> Unit, onArSessionFailed: (Exception) -> Unit, onSessionConfigChanged: (session: Session, config: Config) -> Unit)","description":"io.github.sceneview.ar.ARCore.ARCore","location":"arsceneview/io.github.sceneview.ar/-a-r-core/-a-r-core.html","searchKeys":["ARCore","constructor(onSessionCreated: (session: Session) -> Unit, onSessionResumed: (session: Session) -> Unit, onSessionPaused: (session: Session) -> Unit, onArSessionFailed: (Exception) -> Unit, onSessionConfigChanged: (session: Session, config: Config) -> Unit)","io.github.sceneview.ar.ARCore.ARCore"]},{"name":"enum PlaneRendererMode : Enum<PlaneRenderer.PlaneRendererMode> ","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer-mode/index.html","searchKeys":["PlaneRendererMode","enum PlaneRendererMode : Enum<PlaneRenderer.PlaneRendererMode> ","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode"]},{"name":"fun ARScene(modifier: Modifier = Modifier, childNodes: List<Node> = rememberNodes(), engine: Engine = rememberEngine(), modelLoader: ModelLoader = rememberModelLoader(engine), materialLoader: MaterialLoader = rememberMaterialLoader(engine), scene: Scene = rememberScene(engine), view: View = rememberView(engine), renderer: Renderer = rememberRenderer(engine), cameraNode: ARCameraNode = rememberARCameraNode(engine), mainLightNode: LightNode? = rememberMainLightNode(engine), indirectLight: IndirectLight? = rememberIndirectLight(engine), skybox: Skybox? = rememberSkybox(engine), collisionSystem: CollisionSystem = rememberCollisionSystem(view), gestureDetector: GestureDetector = rememberHitTestGestureDetector(\n        LocalContext.current,\n        collisionSystem\n    ), onGestureListener: GestureDetector.OnGestureListener? = rememberOnGestureListener(), activity: ComponentActivity? = LocalContext.current as? ComponentActivity, lifecycle: Lifecycle = LocalLifecycleOwner.current.lifecycle, cameraStream: ARCameraStream? = rememberCameraStream(engine, materialLoader), sessionFeatures: Set<Session.Feature> = setOf(), sessionCameraConfig: (Session) -> CameraConfig? = null, sessionConfiguration: (session: Session, Config) -> Unit? = null, planeRenderer: Boolean = true, onSessionCreated: (session: Session) -> Unit? = null, onSessionResumed: (session: Session) -> Unit? = null, onSessionPaused: (session: Session) -> Unit? = null, onSessionFailed: (Exception) -> Unit? = null, onSessionUpdated: (session: Session, frame: Frame) -> Unit? = null, onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit? = null, onViewUpdated: ARSceneView.() -> Unit? = null, onViewCreated: ARSceneView.() -> Unit? = null)","description":"io.github.sceneview.ar.ARScene","location":"arsceneview/io.github.sceneview.ar/-a-r-scene.html","searchKeys":["ARScene","fun ARScene(modifier: Modifier = Modifier, childNodes: List<Node> = rememberNodes(), engine: Engine = rememberEngine(), modelLoader: ModelLoader = rememberModelLoader(engine), materialLoader: MaterialLoader = rememberMaterialLoader(engine), scene: Scene = rememberScene(engine), view: View = rememberView(engine), renderer: Renderer = rememberRenderer(engine), cameraNode: ARCameraNode = rememberARCameraNode(engine), mainLightNode: LightNode? = rememberMainLightNode(engine), indirectLight: IndirectLight? = rememberIndirectLight(engine), skybox: Skybox? = rememberSkybox(engine), collisionSystem: CollisionSystem = rememberCollisionSystem(view), gestureDetector: GestureDetector = rememberHitTestGestureDetector(\n        LocalContext.current,\n        collisionSystem\n    ), onGestureListener: GestureDetector.OnGestureListener? = rememberOnGestureListener(), activity: ComponentActivity? = LocalContext.current as? ComponentActivity, lifecycle: Lifecycle = LocalLifecycleOwner.current.lifecycle, cameraStream: ARCameraStream? = rememberCameraStream(engine, materialLoader), sessionFeatures: Set<Session.Feature> = setOf(), sessionCameraConfig: (Session) -> CameraConfig? = null, sessionConfiguration: (session: Session, Config) -> Unit? = null, planeRenderer: Boolean = true, onSessionCreated: (session: Session) -> Unit? = null, onSessionResumed: (session: Session) -> Unit? = null, onSessionPaused: (session: Session) -> Unit? = null, onSessionFailed: (Exception) -> Unit? = null, onSessionUpdated: (session: Session, frame: Frame) -> Unit? = null, onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit? = null, onViewUpdated: ARSceneView.() -> Unit? = null, onViewCreated: ARSceneView.() -> Unit? = null)","io.github.sceneview.ar.ARScene"]},{"name":"fun Anchor.destroy()","description":"io.github.sceneview.ar.scene.destroy","location":"arsceneview/io.github.sceneview.ar.scene/destroy.html","searchKeys":["destroy","fun Anchor.destroy()","io.github.sceneview.ar.scene.destroy"]},{"name":"fun ArFragment.setOnTapPlaneGlbModel(glbSource: String, listener: ArFragment.OnTapModelListener)","description":"io.github.sceneview.ar.ArFragment.setOnTapPlaneGlbModel","location":"arsceneview/io.github.sceneview.ar/-ar-fragment/set-on-tap-plane-glb-model.html","searchKeys":["setOnTapPlaneGlbModel","fun ArFragment.setOnTapPlaneGlbModel(glbSource: String, listener: ArFragment.OnTapModelListener)","io.github.sceneview.ar.ArFragment.setOnTapPlaneGlbModel"]},{"name":"fun Camera.getProjectionTransform(near: Float, far: Float): Mat4","description":"io.github.sceneview.ar.arcore.getProjectionTransform","location":"arsceneview/io.github.sceneview.ar.arcore/get-projection-transform.html","searchKeys":["getProjectionTransform","fun Camera.getProjectionTransform(near: Float, far: Float): Mat4","io.github.sceneview.ar.arcore.getProjectionTransform"]},{"name":"fun Config.addAugmentedImage(session: Session, name: String, bitmap: Bitmap, widthInMeters: Float? = null)","description":"io.github.sceneview.ar.arcore.addAugmentedImage","location":"arsceneview/io.github.sceneview.ar.arcore/add-augmented-image.html","searchKeys":["addAugmentedImage","fun Config.addAugmentedImage(session: Session, name: String, bitmap: Bitmap, widthInMeters: Float? = null)","io.github.sceneview.ar.arcore.addAugmentedImage"]},{"name":"fun Earth.createAnchor(latitude: Double, longitude: Double, altitude: Double, quaternion: Quaternion): Anchor","description":"io.github.sceneview.ar.arcore.createAnchor","location":"arsceneview/io.github.sceneview.ar.arcore/create-anchor.html","searchKeys":["createAnchor","fun Earth.createAnchor(latitude: Double, longitude: Double, altitude: Double, quaternion: Quaternion): Anchor","io.github.sceneview.ar.arcore.createAnchor"]},{"name":"fun Earth.createAnchor(latitude: Double, longitude: Double, altitude: Double, rotation: Rotation): Anchor","description":"io.github.sceneview.ar.arcore.createAnchor","location":"arsceneview/io.github.sceneview.ar.arcore/create-anchor.html","searchKeys":["createAnchor","fun Earth.createAnchor(latitude: Double, longitude: Double, altitude: Double, rotation: Rotation): Anchor","io.github.sceneview.ar.arcore.createAnchor"]},{"name":"fun Frame.fps(other: Frame?): Double","description":"io.github.sceneview.ar.arcore.fps","location":"arsceneview/io.github.sceneview.ar.arcore/fps.html","searchKeys":["fps","fun Frame.fps(other: Frame?): Double","io.github.sceneview.ar.arcore.fps"]},{"name":"fun Frame.getUpdatedAugmentedFaces(): MutableCollection<AugmentedFace>","description":"io.github.sceneview.ar.arcore.getUpdatedAugmentedFaces","location":"arsceneview/io.github.sceneview.ar.arcore/get-updated-augmented-faces.html","searchKeys":["getUpdatedAugmentedFaces","fun Frame.getUpdatedAugmentedFaces(): MutableCollection<AugmentedFace>","io.github.sceneview.ar.arcore.getUpdatedAugmentedFaces"]},{"name":"fun Frame.getUpdatedAugmentedImages(): MutableCollection<AugmentedImage>","description":"io.github.sceneview.ar.arcore.getUpdatedAugmentedImages","location":"arsceneview/io.github.sceneview.ar.arcore/get-updated-augmented-images.html","searchKeys":["getUpdatedAugmentedImages","fun Frame.getUpdatedAugmentedImages(): MutableCollection<AugmentedImage>","io.github.sceneview.ar.arcore.getUpdatedAugmentedImages"]},{"name":"fun Frame.getUpdatedPlanes(): MutableCollection<Plane>","description":"io.github.sceneview.ar.arcore.getUpdatedPlanes","location":"arsceneview/io.github.sceneview.ar.arcore/get-updated-planes.html","searchKeys":["getUpdatedPlanes","fun Frame.getUpdatedPlanes(): MutableCollection<Plane>","io.github.sceneview.ar.arcore.getUpdatedPlanes"]},{"name":"fun Frame.getUpdatedStreetscapeGeometries(): MutableCollection<StreetscapeGeometry>","description":"io.github.sceneview.ar.arcore.getUpdatedStreetscapeGeometries","location":"arsceneview/io.github.sceneview.ar.arcore/get-updated-streetscape-geometries.html","searchKeys":["getUpdatedStreetscapeGeometries","fun Frame.getUpdatedStreetscapeGeometries(): MutableCollection<StreetscapeGeometry>","io.github.sceneview.ar.arcore.getUpdatedStreetscapeGeometries"]},{"name":"fun Frame.getUpdatedTrackables(): MutableCollection<Trackable>","description":"io.github.sceneview.ar.arcore.getUpdatedTrackables","location":"arsceneview/io.github.sceneview.ar.arcore/get-updated-trackables.html","searchKeys":["getUpdatedTrackables","fun Frame.getUpdatedTrackables(): MutableCollection<Trackable>","io.github.sceneview.ar.arcore.getUpdatedTrackables"]},{"name":"fun Frame.hitTest(ray: Ray): List<HitResult>","description":"io.github.sceneview.ar.arcore.hitTest","location":"arsceneview/io.github.sceneview.ar.arcore/hit-test.html","searchKeys":["hitTest","fun Frame.hitTest(ray: Ray): List<HitResult>","io.github.sceneview.ar.arcore.hitTest"]},{"name":"fun Frame.intervalSeconds(other: Frame?): Double","description":"io.github.sceneview.ar.arcore.intervalSeconds","location":"arsceneview/io.github.sceneview.ar.arcore/interval-seconds.html","searchKeys":["intervalSeconds","fun Frame.intervalSeconds(other: Frame?): Double","io.github.sceneview.ar.arcore.intervalSeconds"]},{"name":"fun Frame.isTrackingPlane(): Boolean","description":"io.github.sceneview.ar.arcore.isTrackingPlane","location":"arsceneview/io.github.sceneview.ar.arcore/is-tracking-plane.html","searchKeys":["isTrackingPlane","fun Frame.isTrackingPlane(): Boolean","io.github.sceneview.ar.arcore.isTrackingPlane"]},{"name":"fun HitResult.createAnchorOrNull(): Anchor?","description":"io.github.sceneview.ar.arcore.createAnchorOrNull","location":"arsceneview/io.github.sceneview.ar.arcore/create-anchor-or-null.html","searchKeys":["createAnchorOrNull","fun HitResult.createAnchorOrNull(): Anchor?","io.github.sceneview.ar.arcore.createAnchorOrNull"]},{"name":"fun HitResult.isValid(planeTypes: Set<Plane.Type> = Plane.Type.values().toSet(), point: Boolean = true, depthPoint: Boolean = true, instantPlacementPoint: Boolean = true, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): Boolean","description":"io.github.sceneview.ar.arcore.isValid","location":"arsceneview/io.github.sceneview.ar.arcore/is-valid.html","searchKeys":["isValid","fun HitResult.isValid(planeTypes: Set<Plane.Type> = Plane.Type.values().toSet(), point: Boolean = true, depthPoint: Boolean = true, instantPlacementPoint: Boolean = true, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): Boolean","io.github.sceneview.ar.arcore.isValid"]},{"name":"fun List<HitResult>.filterTypes(planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): List<HitResult>","description":"io.github.sceneview.ar.arcore.filterTypes","location":"arsceneview/io.github.sceneview.ar.arcore/filter-types.html","searchKeys":["filterTypes","fun List<HitResult>.filterTypes(planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): List<HitResult>","io.github.sceneview.ar.arcore.filterTypes"]},{"name":"fun List<HitResult>.findByType(planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): HitResult?","description":"io.github.sceneview.ar.arcore.findByType","location":"arsceneview/io.github.sceneview.ar.arcore/find-by-type.html","searchKeys":["findByType","fun List<HitResult>.findByType(planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): HitResult?","io.github.sceneview.ar.arcore.findByType"]},{"name":"fun List<HitResult>.firstByTypeOrNull(planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): HitResult?","description":"io.github.sceneview.ar.arcore.firstByTypeOrNull","location":"arsceneview/io.github.sceneview.ar.arcore/first-by-type-or-null.html","searchKeys":["firstByTypeOrNull","fun List<HitResult>.firstByTypeOrNull(planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): HitResult?","io.github.sceneview.ar.arcore.firstByTypeOrNull"]},{"name":"fun Node.addLifecycleListener(listener: Any?): Nothing?","description":"io.github.sceneview.ar.addLifecycleListener","location":"arsceneview/io.github.sceneview.ar/add-lifecycle-listener.html","searchKeys":["addLifecycleListener","fun Node.addLifecycleListener(listener: Any?): Nothing?","io.github.sceneview.ar.addLifecycleListener"]},{"name":"fun Node.addTransformChangedListener(listener: Any?): Nothing?","description":"io.github.sceneview.ar.addTransformChangedListener","location":"arsceneview/io.github.sceneview.ar/add-transform-changed-listener.html","searchKeys":["addTransformChangedListener","fun Node.addTransformChangedListener(listener: Any?): Nothing?","io.github.sceneview.ar.addTransformChangedListener"]},{"name":"fun Node.onUpdated(node: Node, frameTime: Long): Nothing?","description":"io.github.sceneview.ar.onUpdated","location":"arsceneview/io.github.sceneview.ar/on-updated.html","searchKeys":["onUpdated","fun Node.onUpdated(node: Node, frameTime: Long): Nothing?","io.github.sceneview.ar.onUpdated"]},{"name":"fun Pose.distanceTo(other: Pose): Float","description":"io.github.sceneview.ar.arcore.distanceTo","location":"arsceneview/io.github.sceneview.ar.arcore/distance-to.html","searchKeys":["distanceTo","fun Pose.distanceTo(other: Pose): Float","io.github.sceneview.ar.arcore.distanceTo"]},{"name":"fun Pose.distanceToPlane(cameraPose: Pose): Float","description":"io.github.sceneview.ar.arcore.distanceToPlane","location":"arsceneview/io.github.sceneview.ar.arcore/distance-to-plane.html","searchKeys":["distanceToPlane","fun Pose.distanceToPlane(cameraPose: Pose): Float","io.github.sceneview.ar.arcore.distanceToPlane"]},{"name":"fun SceneView.getScene(): Nothing?","description":"io.github.sceneview.ar.getScene","location":"arsceneview/io.github.sceneview.ar/get-scene.html","searchKeys":["getScene","fun SceneView.getScene(): Nothing?","io.github.sceneview.ar.getScene"]},{"name":"fun Session.canHostCloudAnchor(cameraNode: ARCameraNode): Boolean","description":"io.github.sceneview.ar.arcore.canHostCloudAnchor","location":"arsceneview/io.github.sceneview.ar.arcore/can-host-cloud-anchor.html","searchKeys":["canHostCloudAnchor","fun Session.canHostCloudAnchor(cameraNode: ARCameraNode): Boolean","io.github.sceneview.ar.arcore.canHostCloudAnchor"]},{"name":"fun Session.configure(config: (Config) -> Unit)","description":"io.github.sceneview.ar.arcore.configure","location":"arsceneview/io.github.sceneview.ar.arcore/configure.html","searchKeys":["configure","fun Session.configure(config: (Config) -> Unit)","io.github.sceneview.ar.arcore.configure"]},{"name":"fun Session.configure(config: Config): Nothing?","description":"io.github.sceneview.ar.configure","location":"arsceneview/io.github.sceneview.ar/configure.html","searchKeys":["configure","fun Session.configure(config: Config): Nothing?","io.github.sceneview.ar.configure"]},{"name":"fun Session.getConfig(): Config","description":"io.github.sceneview.ar.getConfig","location":"arsceneview/io.github.sceneview.ar/get-config.html","searchKeys":["getConfig","fun Session.getConfig(): Config","io.github.sceneview.ar.getConfig"]},{"name":"fun Trackable.createAnchorOrNull(pose: Pose): Anchor?","description":"io.github.sceneview.ar.arcore.createAnchorOrNull","location":"arsceneview/io.github.sceneview.ar.arcore/create-anchor-or-null.html","searchKeys":["createAnchorOrNull","fun Trackable.createAnchorOrNull(pose: Pose): Anchor?","io.github.sceneview.ar.arcore.createAnchorOrNull"]},{"name":"fun TrackingFailureReason.getDescription(context: Context): String","description":"io.github.sceneview.ar.getDescription","location":"arsceneview/io.github.sceneview.ar/get-description.html","searchKeys":["getDescription","fun TrackingFailureReason.getDescription(context: Context): String","io.github.sceneview.ar.getDescription"]},{"name":"fun addOnUpdateListener(listener: Any?): Nothing?","description":"io.github.sceneview.ar.Scene.addOnUpdateListener","location":"arsceneview/io.github.sceneview.ar/-scene/add-on-update-listener.html","searchKeys":["addOnUpdateListener","fun addOnUpdateListener(listener: Any?): Nothing?","io.github.sceneview.ar.Scene.addOnUpdateListener"]},{"name":"fun cancelHost()","description":"io.github.sceneview.ar.node.CloudAnchorNode.cancelHost","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/cancel-host.html","searchKeys":["cancelHost","fun cancelHost()","io.github.sceneview.ar.node.CloudAnchorNode.cancelHost"]},{"name":"fun checkCameraPermission(context: Context, permissionLauncher: ActivityResultLauncher<String>): Boolean","description":"io.github.sceneview.ar.ARCore.checkCameraPermission","location":"arsceneview/io.github.sceneview.ar/-a-r-core/check-camera-permission.html","searchKeys":["checkCameraPermission","fun checkCameraPermission(context: Context, permissionLauncher: ActivityResultLauncher<String>): Boolean","io.github.sceneview.ar.ARCore.checkCameraPermission"]},{"name":"fun checkInstall(activity: ComponentActivity, installRequested: Boolean): Boolean","description":"io.github.sceneview.ar.ARCore.checkInstall","location":"arsceneview/io.github.sceneview.ar/-a-r-core/check-install.html","searchKeys":["checkInstall","fun checkInstall(activity: ComponentActivity, installRequested: Boolean): Boolean","io.github.sceneview.ar.ARCore.checkInstall"]},{"name":"fun checkPermissionAndInstall(activity: ComponentActivity): Boolean","description":"io.github.sceneview.ar.ARCore.checkPermissionAndInstall","location":"arsceneview/io.github.sceneview.ar/-a-r-core/check-permission-and-install.html","searchKeys":["checkPermissionAndInstall","fun checkPermissionAndInstall(activity: ComponentActivity): Boolean","io.github.sceneview.ar.ARCore.checkPermissionAndInstall"]},{"name":"fun configureSession(applyConfig: (Session, Config) -> Unit)","description":"io.github.sceneview.ar.ARSceneView.configureSession","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/configure-session.html","searchKeys":["configureSession","fun configureSession(applyConfig: (Session, Config) -> Unit)","io.github.sceneview.ar.ARSceneView.configureSession"]},{"name":"fun create(context: Context, activity: ComponentActivity?, features: Set<Session.Feature>)","description":"io.github.sceneview.ar.ARCore.create","location":"arsceneview/io.github.sceneview.ar/-a-r-core/create.html","searchKeys":["create","fun create(context: Context, activity: ComponentActivity?, features: Set<Session.Feature>)","io.github.sceneview.ar.ARCore.create"]},{"name":"fun createCameraNode(engine: Engine): ARCameraNode","description":"io.github.sceneview.ar.ARSceneView.Companion.createCameraNode","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/-companion/create-camera-node.html","searchKeys":["createCameraNode","fun createCameraNode(engine: Engine): ARCameraNode","io.github.sceneview.ar.ARSceneView.Companion.createCameraNode"]},{"name":"fun createCameraStream(engine: Engine, materialLoader: MaterialLoader): ARCameraStream","description":"io.github.sceneview.ar.ARSceneView.Companion.createCameraStream","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/-companion/create-camera-stream.html","searchKeys":["createCameraStream","fun createCameraStream(engine: Engine, materialLoader: MaterialLoader): ARCameraStream","io.github.sceneview.ar.ARSceneView.Companion.createCameraStream"]},{"name":"fun createSession(context: Context)","description":"io.github.sceneview.ar.ARCore.createSession","location":"arsceneview/io.github.sceneview.ar/-a-r-core/create-session.html","searchKeys":["createSession","fun createSession(context: Context)","io.github.sceneview.ar.ARCore.createSession"]},{"name":"fun destroy()","description":"io.github.sceneview.ar.ARCore.destroy","location":"arsceneview/io.github.sceneview.ar/-a-r-core/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.ar.ARCore.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.ar.arcore.LightEstimator.destroy","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.ar.arcore.LightEstimator.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.ar.camera.ARCameraStream.destroy","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.ar.camera.ARCameraStream.destroy"]},{"name":"fun destroy()","description":"io.github.sceneview.ar.scene.PlaneRenderer.destroy","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/destroy.html","searchKeys":["destroy","fun destroy()","io.github.sceneview.ar.scene.PlaneRenderer.destroy"]},{"name":"fun getArSceneView(): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.getArSceneView","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/get-ar-scene-view.html","searchKeys":["getArSceneView","fun getArSceneView(): Nothing?","io.github.sceneview.ar.BaseArFragment.getArSceneView"]},{"name":"fun getInstructionsController(): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.getInstructionsController","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/get-instructions-controller.html","searchKeys":["getInstructionsController","fun getInstructionsController(): Nothing?","io.github.sceneview.ar.BaseArFragment.getInstructionsController"]},{"name":"fun getTransformationSystem(): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.getTransformationSystem","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/get-transformation-system.html","searchKeys":["getTransformationSystem","fun getTransformationSystem(): Nothing?","io.github.sceneview.ar.BaseArFragment.getTransformationSystem"]},{"name":"fun hasCameraPermission(context: Context): Boolean","description":"io.github.sceneview.ar.ARCore.hasCameraPermission","location":"arsceneview/io.github.sceneview.ar/-a-r-core/has-camera-permission.html","searchKeys":["hasCameraPermission","fun hasCameraPermission(context: Context): Boolean","io.github.sceneview.ar.ARCore.hasCameraPermission"]},{"name":"fun hitTestAR(xPx: Float = width / 2.0f, yPx: Float = height / 2.0f, planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(Point.OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): HitResult?","description":"io.github.sceneview.ar.ARSceneView.hitTestAR","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/hit-test-a-r.html","searchKeys":["hitTestAR","fun hitTestAR(xPx: Float = width / 2.0f, yPx: Float = height / 2.0f, planeTypes: Set<Plane.Type> = setOf(), point: Boolean = false, depthPoint: Boolean = false, instantPlacementPoint: Boolean = false, trackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), pointOrientationModes: Set<Point.OrientationMode> = setOf(Point.OrientationMode.ESTIMATED_SURFACE_NORMAL), planePoseInPolygon: Boolean = true, minCameraDistance: Pair<Camera, Float>? = null, predicate: (HitResult) -> Boolean? = null): HitResult?","io.github.sceneview.ar.ARSceneView.hitTestAR"]},{"name":"fun host(session: Session, ttlDays: Int = 1, onCompleted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit? = null)","description":"io.github.sceneview.ar.node.CloudAnchorNode.host","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/host.html","searchKeys":["host","fun host(session: Session, ttlDays: Int = 1, onCompleted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit? = null)","io.github.sceneview.ar.node.CloudAnchorNode.host"]},{"name":"fun install(activity: ComponentActivity, installRequested: Boolean): Boolean","description":"io.github.sceneview.ar.ARCore.install","location":"arsceneview/io.github.sceneview.ar/-a-r-core/install.html","searchKeys":["install","fun install(activity: ComponentActivity, installRequested: Boolean): Boolean","io.github.sceneview.ar.ARCore.install"]},{"name":"fun isInstalled(context: Context): Boolean","description":"io.github.sceneview.ar.ARCore.isInstalled","location":"arsceneview/io.github.sceneview.ar/-a-r-core/is-installed.html","searchKeys":["isInstalled","fun isInstalled(context: Context): Boolean","io.github.sceneview.ar.ARCore.isInstalled"]},{"name":"fun onAddChild(child: Any?): Nothing?","description":"io.github.sceneview.ar.Scene.onAddChild","location":"arsceneview/io.github.sceneview.ar/-scene/on-add-child.html","searchKeys":["onAddChild","fun onAddChild(child: Any?): Nothing?","io.github.sceneview.ar.Scene.onAddChild"]},{"name":"fun onException(exception: Exception)","description":"io.github.sceneview.ar.ARCore.onException","location":"arsceneview/io.github.sceneview.ar/-a-r-core/on-exception.html","searchKeys":["onException","fun onException(exception: Exception)","io.github.sceneview.ar.ARCore.onException"]},{"name":"fun onRemoveChild(child: Any?): Nothing?","description":"io.github.sceneview.ar.Scene.onRemoveChild","location":"arsceneview/io.github.sceneview.ar/-scene/on-remove-child.html","searchKeys":["onRemoveChild","fun onRemoveChild(child: Any?): Nothing?","io.github.sceneview.ar.Scene.onRemoveChild"]},{"name":"fun onSessionConfigChanged(session: Session, config: Config)","description":"io.github.sceneview.ar.ARSceneView.onSessionConfigChanged","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-config-changed.html","searchKeys":["onSessionConfigChanged","fun onSessionConfigChanged(session: Session, config: Config)","io.github.sceneview.ar.ARSceneView.onSessionConfigChanged"]},{"name":"fun onSessionCreated(session: Session)","description":"io.github.sceneview.ar.ARSceneView.onSessionCreated","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-created.html","searchKeys":["onSessionCreated","fun onSessionCreated(session: Session)","io.github.sceneview.ar.ARSceneView.onSessionCreated"]},{"name":"fun onSessionFailed(exception: Exception)","description":"io.github.sceneview.ar.ARSceneView.onSessionFailed","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-failed.html","searchKeys":["onSessionFailed","fun onSessionFailed(exception: Exception)","io.github.sceneview.ar.ARSceneView.onSessionFailed"]},{"name":"fun onSessionPaused(session: Session)","description":"io.github.sceneview.ar.ARSceneView.onSessionPaused","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-paused.html","searchKeys":["onSessionPaused","fun onSessionPaused(session: Session)","io.github.sceneview.ar.ARSceneView.onSessionPaused"]},{"name":"fun onSessionResumed(session: Session)","description":"io.github.sceneview.ar.ARSceneView.onSessionResumed","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-resumed.html","searchKeys":["onSessionResumed","fun onSessionResumed(session: Session)","io.github.sceneview.ar.ARSceneView.onSessionResumed"]},{"name":"fun pause()","description":"io.github.sceneview.ar.ARCore.pause","location":"arsceneview/io.github.sceneview.ar/-a-r-core/pause.html","searchKeys":["pause","fun pause()","io.github.sceneview.ar.ARCore.pause"]},{"name":"fun rememberARCameraNode(engine: Engine, creator: () -> ARCameraNode = {\n        ARSceneView.createCameraNode(engine)\n    }): ARCameraNode","description":"io.github.sceneview.ar.rememberARCameraNode","location":"arsceneview/io.github.sceneview.ar/remember-a-r-camera-node.html","searchKeys":["rememberARCameraNode","fun rememberARCameraNode(engine: Engine, creator: () -> ARCameraNode = {\n        ARSceneView.createCameraNode(engine)\n    }): ARCameraNode","io.github.sceneview.ar.rememberARCameraNode"]},{"name":"fun rememberCameraStream(engine: Engine, materialLoader: MaterialLoader, creator: () -> ARCameraStream = {\n        ARSceneView.createCameraStream(engine, materialLoader)\n    }): ARCameraStream","description":"io.github.sceneview.ar.rememberCameraStream","location":"arsceneview/io.github.sceneview.ar/remember-camera-stream.html","searchKeys":["rememberCameraStream","fun rememberCameraStream(engine: Engine, materialLoader: MaterialLoader, creator: () -> ARCameraStream = {\n        ARSceneView.createCameraStream(engine, materialLoader)\n    }): ARCameraStream","io.github.sceneview.ar.rememberCameraStream"]},{"name":"fun resolve(engine: Engine, session: Session, cloudAnchorId: String, onCompleted: (state: Anchor.CloudAnchorState, node: CloudAnchorNode?) -> Unit): ResolveCloudAnchorFuture","description":"io.github.sceneview.ar.node.CloudAnchorNode.Companion.resolve","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/-companion/resolve.html","searchKeys":["resolve","fun resolve(engine: Engine, session: Session, cloudAnchorId: String, onCompleted: (state: Anchor.CloudAnchorState, node: CloudAnchorNode?) -> Unit): ResolveCloudAnchorFuture","io.github.sceneview.ar.node.CloudAnchorNode.Companion.resolve"]},{"name":"fun resolve(engine: Engine, session: Session, latitude: Double, longitude: Double, altitudeAboveRooftop: Double, eusQuaternion: Quaternion, onCompleted: (state: Anchor.RooftopAnchorState, node: RooftopAnchorNode?) -> Unit): ResolveAnchorOnRooftopFuture?","description":"io.github.sceneview.ar.node.RooftopAnchorNode.Companion.resolve","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/-companion/resolve.html","searchKeys":["resolve","fun resolve(engine: Engine, session: Session, latitude: Double, longitude: Double, altitudeAboveRooftop: Double, eusQuaternion: Quaternion, onCompleted: (state: Anchor.RooftopAnchorState, node: RooftopAnchorNode?) -> Unit): ResolveAnchorOnRooftopFuture?","io.github.sceneview.ar.node.RooftopAnchorNode.Companion.resolve"]},{"name":"fun resolve(engine: Engine, session: Session, latitude: Double, longitude: Double, altitudeAboveTerrain: Double, eusQuaternion: Quaternion, onCompleted: (state: Anchor.TerrainAnchorState, node: TerrainAnchorNode?) -> Unit): ResolveAnchorOnTerrainFuture?","description":"io.github.sceneview.ar.node.TerrainAnchorNode.Companion.resolve","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/-companion/resolve.html","searchKeys":["resolve","fun resolve(engine: Engine, session: Session, latitude: Double, longitude: Double, altitudeAboveTerrain: Double, eusQuaternion: Quaternion, onCompleted: (state: Anchor.TerrainAnchorState, node: TerrainAnchorNode?) -> Unit): ResolveAnchorOnTerrainFuture?","io.github.sceneview.ar.node.TerrainAnchorNode.Companion.resolve"]},{"name":"fun resume(context: Context, activity: ComponentActivity?)","description":"io.github.sceneview.ar.ARCore.resume","location":"arsceneview/io.github.sceneview.ar/-a-r-core/resume.html","searchKeys":["resume","fun resume(context: Context, activity: ComponentActivity?)","io.github.sceneview.ar.ARCore.resume"]},{"name":"fun setOnArUnavailableListener(any: Any?): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.setOnArUnavailableListener","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/set-on-ar-unavailable-listener.html","searchKeys":["setOnArUnavailableListener","fun setOnArUnavailableListener(any: Any?): Nothing?","io.github.sceneview.ar.BaseArFragment.setOnArUnavailableListener"]},{"name":"fun setOnAugmentedFaceUpdateListener(listener: Any?): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.setOnAugmentedFaceUpdateListener","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/set-on-augmented-face-update-listener.html","searchKeys":["setOnAugmentedFaceUpdateListener","fun setOnAugmentedFaceUpdateListener(listener: Any?): Nothing?","io.github.sceneview.ar.BaseArFragment.setOnAugmentedFaceUpdateListener"]},{"name":"fun setOnAugmentedImageUpdateListener(listener: Any?): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.setOnAugmentedImageUpdateListener","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/set-on-augmented-image-update-listener.html","searchKeys":["setOnAugmentedImageUpdateListener","fun setOnAugmentedImageUpdateListener(listener: Any?): Nothing?","io.github.sceneview.ar.BaseArFragment.setOnAugmentedImageUpdateListener"]},{"name":"fun setOnSessionConfigurationListener(any: Any?): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.setOnSessionConfigurationListener","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/set-on-session-configuration-listener.html","searchKeys":["setOnSessionConfigurationListener","fun setOnSessionConfigurationListener(any: Any?): Nothing?","io.github.sceneview.ar.BaseArFragment.setOnSessionConfigurationListener"]},{"name":"fun setOnTapArPlaneListener(listener: Any?): Nothing?","description":"io.github.sceneview.ar.BaseArFragment.setOnTapArPlaneListener","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/set-on-tap-ar-plane-listener.html","searchKeys":["setOnTapArPlaneListener","fun setOnTapArPlaneListener(listener: Any?): Nothing?","io.github.sceneview.ar.BaseArFragment.setOnTapArPlaneListener"]},{"name":"fun setOnTapPlaneGlbModel(glbSource: String)","description":"io.github.sceneview.ar.ArFragment.setOnTapPlaneGlbModel","location":"arsceneview/io.github.sceneview.ar/-ar-fragment/set-on-tap-plane-glb-model.html","searchKeys":["setOnTapPlaneGlbModel","fun setOnTapPlaneGlbModel(glbSource: String)","io.github.sceneview.ar.ArFragment.setOnTapPlaneGlbModel"]},{"name":"fun setOnViewCreatedListener(any: Any?): Nothing?","description":"io.github.sceneview.ar.ArFragment.setOnViewCreatedListener","location":"arsceneview/io.github.sceneview.ar/-ar-fragment/set-on-view-created-listener.html","searchKeys":["setOnViewCreatedListener","fun setOnViewCreatedListener(any: Any?): Nothing?","io.github.sceneview.ar.ArFragment.setOnViewCreatedListener"]},{"name":"fun showCameraPermissionSettings(activity: ComponentActivity)","description":"io.github.sceneview.ar.ARCore.showCameraPermissionSettings","location":"arsceneview/io.github.sceneview.ar/-a-r-core/show-camera-permission-settings.html","searchKeys":["showCameraPermissionSettings","fun showCameraPermissionSettings(activity: ComponentActivity)","io.github.sceneview.ar.ARCore.showCameraPermissionSettings"]},{"name":"fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.camera.ARCameraStream.update","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/update.html","searchKeys":["update","fun update(session: Session, frame: Frame)","io.github.sceneview.ar.camera.ARCameraStream.update"]},{"name":"fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.scene.PlaneRenderer.update","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/update.html","searchKeys":["update","fun update(session: Session, frame: Frame)","io.github.sceneview.ar.scene.PlaneRenderer.update"]},{"name":"fun update(session: Session, frame: Frame, camera: Camera): LightEstimator.Estimation?","description":"io.github.sceneview.ar.arcore.LightEstimator.update","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/update.html","searchKeys":["update","fun update(session: Session, frame: Frame, camera: Camera): LightEstimator.Estimation?","io.github.sceneview.ar.arcore.LightEstimator.update"]},{"name":"fun updateOrNull(): Frame?","description":"io.github.sceneview.ar.arcore.ARSession.updateOrNull","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/update-or-null.html","searchKeys":["updateOrNull","fun updateOrNull(): Frame?","io.github.sceneview.ar.arcore.ARSession.updateOrNull"]},{"name":"fun valueOf(value: String): PlaneRenderer.PlaneRendererMode","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.valueOf","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer-mode/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PlaneRenderer.PlaneRendererMode","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.valueOf"]},{"name":"fun values(): Array<PlaneRenderer.PlaneRendererMode>","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.values","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer-mode/values.html","searchKeys":["values","fun values(): Array<PlaneRenderer.PlaneRendererMode>","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.values"]},{"name":"inline fun <T : Trackable> Frame.hasUpdatedTrackable(trackable: T): MutableCollection<T>","description":"io.github.sceneview.ar.arcore.hasUpdatedTrackable","location":"arsceneview/io.github.sceneview.ar.arcore/has-updated-trackable.html","searchKeys":["hasUpdatedTrackable","inline fun <T : Trackable> Frame.hasUpdatedTrackable(trackable: T): MutableCollection<T>","io.github.sceneview.ar.arcore.hasUpdatedTrackable"]},{"name":"interface OnTapModelListener","description":"io.github.sceneview.ar.ArFragment.OnTapModelListener","location":"arsceneview/io.github.sceneview.ar/-ar-fragment/-on-tap-model-listener/index.html","searchKeys":["OnTapModelListener","interface OnTapModelListener","io.github.sceneview.ar.ArFragment.OnTapModelListener"]},{"name":"lateinit var appSettingsLauncher: ActivityResultLauncher<Intent>","description":"io.github.sceneview.ar.ARCore.appSettingsLauncher","location":"arsceneview/io.github.sceneview.ar/-a-r-core/app-settings-launcher.html","searchKeys":["appSettingsLauncher","lateinit var appSettingsLauncher: ActivityResultLauncher<Intent>","io.github.sceneview.ar.ARCore.appSettingsLauncher"]},{"name":"lateinit var cameraPermissionLauncher: ActivityResultLauncher<String>","description":"io.github.sceneview.ar.ARCore.cameraPermissionLauncher","location":"arsceneview/io.github.sceneview.ar/-a-r-core/camera-permission-launcher.html","searchKeys":["cameraPermissionLauncher","lateinit var cameraPermissionLauncher: ActivityResultLauncher<String>","io.github.sceneview.ar.ARCore.cameraPermissionLauncher"]},{"name":"lateinit var features: Set<Session.Feature>","description":"io.github.sceneview.ar.ARCore.features","location":"arsceneview/io.github.sceneview.ar/-a-r-core/features.html","searchKeys":["features","lateinit var features: Set<Session.Feature>","io.github.sceneview.ar.ARCore.features"]},{"name":"lateinit var viewSize: Size","description":"io.github.sceneview.ar.scene.PlaneRenderer.viewSize","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/view-size.html","searchKeys":["viewSize","lateinit var viewSize: Size","io.github.sceneview.ar.scene.PlaneRenderer.viewSize"]},{"name":"object Companion","description":"io.github.sceneview.ar.ARSceneView.Companion","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.ARSceneView.Companion"]},{"name":"object Companion","description":"io.github.sceneview.ar.arcore.LightEstimator.Companion","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.arcore.LightEstimator.Companion"]},{"name":"object Companion","description":"io.github.sceneview.ar.camera.ARCameraStream.Companion","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.camera.ARCameraStream.Companion"]},{"name":"object Companion","description":"io.github.sceneview.ar.node.CloudAnchorNode.Companion","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.node.CloudAnchorNode.Companion"]},{"name":"object Companion","description":"io.github.sceneview.ar.node.RooftopAnchorNode.Companion","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.node.RooftopAnchorNode.Companion"]},{"name":"object Companion","description":"io.github.sceneview.ar.node.TerrainAnchorNode.Companion","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.node.TerrainAnchorNode.Companion"]},{"name":"object Companion","description":"io.github.sceneview.ar.scene.PlaneRenderer.Companion","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-companion/index.html","searchKeys":["Companion","object Companion","io.github.sceneview.ar.scene.PlaneRenderer.Companion"]},{"name":"open class ARCameraNode(engine: Engine) : CameraNode","description":"io.github.sceneview.ar.node.ARCameraNode","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/index.html","searchKeys":["ARCameraNode","open class ARCameraNode(engine: Engine) : CameraNode","io.github.sceneview.ar.node.ARCameraNode"]},{"name":"open class ARCameraStream(val engine: Engine, materialLoader: MaterialLoader, standardMaterialFile: String = \"sceneview/materials/camera_stream_flat.filamat\", depthOcclusionMaterialFile: String = \"sceneview/materials/camera_stream_depth.filamat\") : RenderableComponent","description":"io.github.sceneview.ar.camera.ARCameraStream","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/index.html","searchKeys":["ARCameraStream","open class ARCameraStream(val engine: Engine, materialLoader: MaterialLoader, standardMaterialFile: String = \"sceneview/materials/camera_stream_flat.filamat\", depthOcclusionMaterialFile: String = \"sceneview/materials/camera_stream_depth.filamat\") : RenderableComponent","io.github.sceneview.ar.camera.ARCameraStream"]},{"name":"open class ARSceneView constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: ARCameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null, sharedCameraStream: ARCameraStream? = null, val sessionFeatures: Set<Session.Feature> = setOf(), val sessionCameraConfig: (Session) -> CameraConfig? = null, sessionConfiguration: (session: Session, Config) -> Unit? = null, var onSessionCreated: (session: Session) -> Unit? = null, var onSessionResumed: (session: Session) -> Unit? = null, var onSessionPaused: (session: Session) -> Unit? = null, var onSessionFailed: (Exception) -> Unit? = null, var onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit? = null, var onSessionUpdated: (session: Session, frame: Frame) -> Unit? = null) : SceneView","description":"io.github.sceneview.ar.ARSceneView","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/index.html","searchKeys":["ARSceneView","open class ARSceneView constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0, defStyleRes: Int = 0, sharedActivity: ComponentActivity? = null, sharedLifecycle: Lifecycle? = null, sharedEngine: Engine? = null, sharedModelLoader: ModelLoader? = null, sharedMaterialLoader: MaterialLoader? = null, sharedScene: Scene? = null, sharedView: View? = null, sharedRenderer: Renderer? = null, sharedCameraNode: ARCameraNode? = null, sharedMainLightNode: LightNode? = null, sharedIndirectLight: IndirectLight? = null, sharedSkybox: Skybox? = null, sharedCollisionSystem: CollisionSystem? = null, sharedGestureDetector: GestureDetector? = null, sharedOnGestureListener: GestureDetector.OnGestureListener? = null, sharedCameraStream: ARCameraStream? = null, val sessionFeatures: Set<Session.Feature> = setOf(), val sessionCameraConfig: (Session) -> CameraConfig? = null, sessionConfiguration: (session: Session, Config) -> Unit? = null, var onSessionCreated: (session: Session) -> Unit? = null, var onSessionResumed: (session: Session) -> Unit? = null, var onSessionPaused: (session: Session) -> Unit? = null, var onSessionFailed: (Exception) -> Unit? = null, var onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit? = null, var onSessionUpdated: (session: Session, frame: Frame) -> Unit? = null) : SceneView","io.github.sceneview.ar.ARSceneView"]},{"name":"open class AnchorNode(engine: Engine, anchor: Anchor, var onTrackingStateChanged: (TrackingState) -> Unit? = null, var onPoseChanged: (Pose) -> Unit? = null, var onAnchorChanged: (Anchor) -> Unit? = null, var onUpdated: (Anchor) -> Unit? = null) : PoseNode","description":"io.github.sceneview.ar.node.AnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/index.html","searchKeys":["AnchorNode","open class AnchorNode(engine: Engine, anchor: Anchor, var onTrackingStateChanged: (TrackingState) -> Unit? = null, var onPoseChanged: (Pose) -> Unit? = null, var onAnchorChanged: (Anchor) -> Unit? = null, var onUpdated: (Anchor) -> Unit? = null) : PoseNode","io.github.sceneview.ar.node.AnchorNode"]},{"name":"open class AugmentedFaceNode(engine: Engine, val augmentedFace: AugmentedFace, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (AugmentedFace) -> Unit? = null) : TrackableNode<AugmentedFace> ","description":"io.github.sceneview.ar.node.AugmentedFaceNode","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/index.html","searchKeys":["AugmentedFaceNode","open class AugmentedFaceNode(engine: Engine, val augmentedFace: AugmentedFace, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (AugmentedFace) -> Unit? = null) : TrackableNode<AugmentedFace> ","io.github.sceneview.ar.node.AugmentedFaceNode"]},{"name":"open class AugmentedImageNode(engine: Engine, val augmentedImage: AugmentedImage, var applyImageScale: Boolean = false, val visibleTrackingMethods: Set<AugmentedImage.TrackingMethod> = setOf(\n        TrackingMethod.FULL_TRACKING, TrackingMethod.LAST_KNOWN_POSE\n    ), onTrackingStateChanged: (TrackingState) -> Unit? = null, val onTrackingMethodChanged: (AugmentedImage.TrackingMethod) -> Unit? = null, onUpdated: (AugmentedImage) -> Unit? = null) : TrackableNode<AugmentedImage> ","description":"io.github.sceneview.ar.node.AugmentedImageNode","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/index.html","searchKeys":["AugmentedImageNode","open class AugmentedImageNode(engine: Engine, val augmentedImage: AugmentedImage, var applyImageScale: Boolean = false, val visibleTrackingMethods: Set<AugmentedImage.TrackingMethod> = setOf(\n        TrackingMethod.FULL_TRACKING, TrackingMethod.LAST_KNOWN_POSE\n    ), onTrackingStateChanged: (TrackingState) -> Unit? = null, val onTrackingMethodChanged: (AugmentedImage.TrackingMethod) -> Unit? = null, onUpdated: (AugmentedImage) -> Unit? = null) : TrackableNode<AugmentedImage> ","io.github.sceneview.ar.node.AugmentedImageNode"]},{"name":"open class BaseArFragment","description":"io.github.sceneview.ar.BaseArFragment","location":"arsceneview/io.github.sceneview.ar/-base-ar-fragment/index.html","searchKeys":["BaseArFragment","open class BaseArFragment","io.github.sceneview.ar.BaseArFragment"]},{"name":"open class CloudAnchorNode(engine: Engine, anchor: Anchor, cloudAnchorId: String? = null, var onTrackingStateChanged: (TrackingState) -> Unit? = null, var onUpdated: (Anchor?) -> Unit? = null, var onHosted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit? = null) : AnchorNode","description":"io.github.sceneview.ar.node.CloudAnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/index.html","searchKeys":["CloudAnchorNode","open class CloudAnchorNode(engine: Engine, anchor: Anchor, cloudAnchorId: String? = null, var onTrackingStateChanged: (TrackingState) -> Unit? = null, var onUpdated: (Anchor?) -> Unit? = null, var onHosted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit? = null) : AnchorNode","io.github.sceneview.ar.node.CloudAnchorNode"]},{"name":"open class HitResultNode(engine: Engine, val hitTest: HitResultNode.(Frame) -> HitResult?) : TrackableNode<Trackable> ","description":"io.github.sceneview.ar.node.HitResultNode","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/index.html","searchKeys":["HitResultNode","open class HitResultNode(engine: Engine, val hitTest: HitResultNode.(Frame) -> HitResult?) : TrackableNode<Trackable> ","io.github.sceneview.ar.node.HitResultNode"]},{"name":"open class PlaneVisualizer : TransformProvider","description":"io.github.sceneview.ar.PlaneVisualizer","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/index.html","searchKeys":["PlaneVisualizer","open class PlaneVisualizer : TransformProvider","io.github.sceneview.ar.PlaneVisualizer"]},{"name":"open class PoseNode(engine: Engine, pose: Pose = Pose.IDENTITY, var moveHitTest: PoseNode.(Frame, MotionEvent) -> HitResult? = { frame, motionEvent ->\n        frame.hitTest(motionEvent).firstOrNull()?.takeIf { it.trackable.isTracking }\n    }, var onPoseChanged: (Pose) -> Unit? = null) : Node","description":"io.github.sceneview.ar.node.PoseNode","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/index.html","searchKeys":["PoseNode","open class PoseNode(engine: Engine, pose: Pose = Pose.IDENTITY, var moveHitTest: PoseNode.(Frame, MotionEvent) -> HitResult? = { frame, motionEvent ->\n        frame.hitTest(motionEvent).firstOrNull()?.takeIf { it.trackable.isTracking }\n    }, var onPoseChanged: (Pose) -> Unit? = null) : Node","io.github.sceneview.ar.node.PoseNode"]},{"name":"open class RooftopAnchorNode : AnchorNode","description":"io.github.sceneview.ar.node.RooftopAnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/index.html","searchKeys":["RooftopAnchorNode","open class RooftopAnchorNode : AnchorNode","io.github.sceneview.ar.node.RooftopAnchorNode"]},{"name":"open class StreetscapeGeometryNode(engine: Engine, val streetscapeGeometry: StreetscapeGeometry, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (StreetscapeGeometry) -> Unit? = null) : TrackableNode<StreetscapeGeometry> ","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/index.html","searchKeys":["StreetscapeGeometryNode","open class StreetscapeGeometryNode(engine: Engine, val streetscapeGeometry: StreetscapeGeometry, meshMaterialInstance: MaterialInstance? = null, builder: RenderableManager.Builder.() -> Unit = {}, onTrackingStateChanged: (TrackingState) -> Unit? = null, onUpdated: (StreetscapeGeometry) -> Unit? = null) : TrackableNode<StreetscapeGeometry> ","io.github.sceneview.ar.node.StreetscapeGeometryNode"]},{"name":"open class TerrainAnchorNode : AnchorNode","description":"io.github.sceneview.ar.node.TerrainAnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/index.html","searchKeys":["TerrainAnchorNode","open class TerrainAnchorNode : AnchorNode","io.github.sceneview.ar.node.TerrainAnchorNode"]},{"name":"open class TrackableNode<T : Trackable>(engine: Engine, val visibleTrackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), var onTrackingStateChanged: (TrackingState) -> Unit? = null, var onUpdated: (T) -> Unit? = null) : PoseNode","description":"io.github.sceneview.ar.node.TrackableNode","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/index.html","searchKeys":["TrackableNode","open class TrackableNode<T : Trackable>(engine: Engine, val visibleTrackingStates: Set<TrackingState> = setOf(TrackingState.TRACKING), var onTrackingStateChanged: (TrackingState) -> Unit? = null, var onUpdated: (T) -> Unit? = null) : PoseNode","io.github.sceneview.ar.node.TrackableNode"]},{"name":"open fun createAnchor(): Anchor?","description":"io.github.sceneview.ar.node.PoseNode.createAnchor","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/create-anchor.html","searchKeys":["createAnchor","open fun createAnchor(): Anchor?","io.github.sceneview.ar.node.PoseNode.createAnchor"]},{"name":"open fun createAnchorNode(): AnchorNode?","description":"io.github.sceneview.ar.node.PoseNode.createAnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/create-anchor-node.html","searchKeys":["createAnchorNode","open fun createAnchorNode(): AnchorNode?","io.github.sceneview.ar.node.PoseNode.createAnchorNode"]},{"name":"open fun destroy()","description":"io.github.sceneview.ar.PlaneVisualizer.destroy","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/destroy.html","searchKeys":["destroy","open fun destroy()","io.github.sceneview.ar.PlaneVisualizer.destroy"]},{"name":"open fun detachAnchor()","description":"io.github.sceneview.ar.node.AnchorNode.detachAnchor","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/detach-anchor.html","searchKeys":["detachAnchor","open fun detachAnchor()","io.github.sceneview.ar.node.AnchorNode.detachAnchor"]},{"name":"open fun getTransformationMatrix(): Matrix","description":"io.github.sceneview.ar.PlaneVisualizer.getTransformationMatrix","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/get-transformation-matrix.html","searchKeys":["getTransformationMatrix","open fun getTransformationMatrix(): Matrix","io.github.sceneview.ar.PlaneVisualizer.getTransformationMatrix"]},{"name":"open fun onCameraTrackingChanged(trackingState: TrackingState)","description":"io.github.sceneview.ar.node.PoseNode.onCameraTrackingChanged","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/on-camera-tracking-changed.html","searchKeys":["onCameraTrackingChanged","open fun onCameraTrackingChanged(trackingState: TrackingState)","io.github.sceneview.ar.node.PoseNode.onCameraTrackingChanged"]},{"name":"open fun onCameraUpdated(camera: Camera)","description":"io.github.sceneview.ar.node.ARCameraNode.onCameraUpdated","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/on-camera-updated.html","searchKeys":["onCameraUpdated","open fun onCameraUpdated(camera: Camera)","io.github.sceneview.ar.node.ARCameraNode.onCameraUpdated"]},{"name":"open fun onHosted(cloudAnchorId: String?, state: Anchor.CloudAnchorState)","description":"io.github.sceneview.ar.node.CloudAnchorNode.onHosted","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/on-hosted.html","searchKeys":["onHosted","open fun onHosted(cloudAnchorId: String?, state: Anchor.CloudAnchorState)","io.github.sceneview.ar.node.CloudAnchorNode.onHosted"]},{"name":"open fun onMove(detector: MoveGestureDetector, e: MotionEvent, pose: Pose): Boolean","description":"io.github.sceneview.ar.node.PoseNode.onMove","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/on-move.html","searchKeys":["onMove","open fun onMove(detector: MoveGestureDetector, e: MotionEvent, pose: Pose): Boolean","io.github.sceneview.ar.node.PoseNode.onMove"]},{"name":"open fun onTrackingStateChanged(trackingState: TrackingState)","description":"io.github.sceneview.ar.node.ARCameraNode.onTrackingStateChanged","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/on-tracking-state-changed.html","searchKeys":["onTrackingStateChanged","open fun onTrackingStateChanged(trackingState: TrackingState)","io.github.sceneview.ar.node.ARCameraNode.onTrackingStateChanged"]},{"name":"open fun setEnabled(enabled: Boolean)","description":"io.github.sceneview.ar.PlaneVisualizer.setEnabled","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/set-enabled.html","searchKeys":["setEnabled","open fun setEnabled(enabled: Boolean)","io.github.sceneview.ar.PlaneVisualizer.setEnabled"]},{"name":"open fun setPlaneMaterial(materialInstance: MaterialInstance)","description":"io.github.sceneview.ar.PlaneVisualizer.setPlaneMaterial","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/set-plane-material.html","searchKeys":["setPlaneMaterial","open fun setPlaneMaterial(materialInstance: MaterialInstance)","io.github.sceneview.ar.PlaneVisualizer.setPlaneMaterial"]},{"name":"open fun setShadowMaterial(materialInstance: MaterialInstance)","description":"io.github.sceneview.ar.PlaneVisualizer.setShadowMaterial","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/set-shadow-material.html","searchKeys":["setShadowMaterial","open fun setShadowMaterial(materialInstance: MaterialInstance)","io.github.sceneview.ar.PlaneVisualizer.setShadowMaterial"]},{"name":"open fun setShadowReceiver(shadowReceiver: Boolean)","description":"io.github.sceneview.ar.PlaneVisualizer.setShadowReceiver","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/set-shadow-receiver.html","searchKeys":["setShadowReceiver","open fun setShadowReceiver(shadowReceiver: Boolean)","io.github.sceneview.ar.PlaneVisualizer.setShadowReceiver"]},{"name":"open fun setVisible(visible: Boolean)","description":"io.github.sceneview.ar.PlaneVisualizer.setVisible","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/set-visible.html","searchKeys":["setVisible","open fun setVisible(visible: Boolean)","io.github.sceneview.ar.PlaneVisualizer.setVisible"]},{"name":"open fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.node.ARCameraNode.update","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/update.html","searchKeys":["update","open fun update(session: Session, frame: Frame)","io.github.sceneview.ar.node.ARCameraNode.update"]},{"name":"open fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.node.PoseNode.update","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/update.html","searchKeys":["update","open fun update(session: Session, frame: Frame)","io.github.sceneview.ar.node.PoseNode.update"]},{"name":"open fun update(trackable: T?)","description":"io.github.sceneview.ar.node.TrackableNode.update","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/update.html","searchKeys":["update","open fun update(trackable: T?)","io.github.sceneview.ar.node.TrackableNode.update"]},{"name":"open fun updatePlane()","description":"io.github.sceneview.ar.PlaneVisualizer.updatePlane","location":"arsceneview/io.github.sceneview.ar/-plane-visualizer/update-plane.html","searchKeys":["updatePlane","open fun updatePlane()","io.github.sceneview.ar.PlaneVisualizer.updatePlane"]},{"name":"open override fun configure(config: Config)","description":"io.github.sceneview.ar.arcore.ARSession.configure","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/configure.html","searchKeys":["configure","open override fun configure(config: Config)","io.github.sceneview.ar.arcore.ARSession.configure"]},{"name":"open override fun createAnchor(): Anchor?","description":"io.github.sceneview.ar.node.TrackableNode.createAnchor","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/create-anchor.html","searchKeys":["createAnchor","open override fun createAnchor(): Anchor?","io.github.sceneview.ar.node.TrackableNode.createAnchor"]},{"name":"open override fun createAnchorNode(): AnchorNode?","description":"io.github.sceneview.ar.node.TrackableNode.createAnchorNode","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/create-anchor-node.html","searchKeys":["createAnchorNode","open override fun createAnchorNode(): AnchorNode?","io.github.sceneview.ar.node.TrackableNode.createAnchorNode"]},{"name":"open override fun destroy()","description":"io.github.sceneview.ar.ARSceneView.destroy","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.ar.ARSceneView.destroy"]},{"name":"open override fun destroy()","description":"io.github.sceneview.ar.node.AnchorNode.destroy","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.ar.node.AnchorNode.destroy"]},{"name":"open override fun destroy()","description":"io.github.sceneview.ar.node.CloudAnchorNode.destroy","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/destroy.html","searchKeys":["destroy","open override fun destroy()","io.github.sceneview.ar.node.CloudAnchorNode.destroy"]},{"name":"open override fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.ar.node.PoseNode.onMove","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/on-move.html","searchKeys":["onMove","open override fun onMove(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.ar.node.PoseNode.onMove"]},{"name":"open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","description":"io.github.sceneview.ar.node.AnchorNode.onMoveBegin","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/on-move-begin.html","searchKeys":["onMoveBegin","open override fun onMoveBegin(detector: MoveGestureDetector, e: MotionEvent): Boolean","io.github.sceneview.ar.node.AnchorNode.onMoveBegin"]},{"name":"open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","description":"io.github.sceneview.ar.node.AnchorNode.onMoveEnd","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/on-move-end.html","searchKeys":["onMoveEnd","open override fun onMoveEnd(detector: MoveGestureDetector, e: MotionEvent)","io.github.sceneview.ar.node.AnchorNode.onMoveEnd"]},{"name":"open override fun pause()","description":"io.github.sceneview.ar.arcore.ARSession.pause","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/pause.html","searchKeys":["pause","open override fun pause()","io.github.sceneview.ar.arcore.ARSession.pause"]},{"name":"open override fun resume()","description":"io.github.sceneview.ar.arcore.ARSession.resume","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/resume.html","searchKeys":["resume","open override fun resume()","io.github.sceneview.ar.arcore.ARSession.resume"]},{"name":"open override fun setDisplayGeometry(rotation: Int, widthPx: Int, heightPx: Int)","description":"io.github.sceneview.ar.arcore.ARSession.setDisplayGeometry","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/set-display-geometry.html","searchKeys":["setDisplayGeometry","open override fun setDisplayGeometry(rotation: Int, widthPx: Int, heightPx: Int)","io.github.sceneview.ar.arcore.ARSession.setDisplayGeometry"]},{"name":"open override fun setMaterialInstances(materialInstance: MaterialInstance)","description":"io.github.sceneview.ar.camera.ARCameraStream.setMaterialInstances","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/set-material-instances.html","searchKeys":["setMaterialInstances","open override fun setMaterialInstances(materialInstance: MaterialInstance)","io.github.sceneview.ar.camera.ARCameraStream.setMaterialInstances"]},{"name":"open override fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.node.AnchorNode.update","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/update.html","searchKeys":["update","open override fun update(session: Session, frame: Frame)","io.github.sceneview.ar.node.AnchorNode.update"]},{"name":"open override fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.node.HitResultNode.update","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/update.html","searchKeys":["update","open override fun update(session: Session, frame: Frame)","io.github.sceneview.ar.node.HitResultNode.update"]},{"name":"open override fun update(session: Session, frame: Frame)","description":"io.github.sceneview.ar.node.TrackableNode.update","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/update.html","searchKeys":["update","open override fun update(session: Session, frame: Frame)","io.github.sceneview.ar.node.TrackableNode.update"]},{"name":"open override fun update(trackable: AugmentedFace?)","description":"io.github.sceneview.ar.node.AugmentedFaceNode.update","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/update.html","searchKeys":["update","open override fun update(trackable: AugmentedFace?)","io.github.sceneview.ar.node.AugmentedFaceNode.update"]},{"name":"open override fun update(trackable: AugmentedImage?)","description":"io.github.sceneview.ar.node.AugmentedImageNode.update","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/update.html","searchKeys":["update","open override fun update(trackable: AugmentedImage?)","io.github.sceneview.ar.node.AugmentedImageNode.update"]},{"name":"open override fun update(trackable: StreetscapeGeometry?)","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode.update","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/update.html","searchKeys":["update","open override fun update(trackable: StreetscapeGeometry?)","io.github.sceneview.ar.node.StreetscapeGeometryNode.update"]},{"name":"open override val cameraNode: ARCameraNode","description":"io.github.sceneview.ar.ARSceneView.cameraNode","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/camera-node.html","searchKeys":["cameraNode","open override val cameraNode: ARCameraNode","io.github.sceneview.ar.ARSceneView.cameraNode"]},{"name":"open override var isPositionEditable: Boolean","description":"io.github.sceneview.ar.node.AnchorNode.isPositionEditable","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/is-position-editable.html","searchKeys":["isPositionEditable","open override var isPositionEditable: Boolean","io.github.sceneview.ar.node.AnchorNode.isPositionEditable"]},{"name":"open override var isRotationEditable: Boolean","description":"io.github.sceneview.ar.node.PoseNode.isRotationEditable","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/is-rotation-editable.html","searchKeys":["isRotationEditable","open override var isRotationEditable: Boolean","io.github.sceneview.ar.node.PoseNode.isRotationEditable"]},{"name":"open override var isVisible: Boolean","description":"io.github.sceneview.ar.node.AnchorNode.isVisible","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/is-visible.html","searchKeys":["isVisible","open override var isVisible: Boolean","io.github.sceneview.ar.node.AnchorNode.isVisible"]},{"name":"open override var isVisible: Boolean","description":"io.github.sceneview.ar.node.AugmentedImageNode.isVisible","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/is-visible.html","searchKeys":["isVisible","open override var isVisible: Boolean","io.github.sceneview.ar.node.AugmentedImageNode.isVisible"]},{"name":"open override var isVisible: Boolean","description":"io.github.sceneview.ar.node.PoseNode.isVisible","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/is-visible.html","searchKeys":["isVisible","open override var isVisible: Boolean","io.github.sceneview.ar.node.PoseNode.isVisible"]},{"name":"open override var isVisible: Boolean","description":"io.github.sceneview.ar.node.TrackableNode.isVisible","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/is-visible.html","searchKeys":["isVisible","open override var isVisible: Boolean","io.github.sceneview.ar.node.TrackableNode.isVisible"]},{"name":"open override var lifecycle: Lifecycle?","description":"io.github.sceneview.ar.ARSceneView.lifecycle","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/lifecycle.html","searchKeys":["lifecycle","open override var lifecycle: Lifecycle?","io.github.sceneview.ar.ARSceneView.lifecycle"]},{"name":"open val arCore: ARCore","description":"io.github.sceneview.ar.ARSceneView.arCore","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/ar-core.html","searchKeys":["arCore","open val arCore: ARCore","io.github.sceneview.ar.ARSceneView.arCore"]},{"name":"open var cameraTrackingState: TrackingState","description":"io.github.sceneview.ar.node.PoseNode.cameraTrackingState","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/camera-tracking-state.html","searchKeys":["cameraTrackingState","open var cameraTrackingState: TrackingState","io.github.sceneview.ar.node.PoseNode.cameraTrackingState"]},{"name":"open var hitResult: HitResult?","description":"io.github.sceneview.ar.node.HitResultNode.hitResult","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/hit-result.html","searchKeys":["hitResult","open var hitResult: HitResult?","io.github.sceneview.ar.node.HitResultNode.hitResult"]},{"name":"open var pose: Pose?","description":"io.github.sceneview.ar.node.ARCameraNode.pose","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/pose.html","searchKeys":["pose","open var pose: Pose?","io.github.sceneview.ar.node.ARCameraNode.pose"]},{"name":"open var trackingMethod: AugmentedImage.TrackingMethod","description":"io.github.sceneview.ar.node.AugmentedImageNode.trackingMethod","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/tracking-method.html","searchKeys":["trackingMethod","open var trackingMethod: AugmentedImage.TrackingMethod","io.github.sceneview.ar.node.AugmentedImageNode.trackingMethod"]},{"name":"open var trackingState: TrackingState","description":"io.github.sceneview.ar.node.ARCameraNode.trackingState","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/tracking-state.html","searchKeys":["trackingState","open var trackingState: TrackingState","io.github.sceneview.ar.node.ARCameraNode.trackingState"]},{"name":"open var trackingState: TrackingState","description":"io.github.sceneview.ar.node.AnchorNode.trackingState","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/tracking-state.html","searchKeys":["trackingState","open var trackingState: TrackingState","io.github.sceneview.ar.node.AnchorNode.trackingState"]},{"name":"override val engine: Engine","description":"io.github.sceneview.ar.camera.ARCameraStream.engine","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/engine.html","searchKeys":["engine","override val engine: Engine","io.github.sceneview.ar.camera.ARCameraStream.engine"]},{"name":"override val entity: Int","description":"io.github.sceneview.ar.camera.ARCameraStream.entity","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/entity.html","searchKeys":["entity","override val entity: Int","io.github.sceneview.ar.camera.ARCameraStream.entity"]},{"name":"override var indirectLight: IndirectLight?","description":"io.github.sceneview.ar.ARSceneView.indirectLight","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/indirect-light.html","searchKeys":["indirectLight","override var indirectLight: IndirectLight?","io.github.sceneview.ar.ARSceneView.indirectLight"]},{"name":"override var mainLightNode: LightNode?","description":"io.github.sceneview.ar.ARSceneView.mainLightNode","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/main-light-node.html","searchKeys":["mainLightNode","override var mainLightNode: LightNode?","io.github.sceneview.ar.ARSceneView.mainLightNode"]},{"name":"val AugmentedImage.isTracking: Boolean","description":"io.github.sceneview.ar.arcore.isTracking","location":"arsceneview/io.github.sceneview.ar.arcore/is-tracking.html","searchKeys":["isTracking","val AugmentedImage.isTracking: Boolean","io.github.sceneview.ar.arcore.isTracking"]},{"name":"val Camera.isTracking: Boolean","description":"io.github.sceneview.ar.arcore.isTracking","location":"arsceneview/io.github.sceneview.ar.arcore/is-tracking.html","searchKeys":["isTracking","val Camera.isTracking: Boolean","io.github.sceneview.ar.arcore.isTracking"]},{"name":"val Camera.viewTransform: Transform","description":"io.github.sceneview.ar.arcore.viewTransform","location":"arsceneview/io.github.sceneview.ar.arcore/view-transform.html","searchKeys":["viewTransform","val Camera.viewTransform: Transform","io.github.sceneview.ar.arcore.viewTransform"]},{"name":"val GeospatialPose.transform: Transform","description":"io.github.sceneview.ar.arcore.transform","location":"arsceneview/io.github.sceneview.ar.arcore/transform.html","searchKeys":["transform","val GeospatialPose.transform: Transform","io.github.sceneview.ar.arcore.transform"]},{"name":"val Pose.position: Position","description":"io.github.sceneview.ar.arcore.position","location":"arsceneview/io.github.sceneview.ar.arcore/position.html","searchKeys":["position","val Pose.position: Position","io.github.sceneview.ar.arcore.position"]},{"name":"val Pose.quaternion: Quaternion","description":"io.github.sceneview.ar.arcore.quaternion","location":"arsceneview/io.github.sceneview.ar.arcore/quaternion.html","searchKeys":["quaternion","val Pose.quaternion: Quaternion","io.github.sceneview.ar.arcore.quaternion"]},{"name":"val Pose.rotation: Rotation","description":"io.github.sceneview.ar.arcore.rotation","location":"arsceneview/io.github.sceneview.ar.arcore/rotation.html","searchKeys":["rotation","val Pose.rotation: Rotation","io.github.sceneview.ar.arcore.rotation"]},{"name":"val Pose.transform: Transform","description":"io.github.sceneview.ar.arcore.transform","location":"arsceneview/io.github.sceneview.ar.arcore/transform.html","searchKeys":["transform","val Pose.transform: Transform","io.github.sceneview.ar.arcore.transform"]},{"name":"val Pose.xDirection: Direction","description":"io.github.sceneview.ar.arcore.xDirection","location":"arsceneview/io.github.sceneview.ar.arcore/x-direction.html","searchKeys":["xDirection","val Pose.xDirection: Direction","io.github.sceneview.ar.arcore.xDirection"]},{"name":"val Pose.yDirection: Direction","description":"io.github.sceneview.ar.arcore.yDirection","location":"arsceneview/io.github.sceneview.ar.arcore/y-direction.html","searchKeys":["yDirection","val Pose.yDirection: Direction","io.github.sceneview.ar.arcore.yDirection"]},{"name":"val Pose.zDirection: Direction","description":"io.github.sceneview.ar.arcore.zDirection","location":"arsceneview/io.github.sceneview.ar.arcore/z-direction.html","searchKeys":["zDirection","val Pose.zDirection: Direction","io.github.sceneview.ar.arcore.zDirection"]},{"name":"val Trackable.isTracking: Boolean","description":"io.github.sceneview.ar.arcore.isTracking","location":"arsceneview/io.github.sceneview.ar.arcore/is-tracking.html","searchKeys":["isTracking","val Trackable.isTracking: Boolean","io.github.sceneview.ar.arcore.isTracking"]},{"name":"val altitudeAboveRooftop: Double","description":"io.github.sceneview.ar.node.RooftopAnchorNode.altitudeAboveRooftop","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/altitude-above-rooftop.html","searchKeys":["altitudeAboveRooftop","val altitudeAboveRooftop: Double","io.github.sceneview.ar.node.RooftopAnchorNode.altitudeAboveRooftop"]},{"name":"val altitudeAboveTerrain: Double","description":"io.github.sceneview.ar.node.TerrainAnchorNode.altitudeAboveTerrain","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/altitude-above-terrain.html","searchKeys":["altitudeAboveTerrain","val altitudeAboveTerrain: Double","io.github.sceneview.ar.node.TerrainAnchorNode.altitudeAboveTerrain"]},{"name":"val anchors: Collection<Anchor>","description":"io.github.sceneview.ar.node.TrackableNode.anchors","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/anchors.html","searchKeys":["anchors","val anchors: Collection<Anchor>","io.github.sceneview.ar.node.TrackableNode.anchors"]},{"name":"val augmentedFace: AugmentedFace","description":"io.github.sceneview.ar.node.AugmentedFaceNode.augmentedFace","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/augmented-face.html","searchKeys":["augmentedFace","val augmentedFace: AugmentedFace","io.github.sceneview.ar.node.AugmentedFaceNode.augmentedFace"]},{"name":"val augmentedImage: AugmentedImage","description":"io.github.sceneview.ar.node.AugmentedImageNode.augmentedImage","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/augmented-image.html","searchKeys":["augmentedImage","val augmentedImage: AugmentedImage","io.github.sceneview.ar.node.AugmentedImageNode.augmentedImage"]},{"name":"val cameraTextureIds: IntArray","description":"io.github.sceneview.ar.camera.ARCameraStream.cameraTextureIds","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/camera-texture-ids.html","searchKeys":["cameraTextureIds","val cameraTextureIds: IntArray","io.github.sceneview.ar.camera.ARCameraStream.cameraTextureIds"]},{"name":"val centerNode: PoseNode","description":"io.github.sceneview.ar.node.AugmentedFaceNode.centerNode","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/center-node.html","searchKeys":["centerNode","val centerNode: PoseNode","io.github.sceneview.ar.node.AugmentedFaceNode.centerNode"]},{"name":"val depthTexture: Texture","description":"io.github.sceneview.ar.camera.ARCameraStream.depthTexture","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/depth-texture.html","searchKeys":["depthTexture","val depthTexture: Texture","io.github.sceneview.ar.camera.ARCameraStream.depthTexture"]},{"name":"val engine: Engine","description":"io.github.sceneview.ar.arcore.LightEstimator.engine","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.ar.arcore.LightEstimator.engine"]},{"name":"val engine: Engine","description":"io.github.sceneview.ar.scene.PlaneRenderer.engine","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/engine.html","searchKeys":["engine","val engine: Engine","io.github.sceneview.ar.scene.PlaneRenderer.engine"]},{"name":"val entries: EnumEntries<PlaneRenderer.PlaneRendererMode>","description":"io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.entries","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/-plane-renderer-mode/entries.html","searchKeys":["entries","val entries: EnumEntries<PlaneRenderer.PlaneRendererMode>","io.github.sceneview.ar.scene.PlaneRenderer.PlaneRendererMode.entries"]},{"name":"val eusQuaternion: Quaternion","description":"io.github.sceneview.ar.node.RooftopAnchorNode.eusQuaternion","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/eus-quaternion.html","searchKeys":["eusQuaternion","val eusQuaternion: Quaternion","io.github.sceneview.ar.node.RooftopAnchorNode.eusQuaternion"]},{"name":"val eusQuaternion: Quaternion","description":"io.github.sceneview.ar.node.TerrainAnchorNode.eusQuaternion","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/eus-quaternion.html","searchKeys":["eusQuaternion","val eusQuaternion: Quaternion","io.github.sceneview.ar.node.TerrainAnchorNode.eusQuaternion"]},{"name":"val hitTest: HitResultNode.(Frame) -> HitResult?","description":"io.github.sceneview.ar.node.HitResultNode.hitTest","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/hit-test.html","searchKeys":["hitTest","val hitTest: HitResultNode.(Frame) -> HitResult?","io.github.sceneview.ar.node.HitResultNode.hitTest"]},{"name":"val iblPrefilter: IBLPrefilter","description":"io.github.sceneview.ar.arcore.LightEstimator.iblPrefilter","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/ibl-prefilter.html","searchKeys":["iblPrefilter","val iblPrefilter: IBLPrefilter","io.github.sceneview.ar.arcore.LightEstimator.iblPrefilter"]},{"name":"val imageName: String","description":"io.github.sceneview.ar.node.AugmentedImageNode.imageName","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/image-name.html","searchKeys":["imageName","val imageName: String","io.github.sceneview.ar.node.AugmentedImageNode.imageName"]},{"name":"val latitude: Double","description":"io.github.sceneview.ar.node.RooftopAnchorNode.latitude","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/latitude.html","searchKeys":["latitude","val latitude: Double","io.github.sceneview.ar.node.RooftopAnchorNode.latitude"]},{"name":"val latitude: Double","description":"io.github.sceneview.ar.node.TerrainAnchorNode.latitude","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/latitude.html","searchKeys":["latitude","val latitude: Double","io.github.sceneview.ar.node.TerrainAnchorNode.latitude"]},{"name":"val longitude: Double","description":"io.github.sceneview.ar.node.RooftopAnchorNode.longitude","location":"arsceneview/io.github.sceneview.ar.node/-rooftop-anchor-node/longitude.html","searchKeys":["longitude","val longitude: Double","io.github.sceneview.ar.node.RooftopAnchorNode.longitude"]},{"name":"val longitude: Double","description":"io.github.sceneview.ar.node.TerrainAnchorNode.longitude","location":"arsceneview/io.github.sceneview.ar.node/-terrain-anchor-node/longitude.html","searchKeys":["longitude","val longitude: Double","io.github.sceneview.ar.node.TerrainAnchorNode.longitude"]},{"name":"val meshNode: MeshNode","description":"io.github.sceneview.ar.node.AugmentedFaceNode.meshNode","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/mesh-node.html","searchKeys":["meshNode","val meshNode: MeshNode","io.github.sceneview.ar.node.AugmentedFaceNode.meshNode"]},{"name":"val meshNode: MeshNode","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode.meshNode","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/mesh-node.html","searchKeys":["meshNode","val meshNode: MeshNode","io.github.sceneview.ar.node.StreetscapeGeometryNode.meshNode"]},{"name":"val onArSessionFailed: (Exception) -> Unit","description":"io.github.sceneview.ar.ARCore.onArSessionFailed","location":"arsceneview/io.github.sceneview.ar/-a-r-core/on-ar-session-failed.html","searchKeys":["onArSessionFailed","val onArSessionFailed: (Exception) -> Unit","io.github.sceneview.ar.ARCore.onArSessionFailed"]},{"name":"val onConfigChanged: (session: Session, config: Config) -> Unit","description":"io.github.sceneview.ar.arcore.ARSession.onConfigChanged","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/on-config-changed.html","searchKeys":["onConfigChanged","val onConfigChanged: (session: Session, config: Config) -> Unit","io.github.sceneview.ar.arcore.ARSession.onConfigChanged"]},{"name":"val onLightEstimationUpdated: (estimation: LightEstimator.Estimation?) -> Unit? = null","description":"io.github.sceneview.ar.ARSceneView.onLightEstimationUpdated","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-light-estimation-updated.html","searchKeys":["onLightEstimationUpdated","val onLightEstimationUpdated: (estimation: LightEstimator.Estimation?) -> Unit? = null","io.github.sceneview.ar.ARSceneView.onLightEstimationUpdated"]},{"name":"val onPaused: (session: Session) -> Unit","description":"io.github.sceneview.ar.arcore.ARSession.onPaused","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/on-paused.html","searchKeys":["onPaused","val onPaused: (session: Session) -> Unit","io.github.sceneview.ar.arcore.ARSession.onPaused"]},{"name":"val onResumed: (session: Session) -> Unit","description":"io.github.sceneview.ar.arcore.ARSession.onResumed","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/on-resumed.html","searchKeys":["onResumed","val onResumed: (session: Session) -> Unit","io.github.sceneview.ar.arcore.ARSession.onResumed"]},{"name":"val onSessionConfigChanged: (session: Session, config: Config) -> Unit","description":"io.github.sceneview.ar.ARCore.onSessionConfigChanged","location":"arsceneview/io.github.sceneview.ar/-a-r-core/on-session-config-changed.html","searchKeys":["onSessionConfigChanged","val onSessionConfigChanged: (session: Session, config: Config) -> Unit","io.github.sceneview.ar.ARCore.onSessionConfigChanged"]},{"name":"val onSessionCreated: (session: Session) -> Unit","description":"io.github.sceneview.ar.ARCore.onSessionCreated","location":"arsceneview/io.github.sceneview.ar/-a-r-core/on-session-created.html","searchKeys":["onSessionCreated","val onSessionCreated: (session: Session) -> Unit","io.github.sceneview.ar.ARCore.onSessionCreated"]},{"name":"val onSessionPaused: (session: Session) -> Unit","description":"io.github.sceneview.ar.ARCore.onSessionPaused","location":"arsceneview/io.github.sceneview.ar/-a-r-core/on-session-paused.html","searchKeys":["onSessionPaused","val onSessionPaused: (session: Session) -> Unit","io.github.sceneview.ar.ARCore.onSessionPaused"]},{"name":"val onSessionResumed: (session: Session) -> Unit","description":"io.github.sceneview.ar.ARCore.onSessionResumed","location":"arsceneview/io.github.sceneview.ar/-a-r-core/on-session-resumed.html","searchKeys":["onSessionResumed","val onSessionResumed: (session: Session) -> Unit","io.github.sceneview.ar.ARCore.onSessionResumed"]},{"name":"val onTrackingMethodChanged: (AugmentedImage.TrackingMethod) -> Unit? = null","description":"io.github.sceneview.ar.node.AugmentedImageNode.onTrackingMethodChanged","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/on-tracking-method-changed.html","searchKeys":["onTrackingMethodChanged","val onTrackingMethodChanged: (AugmentedImage.TrackingMethod) -> Unit? = null","io.github.sceneview.ar.node.AugmentedImageNode.onTrackingMethodChanged"]},{"name":"val planeMaterial: Material","description":"io.github.sceneview.ar.scene.PlaneRenderer.planeMaterial","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/plane-material.html","searchKeys":["planeMaterial","val planeMaterial: Material","io.github.sceneview.ar.scene.PlaneRenderer.planeMaterial"]},{"name":"val planeRenderer: PlaneRenderer","description":"io.github.sceneview.ar.ARSceneView.planeRenderer","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/plane-renderer.html","searchKeys":["planeRenderer","val planeRenderer: PlaneRenderer","io.github.sceneview.ar.ARSceneView.planeRenderer"]},{"name":"val planeTexture: Texture","description":"io.github.sceneview.ar.scene.PlaneRenderer.planeTexture","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/plane-texture.html","searchKeys":["planeTexture","val planeTexture: Texture","io.github.sceneview.ar.scene.PlaneRenderer.planeTexture"]},{"name":"val quality: StreetscapeGeometry.Quality","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode.quality","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/quality.html","searchKeys":["quality","val quality: StreetscapeGeometry.Quality","io.github.sceneview.ar.node.StreetscapeGeometryNode.quality"]},{"name":"val regionNodes: Map<AugmentedFace.RegionType, PoseNode>","description":"io.github.sceneview.ar.node.AugmentedFaceNode.regionNodes","location":"arsceneview/io.github.sceneview.ar.node/-augmented-face-node/region-nodes.html","searchKeys":["regionNodes","val regionNodes: Map<AugmentedFace.RegionType, PoseNode>","io.github.sceneview.ar.node.AugmentedFaceNode.regionNodes"]},{"name":"val session: ARSession?","description":"io.github.sceneview.ar.ARSceneView.session","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/session.html","searchKeys":["session","val session: ARSession?","io.github.sceneview.ar.ARSceneView.session"]},{"name":"val sessionCameraConfig: (Session) -> CameraConfig? = null","description":"io.github.sceneview.ar.ARSceneView.sessionCameraConfig","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/session-camera-config.html","searchKeys":["sessionCameraConfig","val sessionCameraConfig: (Session) -> CameraConfig? = null","io.github.sceneview.ar.ARSceneView.sessionCameraConfig"]},{"name":"val sessionFeatures: Set<Session.Feature>","description":"io.github.sceneview.ar.ARSceneView.sessionFeatures","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/session-features.html","searchKeys":["sessionFeatures","val sessionFeatures: Set<Session.Feature>","io.github.sceneview.ar.ARSceneView.sessionFeatures"]},{"name":"val standardMaterial: Material","description":"io.github.sceneview.ar.camera.ARCameraStream.standardMaterial","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/standard-material.html","searchKeys":["standardMaterial","val standardMaterial: Material","io.github.sceneview.ar.camera.ARCameraStream.standardMaterial"]},{"name":"val streetscapeGeometry: StreetscapeGeometry","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode.streetscapeGeometry","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/streetscape-geometry.html","searchKeys":["streetscapeGeometry","val streetscapeGeometry: StreetscapeGeometry","io.github.sceneview.ar.node.StreetscapeGeometryNode.streetscapeGeometry"]},{"name":"val type: StreetscapeGeometry.Type","description":"io.github.sceneview.ar.node.StreetscapeGeometryNode.type","location":"arsceneview/io.github.sceneview.ar.node/-streetscape-geometry-node/type.html","searchKeys":["type","val type: StreetscapeGeometry.Type","io.github.sceneview.ar.node.StreetscapeGeometryNode.type"]},{"name":"val visibleTrackingMethods: Set<AugmentedImage.TrackingMethod>","description":"io.github.sceneview.ar.node.AugmentedImageNode.visibleTrackingMethods","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/visible-tracking-methods.html","searchKeys":["visibleTrackingMethods","val visibleTrackingMethods: Set<AugmentedImage.TrackingMethod>","io.github.sceneview.ar.node.AugmentedImageNode.visibleTrackingMethods"]},{"name":"val visibleTrackingStates: Set<TrackingState>","description":"io.github.sceneview.ar.node.TrackableNode.visibleTrackingStates","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/visible-tracking-states.html","searchKeys":["visibleTrackingStates","val visibleTrackingStates: Set<TrackingState>","io.github.sceneview.ar.node.TrackableNode.visibleTrackingStates"]},{"name":"var Node.isFocusable: Boolean","description":"io.github.sceneview.ar.isFocusable","location":"arsceneview/io.github.sceneview.ar/is-focusable.html","searchKeys":["isFocusable","var Node.isFocusable: Boolean","io.github.sceneview.ar.isFocusable"]},{"name":"var Node.localPosition: Float3","description":"io.github.sceneview.ar.localPosition","location":"arsceneview/io.github.sceneview.ar/local-position.html","searchKeys":["localPosition","var Node.localPosition: Float3","io.github.sceneview.ar.localPosition"]},{"name":"var Node.localRotation: Float3","description":"io.github.sceneview.ar.localRotation","location":"arsceneview/io.github.sceneview.ar/local-rotation.html","searchKeys":["localRotation","var Node.localRotation: Float3","io.github.sceneview.ar.localRotation"]},{"name":"var Node.localScale: Float3","description":"io.github.sceneview.ar.localScale","location":"arsceneview/io.github.sceneview.ar/local-scale.html","searchKeys":["localScale","var Node.localScale: Float3","io.github.sceneview.ar.localScale"]},{"name":"var anchor: Anchor","description":"io.github.sceneview.ar.node.AnchorNode.anchor","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/anchor.html","searchKeys":["anchor","var anchor: Anchor","io.github.sceneview.ar.node.AnchorNode.anchor"]},{"name":"var applyImageScale: Boolean","description":"io.github.sceneview.ar.node.AugmentedImageNode.applyImageScale","location":"arsceneview/io.github.sceneview.ar.node/-augmented-image-node/apply-image-scale.html","searchKeys":["applyImageScale","var applyImageScale: Boolean","io.github.sceneview.ar.node.AugmentedImageNode.applyImageScale"]},{"name":"var cameraStream: ARCameraStream?","description":"io.github.sceneview.ar.ARSceneView.cameraStream","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/camera-stream.html","searchKeys":["cameraStream","var cameraStream: ARCameraStream?","io.github.sceneview.ar.ARSceneView.cameraStream"]},{"name":"var cameraTexture: Texture","description":"io.github.sceneview.ar.camera.ARCameraStream.cameraTexture","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/camera-texture.html","searchKeys":["cameraTexture","var cameraTexture: Texture","io.github.sceneview.ar.camera.ARCameraStream.cameraTexture"]},{"name":"var cameraTextures: Map<Int, Texture>","description":"io.github.sceneview.ar.camera.ARCameraStream.cameraTextures","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/camera-textures.html","searchKeys":["cameraTextures","var cameraTextures: Map<Int, Texture>","io.github.sceneview.ar.camera.ARCameraStream.cameraTextures"]},{"name":"var checkAvailability: Boolean","description":"io.github.sceneview.ar.ARCore.checkAvailability","location":"arsceneview/io.github.sceneview.ar/-a-r-core/check-availability.html","searchKeys":["checkAvailability","var checkAvailability: Boolean","io.github.sceneview.ar.ARCore.checkAvailability"]},{"name":"var checkCameraPermission: Boolean","description":"io.github.sceneview.ar.ARCore.checkCameraPermission","location":"arsceneview/io.github.sceneview.ar/-a-r-core/check-camera-permission.html","searchKeys":["checkCameraPermission","var checkCameraPermission: Boolean","io.github.sceneview.ar.ARCore.checkCameraPermission"]},{"name":"var cloudAnchorId: String?","description":"io.github.sceneview.ar.node.CloudAnchorNode.cloudAnchorId","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/cloud-anchor-id.html","searchKeys":["cloudAnchorId","var cloudAnchorId: String?","io.github.sceneview.ar.node.CloudAnchorNode.cloudAnchorId"]},{"name":"var depthOcclusionMaterial: Material","description":"io.github.sceneview.ar.camera.ARCameraStream.depthOcclusionMaterial","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/depth-occlusion-material.html","searchKeys":["depthOcclusionMaterial","var depthOcclusionMaterial: Material","io.github.sceneview.ar.camera.ARCameraStream.depthOcclusionMaterial"]},{"name":"var displayHeight: Int","description":"io.github.sceneview.ar.arcore.ARSession.displayHeight","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/display-height.html","searchKeys":["displayHeight","var displayHeight: Int","io.github.sceneview.ar.arcore.ARSession.displayHeight"]},{"name":"var displayRotation: Int","description":"io.github.sceneview.ar.arcore.ARSession.displayRotation","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/display-rotation.html","searchKeys":["displayRotation","var displayRotation: Int","io.github.sceneview.ar.arcore.ARSession.displayRotation"]},{"name":"var displayWidth: Int","description":"io.github.sceneview.ar.arcore.ARSession.displayWidth","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/display-width.html","searchKeys":["displayWidth","var displayWidth: Int","io.github.sceneview.ar.arcore.ARSession.displayWidth"]},{"name":"var environmentalHdrMainLightDirection: Boolean","description":"io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrMainLightDirection","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/environmental-hdr-main-light-direction.html","searchKeys":["environmentalHdrMainLightDirection","var environmentalHdrMainLightDirection: Boolean","io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrMainLightDirection"]},{"name":"var environmentalHdrMainLightIntensity: Boolean","description":"io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrMainLightIntensity","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/environmental-hdr-main-light-intensity.html","searchKeys":["environmentalHdrMainLightIntensity","var environmentalHdrMainLightIntensity: Boolean","io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrMainLightIntensity"]},{"name":"var environmentalHdrReflections: Boolean","description":"io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrReflections","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/environmental-hdr-reflections.html","searchKeys":["environmentalHdrReflections","var environmentalHdrReflections: Boolean","io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrReflections"]},{"name":"var environmentalHdrSpecularFilter: Boolean","description":"io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrSpecularFilter","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/environmental-hdr-specular-filter.html","searchKeys":["environmentalHdrSpecularFilter","var environmentalHdrSpecularFilter: Boolean","io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrSpecularFilter"]},{"name":"var environmentalHdrSphericalHarmonics: Boolean","description":"io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrSphericalHarmonics","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/environmental-hdr-spherical-harmonics.html","searchKeys":["environmentalHdrSphericalHarmonics","var environmentalHdrSphericalHarmonics: Boolean","io.github.sceneview.ar.arcore.LightEstimator.environmentalHdrSphericalHarmonics"]},{"name":"var frame: Frame?","description":"io.github.sceneview.ar.ARSceneView.frame","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/frame.html","searchKeys":["frame","var frame: Frame?","io.github.sceneview.ar.ARSceneView.frame"]},{"name":"var frame: Frame?","description":"io.github.sceneview.ar.arcore.ARSession.frame","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/frame.html","searchKeys":["frame","var frame: Frame?","io.github.sceneview.ar.arcore.ARSession.frame"]},{"name":"var frame: Frame?","description":"io.github.sceneview.ar.node.ARCameraNode.frame","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/frame.html","searchKeys":["frame","var frame: Frame?","io.github.sceneview.ar.node.ARCameraNode.frame"]},{"name":"var frame: Frame?","description":"io.github.sceneview.ar.node.PoseNode.frame","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/frame.html","searchKeys":["frame","var frame: Frame?","io.github.sceneview.ar.node.PoseNode.frame"]},{"name":"var hasAugmentedImageDatabase: Boolean","description":"io.github.sceneview.ar.arcore.ARSession.hasAugmentedImageDatabase","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/has-augmented-image-database.html","searchKeys":["hasAugmentedImageDatabase","var hasAugmentedImageDatabase: Boolean","io.github.sceneview.ar.arcore.ARSession.hasAugmentedImageDatabase"]},{"name":"var hostState: Anchor.CloudAnchorState","description":"io.github.sceneview.ar.node.CloudAnchorNode.hostState","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/host-state.html","searchKeys":["hostState","var hostState: Anchor.CloudAnchorState","io.github.sceneview.ar.node.CloudAnchorNode.hostState"]},{"name":"var hostTask: HostCloudAnchorFuture?","description":"io.github.sceneview.ar.node.CloudAnchorNode.hostTask","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/host-task.html","searchKeys":["hostTask","var hostTask: HostCloudAnchorFuture?","io.github.sceneview.ar.node.CloudAnchorNode.hostTask"]},{"name":"var indirectLightEstimated: IndirectLight?","description":"io.github.sceneview.ar.ARSceneView.indirectLightEstimated","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/indirect-light-estimated.html","searchKeys":["indirectLightEstimated","var indirectLightEstimated: IndirectLight?","io.github.sceneview.ar.ARSceneView.indirectLightEstimated"]},{"name":"var irradiance: FloatArray?","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation.irradiance","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/irradiance.html","searchKeys":["irradiance","var irradiance: FloatArray?","io.github.sceneview.ar.arcore.LightEstimator.Estimation.irradiance"]},{"name":"var isDepthOcclusionEnabled: Boolean","description":"io.github.sceneview.ar.camera.ARCameraStream.isDepthOcclusionEnabled","location":"arsceneview/io.github.sceneview.ar.camera/-a-r-camera-stream/is-depth-occlusion-enabled.html","searchKeys":["isDepthOcclusionEnabled","var isDepthOcclusionEnabled: Boolean","io.github.sceneview.ar.camera.ARCameraStream.isDepthOcclusionEnabled"]},{"name":"var isEnabled: Boolean","description":"io.github.sceneview.ar.arcore.LightEstimator.isEnabled","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/is-enabled.html","searchKeys":["isEnabled","var isEnabled: Boolean","io.github.sceneview.ar.arcore.LightEstimator.isEnabled"]},{"name":"var isEnabled: Boolean","description":"io.github.sceneview.ar.scene.PlaneRenderer.isEnabled","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/is-enabled.html","searchKeys":["isEnabled","var isEnabled: Boolean","io.github.sceneview.ar.scene.PlaneRenderer.isEnabled"]},{"name":"var isResumed: Boolean","description":"io.github.sceneview.ar.arcore.ARSession.isResumed","location":"arsceneview/io.github.sceneview.ar.arcore/-a-r-session/is-resumed.html","searchKeys":["isResumed","var isResumed: Boolean","io.github.sceneview.ar.arcore.ARSession.isResumed"]},{"name":"var isShadowReceiver: Boolean","description":"io.github.sceneview.ar.scene.PlaneRenderer.isShadowReceiver","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/is-shadow-receiver.html","searchKeys":["isShadowReceiver","var isShadowReceiver: Boolean","io.github.sceneview.ar.scene.PlaneRenderer.isShadowReceiver"]},{"name":"var isVisible: Boolean","description":"io.github.sceneview.ar.scene.PlaneRenderer.isVisible","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/is-visible.html","searchKeys":["isVisible","var isVisible: Boolean","io.github.sceneview.ar.scene.PlaneRenderer.isVisible"]},{"name":"var lightEstimation: LightEstimator.Estimation?","description":"io.github.sceneview.ar.ARSceneView.lightEstimation","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/light-estimation.html","searchKeys":["lightEstimation","var lightEstimation: LightEstimator.Estimation?","io.github.sceneview.ar.ARSceneView.lightEstimation"]},{"name":"var lightEstimator: LightEstimator?","description":"io.github.sceneview.ar.ARSceneView.lightEstimator","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/light-estimator.html","searchKeys":["lightEstimator","var lightEstimator: LightEstimator?","io.github.sceneview.ar.ARSceneView.lightEstimator"]},{"name":"var mainLightColor: Color?","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation.mainLightColor","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/main-light-color.html","searchKeys":["mainLightColor","var mainLightColor: Color?","io.github.sceneview.ar.arcore.LightEstimator.Estimation.mainLightColor"]},{"name":"var mainLightDirection: Direction?","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation.mainLightDirection","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/main-light-direction.html","searchKeys":["mainLightDirection","var mainLightDirection: Direction?","io.github.sceneview.ar.arcore.LightEstimator.Estimation.mainLightDirection"]},{"name":"var mainLightEstimatedNode: LightNode?","description":"io.github.sceneview.ar.ARSceneView.mainLightEstimatedNode","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/main-light-estimated-node.html","searchKeys":["mainLightEstimatedNode","var mainLightEstimatedNode: LightNode?","io.github.sceneview.ar.ARSceneView.mainLightEstimatedNode"]},{"name":"var mainLightIntensity: Float?","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation.mainLightIntensity","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/main-light-intensity.html","searchKeys":["mainLightIntensity","var mainLightIntensity: Float?","io.github.sceneview.ar.arcore.LightEstimator.Estimation.mainLightIntensity"]},{"name":"var maxHitTestPerSecond: Int","description":"io.github.sceneview.ar.scene.PlaneRenderer.maxHitTestPerSecond","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/max-hit-test-per-second.html","searchKeys":["maxHitTestPerSecond","var maxHitTestPerSecond: Int","io.github.sceneview.ar.scene.PlaneRenderer.maxHitTestPerSecond"]},{"name":"var moveHitTest: PoseNode.(Frame, MotionEvent) -> HitResult?","description":"io.github.sceneview.ar.node.PoseNode.moveHitTest","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/move-hit-test.html","searchKeys":["moveHitTest","var moveHitTest: PoseNode.(Frame, MotionEvent) -> HitResult?","io.github.sceneview.ar.node.PoseNode.moveHitTest"]},{"name":"var onAnchorChanged: (Anchor) -> Unit?","description":"io.github.sceneview.ar.node.AnchorNode.onAnchorChanged","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/on-anchor-changed.html","searchKeys":["onAnchorChanged","var onAnchorChanged: (Anchor) -> Unit?","io.github.sceneview.ar.node.AnchorNode.onAnchorChanged"]},{"name":"var onHosted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit?","description":"io.github.sceneview.ar.node.CloudAnchorNode.onHosted","location":"arsceneview/io.github.sceneview.ar.node/-cloud-anchor-node/on-hosted.html","searchKeys":["onHosted","var onHosted: (cloudAnchorId: String?, state: Anchor.CloudAnchorState) -> Unit?","io.github.sceneview.ar.node.CloudAnchorNode.onHosted"]},{"name":"var onPoseChanged: (Pose) -> Unit?","description":"io.github.sceneview.ar.node.PoseNode.onPoseChanged","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/on-pose-changed.html","searchKeys":["onPoseChanged","var onPoseChanged: (Pose) -> Unit?","io.github.sceneview.ar.node.PoseNode.onPoseChanged"]},{"name":"var onSessionConfigChanged: (session: Session, config: Config) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onSessionConfigChanged","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-config-changed.html","searchKeys":["onSessionConfigChanged","var onSessionConfigChanged: (session: Session, config: Config) -> Unit?","io.github.sceneview.ar.ARSceneView.onSessionConfigChanged"]},{"name":"var onSessionCreated: (session: Session) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onSessionCreated","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-created.html","searchKeys":["onSessionCreated","var onSessionCreated: (session: Session) -> Unit?","io.github.sceneview.ar.ARSceneView.onSessionCreated"]},{"name":"var onSessionFailed: (Exception) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onSessionFailed","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-failed.html","searchKeys":["onSessionFailed","var onSessionFailed: (Exception) -> Unit?","io.github.sceneview.ar.ARSceneView.onSessionFailed"]},{"name":"var onSessionPaused: (session: Session) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onSessionPaused","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-paused.html","searchKeys":["onSessionPaused","var onSessionPaused: (session: Session) -> Unit?","io.github.sceneview.ar.ARSceneView.onSessionPaused"]},{"name":"var onSessionResumed: (session: Session) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onSessionResumed","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-resumed.html","searchKeys":["onSessionResumed","var onSessionResumed: (session: Session) -> Unit?","io.github.sceneview.ar.ARSceneView.onSessionResumed"]},{"name":"var onSessionUpdated: (session: Session, frame: Frame) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onSessionUpdated","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-session-updated.html","searchKeys":["onSessionUpdated","var onSessionUpdated: (session: Session, frame: Frame) -> Unit?","io.github.sceneview.ar.ARSceneView.onSessionUpdated"]},{"name":"var onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.onTrackingFailureChanged","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/on-tracking-failure-changed.html","searchKeys":["onTrackingFailureChanged","var onTrackingFailureChanged: (trackingFailureReason: TrackingFailureReason?) -> Unit?","io.github.sceneview.ar.ARSceneView.onTrackingFailureChanged"]},{"name":"var onTrackingStateChanged: (TrackingState) -> Unit?","description":"io.github.sceneview.ar.node.AnchorNode.onTrackingStateChanged","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/on-tracking-state-changed.html","searchKeys":["onTrackingStateChanged","var onTrackingStateChanged: (TrackingState) -> Unit?","io.github.sceneview.ar.node.AnchorNode.onTrackingStateChanged"]},{"name":"var onTrackingStateChanged: (TrackingState) -> Unit?","description":"io.github.sceneview.ar.node.TrackableNode.onTrackingStateChanged","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/on-tracking-state-changed.html","searchKeys":["onTrackingStateChanged","var onTrackingStateChanged: (TrackingState) -> Unit?","io.github.sceneview.ar.node.TrackableNode.onTrackingStateChanged"]},{"name":"var onUpdated: (Anchor) -> Unit?","description":"io.github.sceneview.ar.node.AnchorNode.onUpdated","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/on-updated.html","searchKeys":["onUpdated","var onUpdated: (Anchor) -> Unit?","io.github.sceneview.ar.node.AnchorNode.onUpdated"]},{"name":"var onUpdated: (T) -> Unit?","description":"io.github.sceneview.ar.node.TrackableNode.onUpdated","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/on-updated.html","searchKeys":["onUpdated","var onUpdated: (T) -> Unit?","io.github.sceneview.ar.node.TrackableNode.onUpdated"]},{"name":"var planeRendererMode: PlaneRenderer.PlaneRendererMode","description":"io.github.sceneview.ar.scene.PlaneRenderer.planeRendererMode","location":"arsceneview/io.github.sceneview.ar.scene/-plane-renderer/plane-renderer-mode.html","searchKeys":["planeRendererMode","var planeRendererMode: PlaneRenderer.PlaneRendererMode","io.github.sceneview.ar.scene.PlaneRenderer.planeRendererMode"]},{"name":"var pose: Pose","description":"io.github.sceneview.ar.node.PoseNode.pose","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/pose.html","searchKeys":["pose","var pose: Pose","io.github.sceneview.ar.node.PoseNode.pose"]},{"name":"var reflections: Texture?","description":"io.github.sceneview.ar.arcore.LightEstimator.Estimation.reflections","location":"arsceneview/io.github.sceneview.ar.arcore/-light-estimator/-estimation/reflections.html","searchKeys":["reflections","var reflections: Texture?","io.github.sceneview.ar.arcore.LightEstimator.Estimation.reflections"]},{"name":"var session: Session?","description":"io.github.sceneview.ar.node.ARCameraNode.session","location":"arsceneview/io.github.sceneview.ar.node/-a-r-camera-node/session.html","searchKeys":["session","var session: Session?","io.github.sceneview.ar.node.ARCameraNode.session"]},{"name":"var session: Session?","description":"io.github.sceneview.ar.node.PoseNode.session","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/session.html","searchKeys":["session","var session: Session?","io.github.sceneview.ar.node.PoseNode.session"]},{"name":"var sessionConfiguration: (session: Session, Config) -> Unit?","description":"io.github.sceneview.ar.ARSceneView.sessionConfiguration","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/session-configuration.html","searchKeys":["sessionConfiguration","var sessionConfiguration: (session: Session, Config) -> Unit?","io.github.sceneview.ar.ARSceneView.sessionConfiguration"]},{"name":"var trackable: T?","description":"io.github.sceneview.ar.node.TrackableNode.trackable","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/trackable.html","searchKeys":["trackable","var trackable: T?","io.github.sceneview.ar.node.TrackableNode.trackable"]},{"name":"var trackingFailureReason: TrackingFailureReason?","description":"io.github.sceneview.ar.ARSceneView.trackingFailureReason","location":"arsceneview/io.github.sceneview.ar/-a-r-scene-view/tracking-failure-reason.html","searchKeys":["trackingFailureReason","var trackingFailureReason: TrackingFailureReason?","io.github.sceneview.ar.ARSceneView.trackingFailureReason"]},{"name":"var trackingState: TrackingState","description":"io.github.sceneview.ar.node.TrackableNode.trackingState","location":"arsceneview/io.github.sceneview.ar.node/-trackable-node/tracking-state.html","searchKeys":["trackingState","var trackingState: TrackingState","io.github.sceneview.ar.node.TrackableNode.trackingState"]},{"name":"var update: Boolean","description":"io.github.sceneview.ar.node.HitResultNode.update","location":"arsceneview/io.github.sceneview.ar.node/-hit-result-node/update.html","searchKeys":["update","var update: Boolean","io.github.sceneview.ar.node.HitResultNode.update"]},{"name":"var updateAnchorPose: Boolean","description":"io.github.sceneview.ar.node.AnchorNode.updateAnchorPose","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/update-anchor-pose.html","searchKeys":["updateAnchorPose","var updateAnchorPose: Boolean","io.github.sceneview.ar.node.AnchorNode.updateAnchorPose"]},{"name":"var visibleCameraTrackingStates: Set<TrackingState>","description":"io.github.sceneview.ar.node.PoseNode.visibleCameraTrackingStates","location":"arsceneview/io.github.sceneview.ar.node/-pose-node/visible-camera-tracking-states.html","searchKeys":["visibleCameraTrackingStates","var visibleCameraTrackingStates: Set<TrackingState>","io.github.sceneview.ar.node.PoseNode.visibleCameraTrackingStates"]},{"name":"var visibleTrackingStates: Set<TrackingState>","description":"io.github.sceneview.ar.node.AnchorNode.visibleTrackingStates","location":"arsceneview/io.github.sceneview.ar.node/-anchor-node/visible-tracking-states.html","searchKeys":["visibleTrackingStates","var visibleTrackingStates: Set<TrackingState>","io.github.sceneview.ar.node.AnchorNode.visibleTrackingStates"]}]